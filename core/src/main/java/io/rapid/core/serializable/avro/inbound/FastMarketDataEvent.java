/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.core.serializable.avro.inbound;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** 五档快速行情数据结构 */
@org.apache.avro.specific.AvroGenerated
public class FastMarketDataEvent extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -1213646073719928982L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FastMarketDataEvent\",\"namespace\":\"io.rapid.core.serializable.avro.inbound\",\"doc\":\"五档快速行情数据结构\",\"fields\":[{\"name\":\"timestamp\",\"type\":\"long\"},{\"name\":\"instrumentId\",\"type\":\"int\"},{\"name\":\"instrumentCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"}},{\"name\":\"lastPrice\",\"type\":\"double\"},{\"name\":\"volume\",\"type\":\"int\"},{\"name\":\"turnover\",\"type\":\"long\"},{\"name\":\"bidPrice1\",\"type\":\"double\"},{\"name\":\"bidPrice2\",\"type\":\"double\"},{\"name\":\"bidPrice3\",\"type\":\"double\"},{\"name\":\"bidPrice4\",\"type\":\"double\"},{\"name\":\"bidPrice5\",\"type\":\"double\"},{\"name\":\"bidVolume1\",\"type\":\"int\"},{\"name\":\"bidVolume2\",\"type\":\"int\"},{\"name\":\"bidVolume3\",\"type\":\"int\"},{\"name\":\"bidVolume4\",\"type\":\"int\"},{\"name\":\"bidVolume5\",\"type\":\"int\"},{\"name\":\"askPrice1\",\"type\":\"double\"},{\"name\":\"askPrice2\",\"type\":\"double\"},{\"name\":\"askPrice3\",\"type\":\"double\"},{\"name\":\"askPrice4\",\"type\":\"double\"},{\"name\":\"askPrice5\",\"type\":\"double\"},{\"name\":\"askVolume1\",\"type\":\"int\"},{\"name\":\"askVolume2\",\"type\":\"int\"},{\"name\":\"askVolume3\",\"type\":\"int\"},{\"name\":\"askVolume4\",\"type\":\"int\"},{\"name\":\"askVolume5\",\"type\":\"int\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FastMarketDataEvent> ENCODER =
      new BinaryMessageEncoder<FastMarketDataEvent>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FastMarketDataEvent> DECODER =
      new BinaryMessageDecoder<FastMarketDataEvent>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FastMarketDataEvent> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FastMarketDataEvent> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FastMarketDataEvent> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FastMarketDataEvent>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FastMarketDataEvent to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FastMarketDataEvent from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FastMarketDataEvent instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FastMarketDataEvent fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  private long timestamp;
  private int instrumentId;
  private java.lang.String instrumentCode;
  private double lastPrice;
  private int volume;
  private long turnover;
  private double bidPrice1;
  private double bidPrice2;
  private double bidPrice3;
  private double bidPrice4;
  private double bidPrice5;
  private int bidVolume1;
  private int bidVolume2;
  private int bidVolume3;
  private int bidVolume4;
  private int bidVolume5;
  private double askPrice1;
  private double askPrice2;
  private double askPrice3;
  private double askPrice4;
  private double askPrice5;
  private int askVolume1;
  private int askVolume2;
  private int askVolume3;
  private int askVolume4;
  private int askVolume5;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FastMarketDataEvent() {}

  /**
   * All-args constructor.
   * @param timestamp The new value for timestamp
   * @param instrumentId The new value for instrumentId
   * @param instrumentCode The new value for instrumentCode
   * @param lastPrice The new value for lastPrice
   * @param volume The new value for volume
   * @param turnover The new value for turnover
   * @param bidPrice1 The new value for bidPrice1
   * @param bidPrice2 The new value for bidPrice2
   * @param bidPrice3 The new value for bidPrice3
   * @param bidPrice4 The new value for bidPrice4
   * @param bidPrice5 The new value for bidPrice5
   * @param bidVolume1 The new value for bidVolume1
   * @param bidVolume2 The new value for bidVolume2
   * @param bidVolume3 The new value for bidVolume3
   * @param bidVolume4 The new value for bidVolume4
   * @param bidVolume5 The new value for bidVolume5
   * @param askPrice1 The new value for askPrice1
   * @param askPrice2 The new value for askPrice2
   * @param askPrice3 The new value for askPrice3
   * @param askPrice4 The new value for askPrice4
   * @param askPrice5 The new value for askPrice5
   * @param askVolume1 The new value for askVolume1
   * @param askVolume2 The new value for askVolume2
   * @param askVolume3 The new value for askVolume3
   * @param askVolume4 The new value for askVolume4
   * @param askVolume5 The new value for askVolume5
   */
  public FastMarketDataEvent(java.lang.Long timestamp, java.lang.Integer instrumentId, java.lang.String instrumentCode, java.lang.Double lastPrice, java.lang.Integer volume, java.lang.Long turnover, java.lang.Double bidPrice1, java.lang.Double bidPrice2, java.lang.Double bidPrice3, java.lang.Double bidPrice4, java.lang.Double bidPrice5, java.lang.Integer bidVolume1, java.lang.Integer bidVolume2, java.lang.Integer bidVolume3, java.lang.Integer bidVolume4, java.lang.Integer bidVolume5, java.lang.Double askPrice1, java.lang.Double askPrice2, java.lang.Double askPrice3, java.lang.Double askPrice4, java.lang.Double askPrice5, java.lang.Integer askVolume1, java.lang.Integer askVolume2, java.lang.Integer askVolume3, java.lang.Integer askVolume4, java.lang.Integer askVolume5) {
    this.timestamp = timestamp;
    this.instrumentId = instrumentId;
    this.instrumentCode = instrumentCode;
    this.lastPrice = lastPrice;
    this.volume = volume;
    this.turnover = turnover;
    this.bidPrice1 = bidPrice1;
    this.bidPrice2 = bidPrice2;
    this.bidPrice3 = bidPrice3;
    this.bidPrice4 = bidPrice4;
    this.bidPrice5 = bidPrice5;
    this.bidVolume1 = bidVolume1;
    this.bidVolume2 = bidVolume2;
    this.bidVolume3 = bidVolume3;
    this.bidVolume4 = bidVolume4;
    this.bidVolume5 = bidVolume5;
    this.askPrice1 = askPrice1;
    this.askPrice2 = askPrice2;
    this.askPrice3 = askPrice3;
    this.askPrice4 = askPrice4;
    this.askPrice5 = askPrice5;
    this.askVolume1 = askVolume1;
    this.askVolume2 = askVolume2;
    this.askVolume3 = askVolume3;
    this.askVolume4 = askVolume4;
    this.askVolume5 = askVolume5;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return timestamp;
    case 1: return instrumentId;
    case 2: return instrumentCode;
    case 3: return lastPrice;
    case 4: return volume;
    case 5: return turnover;
    case 6: return bidPrice1;
    case 7: return bidPrice2;
    case 8: return bidPrice3;
    case 9: return bidPrice4;
    case 10: return bidPrice5;
    case 11: return bidVolume1;
    case 12: return bidVolume2;
    case 13: return bidVolume3;
    case 14: return bidVolume4;
    case 15: return bidVolume5;
    case 16: return askPrice1;
    case 17: return askPrice2;
    case 18: return askPrice3;
    case 19: return askPrice4;
    case 20: return askPrice5;
    case 21: return askVolume1;
    case 22: return askVolume2;
    case 23: return askVolume3;
    case 24: return askVolume4;
    case 25: return askVolume5;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: timestamp = (java.lang.Long)value$; break;
    case 1: instrumentId = (java.lang.Integer)value$; break;
    case 2: instrumentCode = value$ != null ? value$.toString() : null; break;
    case 3: lastPrice = (java.lang.Double)value$; break;
    case 4: volume = (java.lang.Integer)value$; break;
    case 5: turnover = (java.lang.Long)value$; break;
    case 6: bidPrice1 = (java.lang.Double)value$; break;
    case 7: bidPrice2 = (java.lang.Double)value$; break;
    case 8: bidPrice3 = (java.lang.Double)value$; break;
    case 9: bidPrice4 = (java.lang.Double)value$; break;
    case 10: bidPrice5 = (java.lang.Double)value$; break;
    case 11: bidVolume1 = (java.lang.Integer)value$; break;
    case 12: bidVolume2 = (java.lang.Integer)value$; break;
    case 13: bidVolume3 = (java.lang.Integer)value$; break;
    case 14: bidVolume4 = (java.lang.Integer)value$; break;
    case 15: bidVolume5 = (java.lang.Integer)value$; break;
    case 16: askPrice1 = (java.lang.Double)value$; break;
    case 17: askPrice2 = (java.lang.Double)value$; break;
    case 18: askPrice3 = (java.lang.Double)value$; break;
    case 19: askPrice4 = (java.lang.Double)value$; break;
    case 20: askPrice5 = (java.lang.Double)value$; break;
    case 21: askVolume1 = (java.lang.Integer)value$; break;
    case 22: askVolume2 = (java.lang.Integer)value$; break;
    case 23: askVolume3 = (java.lang.Integer)value$; break;
    case 24: askVolume4 = (java.lang.Integer)value$; break;
    case 25: askVolume5 = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'timestamp' field.
   * @return The value of the 'timestamp' field.
   */
  public long getTimestamp() {
    return timestamp;
  }


  /**
   * Sets the value of the 'timestamp' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setTimestamp(long value) {
    this.timestamp = value;
    return this;
  }

  /**
   * Gets the value of the 'instrumentId' field.
   * @return The value of the 'instrumentId' field.
   */
  public int getInstrumentId() {
    return instrumentId;
  }


  /**
   * Sets the value of the 'instrumentId' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setInstrumentId(int value) {
    this.instrumentId = value;
    return this;
  }

  /**
   * Gets the value of the 'instrumentCode' field.
   * @return The value of the 'instrumentCode' field.
   */
  public java.lang.String getInstrumentCode() {
    return instrumentCode;
  }


  /**
   * Sets the value of the 'instrumentCode' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setInstrumentCode(java.lang.String value) {
    this.instrumentCode = value;
    return this;
  }

  /**
   * Gets the value of the 'lastPrice' field.
   * @return The value of the 'lastPrice' field.
   */
  public double getLastPrice() {
    return lastPrice;
  }


  /**
   * Sets the value of the 'lastPrice' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setLastPrice(double value) {
    this.lastPrice = value;
    return this;
  }

  /**
   * Gets the value of the 'volume' field.
   * @return The value of the 'volume' field.
   */
  public int getVolume() {
    return volume;
  }


  /**
   * Sets the value of the 'volume' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setVolume(int value) {
    this.volume = value;
    return this;
  }

  /**
   * Gets the value of the 'turnover' field.
   * @return The value of the 'turnover' field.
   */
  public long getTurnover() {
    return turnover;
  }


  /**
   * Sets the value of the 'turnover' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setTurnover(long value) {
    this.turnover = value;
    return this;
  }

  /**
   * Gets the value of the 'bidPrice1' field.
   * @return The value of the 'bidPrice1' field.
   */
  public double getBidPrice1() {
    return bidPrice1;
  }


  /**
   * Sets the value of the 'bidPrice1' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidPrice1(double value) {
    this.bidPrice1 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidPrice2' field.
   * @return The value of the 'bidPrice2' field.
   */
  public double getBidPrice2() {
    return bidPrice2;
  }


  /**
   * Sets the value of the 'bidPrice2' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidPrice2(double value) {
    this.bidPrice2 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidPrice3' field.
   * @return The value of the 'bidPrice3' field.
   */
  public double getBidPrice3() {
    return bidPrice3;
  }


  /**
   * Sets the value of the 'bidPrice3' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidPrice3(double value) {
    this.bidPrice3 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidPrice4' field.
   * @return The value of the 'bidPrice4' field.
   */
  public double getBidPrice4() {
    return bidPrice4;
  }


  /**
   * Sets the value of the 'bidPrice4' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidPrice4(double value) {
    this.bidPrice4 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidPrice5' field.
   * @return The value of the 'bidPrice5' field.
   */
  public double getBidPrice5() {
    return bidPrice5;
  }


  /**
   * Sets the value of the 'bidPrice5' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidPrice5(double value) {
    this.bidPrice5 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidVolume1' field.
   * @return The value of the 'bidVolume1' field.
   */
  public int getBidVolume1() {
    return bidVolume1;
  }


  /**
   * Sets the value of the 'bidVolume1' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidVolume1(int value) {
    this.bidVolume1 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidVolume2' field.
   * @return The value of the 'bidVolume2' field.
   */
  public int getBidVolume2() {
    return bidVolume2;
  }


  /**
   * Sets the value of the 'bidVolume2' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidVolume2(int value) {
    this.bidVolume2 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidVolume3' field.
   * @return The value of the 'bidVolume3' field.
   */
  public int getBidVolume3() {
    return bidVolume3;
  }


  /**
   * Sets the value of the 'bidVolume3' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidVolume3(int value) {
    this.bidVolume3 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidVolume4' field.
   * @return The value of the 'bidVolume4' field.
   */
  public int getBidVolume4() {
    return bidVolume4;
  }


  /**
   * Sets the value of the 'bidVolume4' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidVolume4(int value) {
    this.bidVolume4 = value;
    return this;
  }

  /**
   * Gets the value of the 'bidVolume5' field.
   * @return The value of the 'bidVolume5' field.
   */
  public int getBidVolume5() {
    return bidVolume5;
  }


  /**
   * Sets the value of the 'bidVolume5' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setBidVolume5(int value) {
    this.bidVolume5 = value;
    return this;
  }

  /**
   * Gets the value of the 'askPrice1' field.
   * @return The value of the 'askPrice1' field.
   */
  public double getAskPrice1() {
    return askPrice1;
  }


  /**
   * Sets the value of the 'askPrice1' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskPrice1(double value) {
    this.askPrice1 = value;
    return this;
  }

  /**
   * Gets the value of the 'askPrice2' field.
   * @return The value of the 'askPrice2' field.
   */
  public double getAskPrice2() {
    return askPrice2;
  }


  /**
   * Sets the value of the 'askPrice2' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskPrice2(double value) {
    this.askPrice2 = value;
    return this;
  }

  /**
   * Gets the value of the 'askPrice3' field.
   * @return The value of the 'askPrice3' field.
   */
  public double getAskPrice3() {
    return askPrice3;
  }


  /**
   * Sets the value of the 'askPrice3' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskPrice3(double value) {
    this.askPrice3 = value;
    return this;
  }

  /**
   * Gets the value of the 'askPrice4' field.
   * @return The value of the 'askPrice4' field.
   */
  public double getAskPrice4() {
    return askPrice4;
  }


  /**
   * Sets the value of the 'askPrice4' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskPrice4(double value) {
    this.askPrice4 = value;
    return this;
  }

  /**
   * Gets the value of the 'askPrice5' field.
   * @return The value of the 'askPrice5' field.
   */
  public double getAskPrice5() {
    return askPrice5;
  }


  /**
   * Sets the value of the 'askPrice5' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskPrice5(double value) {
    this.askPrice5 = value;
    return this;
  }

  /**
   * Gets the value of the 'askVolume1' field.
   * @return The value of the 'askVolume1' field.
   */
  public int getAskVolume1() {
    return askVolume1;
  }


  /**
   * Sets the value of the 'askVolume1' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskVolume1(int value) {
    this.askVolume1 = value;
    return this;
  }

  /**
   * Gets the value of the 'askVolume2' field.
   * @return The value of the 'askVolume2' field.
   */
  public int getAskVolume2() {
    return askVolume2;
  }


  /**
   * Sets the value of the 'askVolume2' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskVolume2(int value) {
    this.askVolume2 = value;
    return this;
  }

  /**
   * Gets the value of the 'askVolume3' field.
   * @return The value of the 'askVolume3' field.
   */
  public int getAskVolume3() {
    return askVolume3;
  }


  /**
   * Sets the value of the 'askVolume3' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskVolume3(int value) {
    this.askVolume3 = value;
    return this;
  }

  /**
   * Gets the value of the 'askVolume4' field.
   * @return The value of the 'askVolume4' field.
   */
  public int getAskVolume4() {
    return askVolume4;
  }


  /**
   * Sets the value of the 'askVolume4' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskVolume4(int value) {
    this.askVolume4 = value;
    return this;
  }

  /**
   * Gets the value of the 'askVolume5' field.
   * @return The value of the 'askVolume5' field.
   */
  public int getAskVolume5() {
    return askVolume5;
  }


  /**
   * Sets the value of the 'askVolume5' field.
   * @param value the value to set.
   */
  public FastMarketDataEvent setAskVolume5(int value) {
    this.askVolume5 = value;
    return this;
  }

  /**
   * Creates a new FastMarketDataEvent RecordBuilder.
   * @return A new FastMarketDataEvent RecordBuilder
   */
  public static io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder newBuilder() {
    return new io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder();
  }

  /**
   * Creates a new FastMarketDataEvent RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FastMarketDataEvent RecordBuilder
   */
  public static io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder newBuilder(io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder other) {
    if (other == null) {
      return new io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder();
    } else {
      return new io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder(other);
    }
  }

  /**
   * Creates a new FastMarketDataEvent RecordBuilder by copying an existing FastMarketDataEvent instance.
   * @param other The existing instance to copy.
   * @return A new FastMarketDataEvent RecordBuilder
   */
  public static io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder newBuilder(io.rapid.core.serializable.avro.inbound.FastMarketDataEvent other) {
    if (other == null) {
      return new io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder();
    } else {
      return new io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder(other);
    }
  }

  /**
   * RecordBuilder for FastMarketDataEvent instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FastMarketDataEvent>
    implements org.apache.avro.data.RecordBuilder<FastMarketDataEvent> {

    private long timestamp;
    private int instrumentId;
    private java.lang.String instrumentCode;
    private double lastPrice;
    private int volume;
    private long turnover;
    private double bidPrice1;
    private double bidPrice2;
    private double bidPrice3;
    private double bidPrice4;
    private double bidPrice5;
    private int bidVolume1;
    private int bidVolume2;
    private int bidVolume3;
    private int bidVolume4;
    private int bidVolume5;
    private double askPrice1;
    private double askPrice2;
    private double askPrice3;
    private double askPrice4;
    private double askPrice5;
    private int askVolume1;
    private int askVolume2;
    private int askVolume3;
    private int askVolume4;
    private int askVolume5;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.instrumentId)) {
        this.instrumentId = data().deepCopy(fields()[1].schema(), other.instrumentId);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[2].schema(), other.instrumentCode);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.lastPrice)) {
        this.lastPrice = data().deepCopy(fields()[3].schema(), other.lastPrice);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.volume)) {
        this.volume = data().deepCopy(fields()[4].schema(), other.volume);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.turnover)) {
        this.turnover = data().deepCopy(fields()[5].schema(), other.turnover);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.bidPrice1)) {
        this.bidPrice1 = data().deepCopy(fields()[6].schema(), other.bidPrice1);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.bidPrice2)) {
        this.bidPrice2 = data().deepCopy(fields()[7].schema(), other.bidPrice2);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.bidPrice3)) {
        this.bidPrice3 = data().deepCopy(fields()[8].schema(), other.bidPrice3);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.bidPrice4)) {
        this.bidPrice4 = data().deepCopy(fields()[9].schema(), other.bidPrice4);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.bidPrice5)) {
        this.bidPrice5 = data().deepCopy(fields()[10].schema(), other.bidPrice5);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.bidVolume1)) {
        this.bidVolume1 = data().deepCopy(fields()[11].schema(), other.bidVolume1);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.bidVolume2)) {
        this.bidVolume2 = data().deepCopy(fields()[12].schema(), other.bidVolume2);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.bidVolume3)) {
        this.bidVolume3 = data().deepCopy(fields()[13].schema(), other.bidVolume3);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.bidVolume4)) {
        this.bidVolume4 = data().deepCopy(fields()[14].schema(), other.bidVolume4);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.bidVolume5)) {
        this.bidVolume5 = data().deepCopy(fields()[15].schema(), other.bidVolume5);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.askPrice1)) {
        this.askPrice1 = data().deepCopy(fields()[16].schema(), other.askPrice1);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.askPrice2)) {
        this.askPrice2 = data().deepCopy(fields()[17].schema(), other.askPrice2);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.askPrice3)) {
        this.askPrice3 = data().deepCopy(fields()[18].schema(), other.askPrice3);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.askPrice4)) {
        this.askPrice4 = data().deepCopy(fields()[19].schema(), other.askPrice4);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.askPrice5)) {
        this.askPrice5 = data().deepCopy(fields()[20].schema(), other.askPrice5);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.askVolume1)) {
        this.askVolume1 = data().deepCopy(fields()[21].schema(), other.askVolume1);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.askVolume2)) {
        this.askVolume2 = data().deepCopy(fields()[22].schema(), other.askVolume2);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.askVolume3)) {
        this.askVolume3 = data().deepCopy(fields()[23].schema(), other.askVolume3);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.askVolume4)) {
        this.askVolume4 = data().deepCopy(fields()[24].schema(), other.askVolume4);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.askVolume5)) {
        this.askVolume5 = data().deepCopy(fields()[25].schema(), other.askVolume5);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
    }

    /**
     * Creates a Builder by copying an existing FastMarketDataEvent instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.core.serializable.avro.inbound.FastMarketDataEvent other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.timestamp)) {
        this.timestamp = data().deepCopy(fields()[0].schema(), other.timestamp);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.instrumentId)) {
        this.instrumentId = data().deepCopy(fields()[1].schema(), other.instrumentId);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[2].schema(), other.instrumentCode);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.lastPrice)) {
        this.lastPrice = data().deepCopy(fields()[3].schema(), other.lastPrice);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.volume)) {
        this.volume = data().deepCopy(fields()[4].schema(), other.volume);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.turnover)) {
        this.turnover = data().deepCopy(fields()[5].schema(), other.turnover);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.bidPrice1)) {
        this.bidPrice1 = data().deepCopy(fields()[6].schema(), other.bidPrice1);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.bidPrice2)) {
        this.bidPrice2 = data().deepCopy(fields()[7].schema(), other.bidPrice2);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.bidPrice3)) {
        this.bidPrice3 = data().deepCopy(fields()[8].schema(), other.bidPrice3);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.bidPrice4)) {
        this.bidPrice4 = data().deepCopy(fields()[9].schema(), other.bidPrice4);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.bidPrice5)) {
        this.bidPrice5 = data().deepCopy(fields()[10].schema(), other.bidPrice5);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.bidVolume1)) {
        this.bidVolume1 = data().deepCopy(fields()[11].schema(), other.bidVolume1);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.bidVolume2)) {
        this.bidVolume2 = data().deepCopy(fields()[12].schema(), other.bidVolume2);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.bidVolume3)) {
        this.bidVolume3 = data().deepCopy(fields()[13].schema(), other.bidVolume3);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.bidVolume4)) {
        this.bidVolume4 = data().deepCopy(fields()[14].schema(), other.bidVolume4);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.bidVolume5)) {
        this.bidVolume5 = data().deepCopy(fields()[15].schema(), other.bidVolume5);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.askPrice1)) {
        this.askPrice1 = data().deepCopy(fields()[16].schema(), other.askPrice1);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.askPrice2)) {
        this.askPrice2 = data().deepCopy(fields()[17].schema(), other.askPrice2);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.askPrice3)) {
        this.askPrice3 = data().deepCopy(fields()[18].schema(), other.askPrice3);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.askPrice4)) {
        this.askPrice4 = data().deepCopy(fields()[19].schema(), other.askPrice4);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.askPrice5)) {
        this.askPrice5 = data().deepCopy(fields()[20].schema(), other.askPrice5);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.askVolume1)) {
        this.askVolume1 = data().deepCopy(fields()[21].schema(), other.askVolume1);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.askVolume2)) {
        this.askVolume2 = data().deepCopy(fields()[22].schema(), other.askVolume2);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.askVolume3)) {
        this.askVolume3 = data().deepCopy(fields()[23].schema(), other.askVolume3);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.askVolume4)) {
        this.askVolume4 = data().deepCopy(fields()[24].schema(), other.askVolume4);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.askVolume5)) {
        this.askVolume5 = data().deepCopy(fields()[25].schema(), other.askVolume5);
        fieldSetFlags()[25] = true;
      }
    }

    /**
      * Gets the value of the 'timestamp' field.
      * @return The value.
      */
    public long getTimestamp() {
      return timestamp;
    }


    /**
      * Sets the value of the 'timestamp' field.
      * @param value The value of 'timestamp'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setTimestamp(long value) {
      validate(fields()[0], value);
      this.timestamp = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'timestamp' field has been set.
      * @return True if the 'timestamp' field has been set, false otherwise.
      */
    public boolean hasTimestamp() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'timestamp' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearTimestamp() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentId' field.
      * @return The value.
      */
    public int getInstrumentId() {
      return instrumentId;
    }


    /**
      * Sets the value of the 'instrumentId' field.
      * @param value The value of 'instrumentId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setInstrumentId(int value) {
      validate(fields()[1], value);
      this.instrumentId = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentId' field has been set.
      * @return True if the 'instrumentId' field has been set, false otherwise.
      */
    public boolean hasInstrumentId() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'instrumentId' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearInstrumentId() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentCode' field.
      * @return The value.
      */
    public java.lang.String getInstrumentCode() {
      return instrumentCode;
    }


    /**
      * Sets the value of the 'instrumentCode' field.
      * @param value The value of 'instrumentCode'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setInstrumentCode(java.lang.String value) {
      validate(fields()[2], value);
      this.instrumentCode = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentCode' field has been set.
      * @return True if the 'instrumentCode' field has been set, false otherwise.
      */
    public boolean hasInstrumentCode() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'instrumentCode' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearInstrumentCode() {
      instrumentCode = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'lastPrice' field.
      * @return The value.
      */
    public double getLastPrice() {
      return lastPrice;
    }


    /**
      * Sets the value of the 'lastPrice' field.
      * @param value The value of 'lastPrice'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setLastPrice(double value) {
      validate(fields()[3], value);
      this.lastPrice = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'lastPrice' field has been set.
      * @return True if the 'lastPrice' field has been set, false otherwise.
      */
    public boolean hasLastPrice() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'lastPrice' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearLastPrice() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'volume' field.
      * @return The value.
      */
    public int getVolume() {
      return volume;
    }


    /**
      * Sets the value of the 'volume' field.
      * @param value The value of 'volume'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setVolume(int value) {
      validate(fields()[4], value);
      this.volume = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'volume' field has been set.
      * @return True if the 'volume' field has been set, false otherwise.
      */
    public boolean hasVolume() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'volume' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearVolume() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'turnover' field.
      * @return The value.
      */
    public long getTurnover() {
      return turnover;
    }


    /**
      * Sets the value of the 'turnover' field.
      * @param value The value of 'turnover'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setTurnover(long value) {
      validate(fields()[5], value);
      this.turnover = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'turnover' field has been set.
      * @return True if the 'turnover' field has been set, false otherwise.
      */
    public boolean hasTurnover() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'turnover' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearTurnover() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidPrice1' field.
      * @return The value.
      */
    public double getBidPrice1() {
      return bidPrice1;
    }


    /**
      * Sets the value of the 'bidPrice1' field.
      * @param value The value of 'bidPrice1'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidPrice1(double value) {
      validate(fields()[6], value);
      this.bidPrice1 = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'bidPrice1' field has been set.
      * @return True if the 'bidPrice1' field has been set, false otherwise.
      */
    public boolean hasBidPrice1() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'bidPrice1' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidPrice1() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidPrice2' field.
      * @return The value.
      */
    public double getBidPrice2() {
      return bidPrice2;
    }


    /**
      * Sets the value of the 'bidPrice2' field.
      * @param value The value of 'bidPrice2'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidPrice2(double value) {
      validate(fields()[7], value);
      this.bidPrice2 = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'bidPrice2' field has been set.
      * @return True if the 'bidPrice2' field has been set, false otherwise.
      */
    public boolean hasBidPrice2() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'bidPrice2' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidPrice2() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidPrice3' field.
      * @return The value.
      */
    public double getBidPrice3() {
      return bidPrice3;
    }


    /**
      * Sets the value of the 'bidPrice3' field.
      * @param value The value of 'bidPrice3'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidPrice3(double value) {
      validate(fields()[8], value);
      this.bidPrice3 = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'bidPrice3' field has been set.
      * @return True if the 'bidPrice3' field has been set, false otherwise.
      */
    public boolean hasBidPrice3() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'bidPrice3' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidPrice3() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidPrice4' field.
      * @return The value.
      */
    public double getBidPrice4() {
      return bidPrice4;
    }


    /**
      * Sets the value of the 'bidPrice4' field.
      * @param value The value of 'bidPrice4'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidPrice4(double value) {
      validate(fields()[9], value);
      this.bidPrice4 = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'bidPrice4' field has been set.
      * @return True if the 'bidPrice4' field has been set, false otherwise.
      */
    public boolean hasBidPrice4() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'bidPrice4' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidPrice4() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidPrice5' field.
      * @return The value.
      */
    public double getBidPrice5() {
      return bidPrice5;
    }


    /**
      * Sets the value of the 'bidPrice5' field.
      * @param value The value of 'bidPrice5'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidPrice5(double value) {
      validate(fields()[10], value);
      this.bidPrice5 = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'bidPrice5' field has been set.
      * @return True if the 'bidPrice5' field has been set, false otherwise.
      */
    public boolean hasBidPrice5() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'bidPrice5' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidPrice5() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidVolume1' field.
      * @return The value.
      */
    public int getBidVolume1() {
      return bidVolume1;
    }


    /**
      * Sets the value of the 'bidVolume1' field.
      * @param value The value of 'bidVolume1'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidVolume1(int value) {
      validate(fields()[11], value);
      this.bidVolume1 = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'bidVolume1' field has been set.
      * @return True if the 'bidVolume1' field has been set, false otherwise.
      */
    public boolean hasBidVolume1() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'bidVolume1' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidVolume1() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidVolume2' field.
      * @return The value.
      */
    public int getBidVolume2() {
      return bidVolume2;
    }


    /**
      * Sets the value of the 'bidVolume2' field.
      * @param value The value of 'bidVolume2'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidVolume2(int value) {
      validate(fields()[12], value);
      this.bidVolume2 = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'bidVolume2' field has been set.
      * @return True if the 'bidVolume2' field has been set, false otherwise.
      */
    public boolean hasBidVolume2() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'bidVolume2' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidVolume2() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidVolume3' field.
      * @return The value.
      */
    public int getBidVolume3() {
      return bidVolume3;
    }


    /**
      * Sets the value of the 'bidVolume3' field.
      * @param value The value of 'bidVolume3'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidVolume3(int value) {
      validate(fields()[13], value);
      this.bidVolume3 = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'bidVolume3' field has been set.
      * @return True if the 'bidVolume3' field has been set, false otherwise.
      */
    public boolean hasBidVolume3() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'bidVolume3' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidVolume3() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidVolume4' field.
      * @return The value.
      */
    public int getBidVolume4() {
      return bidVolume4;
    }


    /**
      * Sets the value of the 'bidVolume4' field.
      * @param value The value of 'bidVolume4'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidVolume4(int value) {
      validate(fields()[14], value);
      this.bidVolume4 = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'bidVolume4' field has been set.
      * @return True if the 'bidVolume4' field has been set, false otherwise.
      */
    public boolean hasBidVolume4() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'bidVolume4' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidVolume4() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'bidVolume5' field.
      * @return The value.
      */
    public int getBidVolume5() {
      return bidVolume5;
    }


    /**
      * Sets the value of the 'bidVolume5' field.
      * @param value The value of 'bidVolume5'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setBidVolume5(int value) {
      validate(fields()[15], value);
      this.bidVolume5 = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'bidVolume5' field has been set.
      * @return True if the 'bidVolume5' field has been set, false otherwise.
      */
    public boolean hasBidVolume5() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'bidVolume5' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearBidVolume5() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'askPrice1' field.
      * @return The value.
      */
    public double getAskPrice1() {
      return askPrice1;
    }


    /**
      * Sets the value of the 'askPrice1' field.
      * @param value The value of 'askPrice1'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskPrice1(double value) {
      validate(fields()[16], value);
      this.askPrice1 = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'askPrice1' field has been set.
      * @return True if the 'askPrice1' field has been set, false otherwise.
      */
    public boolean hasAskPrice1() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'askPrice1' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskPrice1() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'askPrice2' field.
      * @return The value.
      */
    public double getAskPrice2() {
      return askPrice2;
    }


    /**
      * Sets the value of the 'askPrice2' field.
      * @param value The value of 'askPrice2'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskPrice2(double value) {
      validate(fields()[17], value);
      this.askPrice2 = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'askPrice2' field has been set.
      * @return True if the 'askPrice2' field has been set, false otherwise.
      */
    public boolean hasAskPrice2() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'askPrice2' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskPrice2() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'askPrice3' field.
      * @return The value.
      */
    public double getAskPrice3() {
      return askPrice3;
    }


    /**
      * Sets the value of the 'askPrice3' field.
      * @param value The value of 'askPrice3'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskPrice3(double value) {
      validate(fields()[18], value);
      this.askPrice3 = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'askPrice3' field has been set.
      * @return True if the 'askPrice3' field has been set, false otherwise.
      */
    public boolean hasAskPrice3() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'askPrice3' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskPrice3() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'askPrice4' field.
      * @return The value.
      */
    public double getAskPrice4() {
      return askPrice4;
    }


    /**
      * Sets the value of the 'askPrice4' field.
      * @param value The value of 'askPrice4'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskPrice4(double value) {
      validate(fields()[19], value);
      this.askPrice4 = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'askPrice4' field has been set.
      * @return True if the 'askPrice4' field has been set, false otherwise.
      */
    public boolean hasAskPrice4() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'askPrice4' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskPrice4() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'askPrice5' field.
      * @return The value.
      */
    public double getAskPrice5() {
      return askPrice5;
    }


    /**
      * Sets the value of the 'askPrice5' field.
      * @param value The value of 'askPrice5'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskPrice5(double value) {
      validate(fields()[20], value);
      this.askPrice5 = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'askPrice5' field has been set.
      * @return True if the 'askPrice5' field has been set, false otherwise.
      */
    public boolean hasAskPrice5() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'askPrice5' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskPrice5() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'askVolume1' field.
      * @return The value.
      */
    public int getAskVolume1() {
      return askVolume1;
    }


    /**
      * Sets the value of the 'askVolume1' field.
      * @param value The value of 'askVolume1'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskVolume1(int value) {
      validate(fields()[21], value);
      this.askVolume1 = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'askVolume1' field has been set.
      * @return True if the 'askVolume1' field has been set, false otherwise.
      */
    public boolean hasAskVolume1() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'askVolume1' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskVolume1() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'askVolume2' field.
      * @return The value.
      */
    public int getAskVolume2() {
      return askVolume2;
    }


    /**
      * Sets the value of the 'askVolume2' field.
      * @param value The value of 'askVolume2'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskVolume2(int value) {
      validate(fields()[22], value);
      this.askVolume2 = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'askVolume2' field has been set.
      * @return True if the 'askVolume2' field has been set, false otherwise.
      */
    public boolean hasAskVolume2() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'askVolume2' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskVolume2() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'askVolume3' field.
      * @return The value.
      */
    public int getAskVolume3() {
      return askVolume3;
    }


    /**
      * Sets the value of the 'askVolume3' field.
      * @param value The value of 'askVolume3'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskVolume3(int value) {
      validate(fields()[23], value);
      this.askVolume3 = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'askVolume3' field has been set.
      * @return True if the 'askVolume3' field has been set, false otherwise.
      */
    public boolean hasAskVolume3() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'askVolume3' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskVolume3() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'askVolume4' field.
      * @return The value.
      */
    public int getAskVolume4() {
      return askVolume4;
    }


    /**
      * Sets the value of the 'askVolume4' field.
      * @param value The value of 'askVolume4'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskVolume4(int value) {
      validate(fields()[24], value);
      this.askVolume4 = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'askVolume4' field has been set.
      * @return True if the 'askVolume4' field has been set, false otherwise.
      */
    public boolean hasAskVolume4() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'askVolume4' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskVolume4() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'askVolume5' field.
      * @return The value.
      */
    public int getAskVolume5() {
      return askVolume5;
    }


    /**
      * Sets the value of the 'askVolume5' field.
      * @param value The value of 'askVolume5'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder setAskVolume5(int value) {
      validate(fields()[25], value);
      this.askVolume5 = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'askVolume5' field has been set.
      * @return True if the 'askVolume5' field has been set, false otherwise.
      */
    public boolean hasAskVolume5() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'askVolume5' field.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.inbound.FastMarketDataEvent.Builder clearAskVolume5() {
      fieldSetFlags()[25] = false;
      return this;
    }

    @Override
    public FastMarketDataEvent build() {
      try {
        FastMarketDataEvent record = new FastMarketDataEvent();
        record.timestamp = fieldSetFlags()[0] ? this.timestamp : (java.lang.Long) defaultValue(fields()[0]);
        record.instrumentId = fieldSetFlags()[1] ? this.instrumentId : (java.lang.Integer) defaultValue(fields()[1]);
        record.instrumentCode = fieldSetFlags()[2] ? this.instrumentCode : (java.lang.String) defaultValue(fields()[2]);
        record.lastPrice = fieldSetFlags()[3] ? this.lastPrice : (java.lang.Double) defaultValue(fields()[3]);
        record.volume = fieldSetFlags()[4] ? this.volume : (java.lang.Integer) defaultValue(fields()[4]);
        record.turnover = fieldSetFlags()[5] ? this.turnover : (java.lang.Long) defaultValue(fields()[5]);
        record.bidPrice1 = fieldSetFlags()[6] ? this.bidPrice1 : (java.lang.Double) defaultValue(fields()[6]);
        record.bidPrice2 = fieldSetFlags()[7] ? this.bidPrice2 : (java.lang.Double) defaultValue(fields()[7]);
        record.bidPrice3 = fieldSetFlags()[8] ? this.bidPrice3 : (java.lang.Double) defaultValue(fields()[8]);
        record.bidPrice4 = fieldSetFlags()[9] ? this.bidPrice4 : (java.lang.Double) defaultValue(fields()[9]);
        record.bidPrice5 = fieldSetFlags()[10] ? this.bidPrice5 : (java.lang.Double) defaultValue(fields()[10]);
        record.bidVolume1 = fieldSetFlags()[11] ? this.bidVolume1 : (java.lang.Integer) defaultValue(fields()[11]);
        record.bidVolume2 = fieldSetFlags()[12] ? this.bidVolume2 : (java.lang.Integer) defaultValue(fields()[12]);
        record.bidVolume3 = fieldSetFlags()[13] ? this.bidVolume3 : (java.lang.Integer) defaultValue(fields()[13]);
        record.bidVolume4 = fieldSetFlags()[14] ? this.bidVolume4 : (java.lang.Integer) defaultValue(fields()[14]);
        record.bidVolume5 = fieldSetFlags()[15] ? this.bidVolume5 : (java.lang.Integer) defaultValue(fields()[15]);
        record.askPrice1 = fieldSetFlags()[16] ? this.askPrice1 : (java.lang.Double) defaultValue(fields()[16]);
        record.askPrice2 = fieldSetFlags()[17] ? this.askPrice2 : (java.lang.Double) defaultValue(fields()[17]);
        record.askPrice3 = fieldSetFlags()[18] ? this.askPrice3 : (java.lang.Double) defaultValue(fields()[18]);
        record.askPrice4 = fieldSetFlags()[19] ? this.askPrice4 : (java.lang.Double) defaultValue(fields()[19]);
        record.askPrice5 = fieldSetFlags()[20] ? this.askPrice5 : (java.lang.Double) defaultValue(fields()[20]);
        record.askVolume1 = fieldSetFlags()[21] ? this.askVolume1 : (java.lang.Integer) defaultValue(fields()[21]);
        record.askVolume2 = fieldSetFlags()[22] ? this.askVolume2 : (java.lang.Integer) defaultValue(fields()[22]);
        record.askVolume3 = fieldSetFlags()[23] ? this.askVolume3 : (java.lang.Integer) defaultValue(fields()[23]);
        record.askVolume4 = fieldSetFlags()[24] ? this.askVolume4 : (java.lang.Integer) defaultValue(fields()[24]);
        record.askVolume5 = fieldSetFlags()[25] ? this.askVolume5 : (java.lang.Integer) defaultValue(fields()[25]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FastMarketDataEvent>
    WRITER$ = (org.apache.avro.io.DatumWriter<FastMarketDataEvent>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FastMarketDataEvent>
    READER$ = (org.apache.avro.io.DatumReader<FastMarketDataEvent>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.timestamp);

    out.writeInt(this.instrumentId);

    out.writeString(this.instrumentCode);

    out.writeDouble(this.lastPrice);

    out.writeInt(this.volume);

    out.writeLong(this.turnover);

    out.writeDouble(this.bidPrice1);

    out.writeDouble(this.bidPrice2);

    out.writeDouble(this.bidPrice3);

    out.writeDouble(this.bidPrice4);

    out.writeDouble(this.bidPrice5);

    out.writeInt(this.bidVolume1);

    out.writeInt(this.bidVolume2);

    out.writeInt(this.bidVolume3);

    out.writeInt(this.bidVolume4);

    out.writeInt(this.bidVolume5);

    out.writeDouble(this.askPrice1);

    out.writeDouble(this.askPrice2);

    out.writeDouble(this.askPrice3);

    out.writeDouble(this.askPrice4);

    out.writeDouble(this.askPrice5);

    out.writeInt(this.askVolume1);

    out.writeInt(this.askVolume2);

    out.writeInt(this.askVolume3);

    out.writeInt(this.askVolume4);

    out.writeInt(this.askVolume5);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.timestamp = in.readLong();

      this.instrumentId = in.readInt();

      this.instrumentCode = in.readString();

      this.lastPrice = in.readDouble();

      this.volume = in.readInt();

      this.turnover = in.readLong();

      this.bidPrice1 = in.readDouble();

      this.bidPrice2 = in.readDouble();

      this.bidPrice3 = in.readDouble();

      this.bidPrice4 = in.readDouble();

      this.bidPrice5 = in.readDouble();

      this.bidVolume1 = in.readInt();

      this.bidVolume2 = in.readInt();

      this.bidVolume3 = in.readInt();

      this.bidVolume4 = in.readInt();

      this.bidVolume5 = in.readInt();

      this.askPrice1 = in.readDouble();

      this.askPrice2 = in.readDouble();

      this.askPrice3 = in.readDouble();

      this.askPrice4 = in.readDouble();

      this.askPrice5 = in.readDouble();

      this.askVolume1 = in.readInt();

      this.askVolume2 = in.readInt();

      this.askVolume3 = in.readInt();

      this.askVolume4 = in.readInt();

      this.askVolume5 = in.readInt();

    } else {
      for (int i = 0; i < 26; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.timestamp = in.readLong();
          break;

        case 1:
          this.instrumentId = in.readInt();
          break;

        case 2:
          this.instrumentCode = in.readString();
          break;

        case 3:
          this.lastPrice = in.readDouble();
          break;

        case 4:
          this.volume = in.readInt();
          break;

        case 5:
          this.turnover = in.readLong();
          break;

        case 6:
          this.bidPrice1 = in.readDouble();
          break;

        case 7:
          this.bidPrice2 = in.readDouble();
          break;

        case 8:
          this.bidPrice3 = in.readDouble();
          break;

        case 9:
          this.bidPrice4 = in.readDouble();
          break;

        case 10:
          this.bidPrice5 = in.readDouble();
          break;

        case 11:
          this.bidVolume1 = in.readInt();
          break;

        case 12:
          this.bidVolume2 = in.readInt();
          break;

        case 13:
          this.bidVolume3 = in.readInt();
          break;

        case 14:
          this.bidVolume4 = in.readInt();
          break;

        case 15:
          this.bidVolume5 = in.readInt();
          break;

        case 16:
          this.askPrice1 = in.readDouble();
          break;

        case 17:
          this.askPrice2 = in.readDouble();
          break;

        case 18:
          this.askPrice3 = in.readDouble();
          break;

        case 19:
          this.askPrice4 = in.readDouble();
          break;

        case 20:
          this.askPrice5 = in.readDouble();
          break;

        case 21:
          this.askVolume1 = in.readInt();
          break;

        case 22:
          this.askVolume2 = in.readInt();
          break;

        case 23:
          this.askVolume3 = in.readInt();
          break;

        case 24:
          this.askVolume4 = in.readInt();
          break;

        case 25:
          this.askVolume5 = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










