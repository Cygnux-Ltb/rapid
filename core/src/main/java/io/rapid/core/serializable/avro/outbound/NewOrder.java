/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.core.serializable.avro.outbound;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** 新订单 */
@org.apache.avro.specific.AvroGenerated
public class NewOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -7505754597418381187L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"NewOrder\",\"namespace\":\"io.rapid.core.serializable.avro.outbound\",\"doc\":\"新订单\",\"fields\":[{\"name\":\"generateTime\",\"type\":\"long\",\"doc\":\"Epoch Microsecond Unit\"},{\"name\":\"sendTime\",\"type\":\"long\",\"doc\":\"Epoch Microsecond Unit\"},{\"name\":\"ordSysId\",\"type\":\"long\",\"doc\":\"订单ID\"},{\"name\":\"offerQty\",\"type\":\"int\",\"doc\":\"委托数量\"},{\"name\":\"minimumQty\",\"type\":\"int\",\"doc\":\"最小成交数量\",\"default\":1},{\"name\":\"offerPrice\",\"type\":\"double\",\"doc\":\"委托价格\",\"default\":0.0},{\"name\":\"instrumentId\",\"type\":\"int\",\"doc\":\"交易标的ID\"},{\"name\":\"instrumentCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易标的代码\"},{\"name\":\"exchangeCode\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所代码\"},{\"name\":\"type\",\"type\":{\"type\":\"enum\",\"name\":\"OrdType\",\"namespace\":\"io.rapid.core.serializable.avro.enums\",\"symbols\":[\"INVALID\",\"LIMITED\",\"MARKET\",\"LIMITED_STOP\",\"MARKET_STOP\",\"MTL\",\"BP\",\"AP\",\"FOK\",\"FAK\",\"MV\"]},\"doc\":\"订单类型\"},{\"name\":\"valid\",\"type\":{\"type\":\"enum\",\"name\":\"OrdValid\",\"namespace\":\"io.rapid.core.serializable.avro.enums\",\"symbols\":[\"INVALID\",\"GTC\",\"GTD\",\"GFD\"]},\"doc\":\"订单有效类型\"},{\"name\":\"action\",\"type\":{\"type\":\"enum\",\"name\":\"TrdAction\",\"namespace\":\"io.rapid.core.serializable.avro.enums\",\"symbols\":[\"INVALID\",\"OPEN\",\"CLOSE\",\"CLOSE_TODAY\",\"CLOSE_YESTERDAY\"]},\"doc\":\"订单动作\"},{\"name\":\"direction\",\"type\":{\"type\":\"enum\",\"name\":\"TrdDirection\",\"namespace\":\"io.rapid.core.serializable.avro.enums\",\"symbols\":[\"INVALID\",\"LONG\",\"SHORT\"]},\"doc\":\"订单方向\"},{\"name\":\"accountId\",\"type\":\"int\",\"doc\":\"账户ID\"},{\"name\":\"brokerId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪商ID\"},{\"name\":\"subAccountId\",\"type\":\"int\",\"doc\":\"子账户ID\"},{\"name\":\"strategyId\",\"type\":\"int\",\"doc\":\"策略ID\"},{\"name\":\"delayMillis\",\"type\":\"long\",\"doc\":\"延迟时间\",\"default\":0},{\"name\":\"operatorId\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"操作ID\",\"default\":\"\"},{\"name\":\"remark\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"备注\",\"default\":\"\"},{\"name\":\"reason\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"操作原因\",\"default\":\"\"},{\"name\":\"source\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"操作来源\",\"default\":\"\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<NewOrder> ENCODER =
      new BinaryMessageEncoder<NewOrder>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<NewOrder> DECODER =
      new BinaryMessageDecoder<NewOrder>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<NewOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<NewOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<NewOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<NewOrder>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this NewOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a NewOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a NewOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static NewOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** Epoch Microsecond Unit */
  private long generateTime;
  /** Epoch Microsecond Unit */
  private long sendTime;
  /** 订单ID */
  private long ordSysId;
  /** 委托数量 */
  private int offerQty;
  /** 最小成交数量 */
  private int minimumQty;
  /** 委托价格 */
  private double offerPrice;
  /** 交易标的ID */
  private int instrumentId;
  /** 交易标的代码 */
  private java.lang.String instrumentCode;
  /** 交易所代码 */
  private java.lang.String exchangeCode;
  /** 订单类型 */
  private io.rapid.core.serializable.avro.enums.OrdType type;
  /** 订单有效类型 */
  private io.rapid.core.serializable.avro.enums.OrdValid valid;
  /** 订单动作 */
  private io.rapid.core.serializable.avro.enums.TrdAction action;
  /** 订单方向 */
  private io.rapid.core.serializable.avro.enums.TrdDirection direction;
  /** 账户ID */
  private int accountId;
  /** 经纪商ID */
  private java.lang.String brokerId;
  /** 子账户ID */
  private int subAccountId;
  /** 策略ID */
  private int strategyId;
  /** 延迟时间 */
  private long delayMillis;
  /** 操作ID */
  private java.lang.String operatorId;
  /** 备注 */
  private java.lang.String remark;
  /** 操作原因 */
  private java.lang.String reason;
  /** 操作来源 */
  private java.lang.String source;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public NewOrder() {}

  /**
   * All-args constructor.
   * @param generateTime Epoch Microsecond Unit
   * @param sendTime Epoch Microsecond Unit
   * @param ordSysId 订单ID
   * @param offerQty 委托数量
   * @param minimumQty 最小成交数量
   * @param offerPrice 委托价格
   * @param instrumentId 交易标的ID
   * @param instrumentCode 交易标的代码
   * @param exchangeCode 交易所代码
   * @param type 订单类型
   * @param valid 订单有效类型
   * @param action 订单动作
   * @param direction 订单方向
   * @param accountId 账户ID
   * @param brokerId 经纪商ID
   * @param subAccountId 子账户ID
   * @param strategyId 策略ID
   * @param delayMillis 延迟时间
   * @param operatorId 操作ID
   * @param remark 备注
   * @param reason 操作原因
   * @param source 操作来源
   */
  public NewOrder(java.lang.Long generateTime, java.lang.Long sendTime, java.lang.Long ordSysId, java.lang.Integer offerQty, java.lang.Integer minimumQty, java.lang.Double offerPrice, java.lang.Integer instrumentId, java.lang.String instrumentCode, java.lang.String exchangeCode, io.rapid.core.serializable.avro.enums.OrdType type, io.rapid.core.serializable.avro.enums.OrdValid valid, io.rapid.core.serializable.avro.enums.TrdAction action, io.rapid.core.serializable.avro.enums.TrdDirection direction, java.lang.Integer accountId, java.lang.String brokerId, java.lang.Integer subAccountId, java.lang.Integer strategyId, java.lang.Long delayMillis, java.lang.String operatorId, java.lang.String remark, java.lang.String reason, java.lang.String source) {
    this.generateTime = generateTime;
    this.sendTime = sendTime;
    this.ordSysId = ordSysId;
    this.offerQty = offerQty;
    this.minimumQty = minimumQty;
    this.offerPrice = offerPrice;
    this.instrumentId = instrumentId;
    this.instrumentCode = instrumentCode;
    this.exchangeCode = exchangeCode;
    this.type = type;
    this.valid = valid;
    this.action = action;
    this.direction = direction;
    this.accountId = accountId;
    this.brokerId = brokerId;
    this.subAccountId = subAccountId;
    this.strategyId = strategyId;
    this.delayMillis = delayMillis;
    this.operatorId = operatorId;
    this.remark = remark;
    this.reason = reason;
    this.source = source;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return generateTime;
    case 1: return sendTime;
    case 2: return ordSysId;
    case 3: return offerQty;
    case 4: return minimumQty;
    case 5: return offerPrice;
    case 6: return instrumentId;
    case 7: return instrumentCode;
    case 8: return exchangeCode;
    case 9: return type;
    case 10: return valid;
    case 11: return action;
    case 12: return direction;
    case 13: return accountId;
    case 14: return brokerId;
    case 15: return subAccountId;
    case 16: return strategyId;
    case 17: return delayMillis;
    case 18: return operatorId;
    case 19: return remark;
    case 20: return reason;
    case 21: return source;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: generateTime = (java.lang.Long)value$; break;
    case 1: sendTime = (java.lang.Long)value$; break;
    case 2: ordSysId = (java.lang.Long)value$; break;
    case 3: offerQty = (java.lang.Integer)value$; break;
    case 4: minimumQty = (java.lang.Integer)value$; break;
    case 5: offerPrice = (java.lang.Double)value$; break;
    case 6: instrumentId = (java.lang.Integer)value$; break;
    case 7: instrumentCode = value$ != null ? value$.toString() : null; break;
    case 8: exchangeCode = value$ != null ? value$.toString() : null; break;
    case 9: type = (io.rapid.core.serializable.avro.enums.OrdType)value$; break;
    case 10: valid = (io.rapid.core.serializable.avro.enums.OrdValid)value$; break;
    case 11: action = (io.rapid.core.serializable.avro.enums.TrdAction)value$; break;
    case 12: direction = (io.rapid.core.serializable.avro.enums.TrdDirection)value$; break;
    case 13: accountId = (java.lang.Integer)value$; break;
    case 14: brokerId = value$ != null ? value$.toString() : null; break;
    case 15: subAccountId = (java.lang.Integer)value$; break;
    case 16: strategyId = (java.lang.Integer)value$; break;
    case 17: delayMillis = (java.lang.Long)value$; break;
    case 18: operatorId = value$ != null ? value$.toString() : null; break;
    case 19: remark = value$ != null ? value$.toString() : null; break;
    case 20: reason = value$ != null ? value$.toString() : null; break;
    case 21: source = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'generateTime' field.
   * @return Epoch Microsecond Unit
   */
  public long getGenerateTime() {
    return generateTime;
  }


  /**
   * Sets the value of the 'generateTime' field.
   * Epoch Microsecond Unit
   * @param value the value to set.
   */
  public NewOrder setGenerateTime(long value) {
    this.generateTime = value;
    return this;
  }

  /**
   * Gets the value of the 'sendTime' field.
   * @return Epoch Microsecond Unit
   */
  public long getSendTime() {
    return sendTime;
  }


  /**
   * Sets the value of the 'sendTime' field.
   * Epoch Microsecond Unit
   * @param value the value to set.
   */
  public NewOrder setSendTime(long value) {
    this.sendTime = value;
    return this;
  }

  /**
   * Gets the value of the 'ordSysId' field.
   * @return 订单ID
   */
  public long getOrdSysId() {
    return ordSysId;
  }


  /**
   * Sets the value of the 'ordSysId' field.
   * 订单ID
   * @param value the value to set.
   */
  public NewOrder setOrdSysId(long value) {
    this.ordSysId = value;
    return this;
  }

  /**
   * Gets the value of the 'offerQty' field.
   * @return 委托数量
   */
  public int getOfferQty() {
    return offerQty;
  }


  /**
   * Sets the value of the 'offerQty' field.
   * 委托数量
   * @param value the value to set.
   */
  public NewOrder setOfferQty(int value) {
    this.offerQty = value;
    return this;
  }

  /**
   * Gets the value of the 'minimumQty' field.
   * @return 最小成交数量
   */
  public int getMinimumQty() {
    return minimumQty;
  }


  /**
   * Sets the value of the 'minimumQty' field.
   * 最小成交数量
   * @param value the value to set.
   */
  public NewOrder setMinimumQty(int value) {
    this.minimumQty = value;
    return this;
  }

  /**
   * Gets the value of the 'offerPrice' field.
   * @return 委托价格
   */
  public double getOfferPrice() {
    return offerPrice;
  }


  /**
   * Sets the value of the 'offerPrice' field.
   * 委托价格
   * @param value the value to set.
   */
  public NewOrder setOfferPrice(double value) {
    this.offerPrice = value;
    return this;
  }

  /**
   * Gets the value of the 'instrumentId' field.
   * @return 交易标的ID
   */
  public int getInstrumentId() {
    return instrumentId;
  }


  /**
   * Sets the value of the 'instrumentId' field.
   * 交易标的ID
   * @param value the value to set.
   */
  public NewOrder setInstrumentId(int value) {
    this.instrumentId = value;
    return this;
  }

  /**
   * Gets the value of the 'instrumentCode' field.
   * @return 交易标的代码
   */
  public java.lang.String getInstrumentCode() {
    return instrumentCode;
  }


  /**
   * Sets the value of the 'instrumentCode' field.
   * 交易标的代码
   * @param value the value to set.
   */
  public NewOrder setInstrumentCode(java.lang.String value) {
    this.instrumentCode = value;
    return this;
  }

  /**
   * Gets the value of the 'exchangeCode' field.
   * @return 交易所代码
   */
  public java.lang.String getExchangeCode() {
    return exchangeCode;
  }


  /**
   * Sets the value of the 'exchangeCode' field.
   * 交易所代码
   * @param value the value to set.
   */
  public NewOrder setExchangeCode(java.lang.String value) {
    this.exchangeCode = value;
    return this;
  }

  /**
   * Gets the value of the 'type' field.
   * @return 订单类型
   */
  public io.rapid.core.serializable.avro.enums.OrdType getType() {
    return type;
  }


  /**
   * Sets the value of the 'type' field.
   * 订单类型
   * @param value the value to set.
   */
  public NewOrder setType(io.rapid.core.serializable.avro.enums.OrdType value) {
    this.type = value;
    return this;
  }

  /**
   * Gets the value of the 'valid' field.
   * @return 订单有效类型
   */
  public io.rapid.core.serializable.avro.enums.OrdValid getValid() {
    return valid;
  }


  /**
   * Sets the value of the 'valid' field.
   * 订单有效类型
   * @param value the value to set.
   */
  public NewOrder setValid(io.rapid.core.serializable.avro.enums.OrdValid value) {
    this.valid = value;
    return this;
  }

  /**
   * Gets the value of the 'action' field.
   * @return 订单动作
   */
  public io.rapid.core.serializable.avro.enums.TrdAction getAction() {
    return action;
  }


  /**
   * Sets the value of the 'action' field.
   * 订单动作
   * @param value the value to set.
   */
  public NewOrder setAction(io.rapid.core.serializable.avro.enums.TrdAction value) {
    this.action = value;
    return this;
  }

  /**
   * Gets the value of the 'direction' field.
   * @return 订单方向
   */
  public io.rapid.core.serializable.avro.enums.TrdDirection getDirection() {
    return direction;
  }


  /**
   * Sets the value of the 'direction' field.
   * 订单方向
   * @param value the value to set.
   */
  public NewOrder setDirection(io.rapid.core.serializable.avro.enums.TrdDirection value) {
    this.direction = value;
    return this;
  }

  /**
   * Gets the value of the 'accountId' field.
   * @return 账户ID
   */
  public int getAccountId() {
    return accountId;
  }


  /**
   * Sets the value of the 'accountId' field.
   * 账户ID
   * @param value the value to set.
   */
  public NewOrder setAccountId(int value) {
    this.accountId = value;
    return this;
  }

  /**
   * Gets the value of the 'brokerId' field.
   * @return 经纪商ID
   */
  public java.lang.String getBrokerId() {
    return brokerId;
  }


  /**
   * Sets the value of the 'brokerId' field.
   * 经纪商ID
   * @param value the value to set.
   */
  public NewOrder setBrokerId(java.lang.String value) {
    this.brokerId = value;
    return this;
  }

  /**
   * Gets the value of the 'subAccountId' field.
   * @return 子账户ID
   */
  public int getSubAccountId() {
    return subAccountId;
  }


  /**
   * Sets the value of the 'subAccountId' field.
   * 子账户ID
   * @param value the value to set.
   */
  public NewOrder setSubAccountId(int value) {
    this.subAccountId = value;
    return this;
  }

  /**
   * Gets the value of the 'strategyId' field.
   * @return 策略ID
   */
  public int getStrategyId() {
    return strategyId;
  }


  /**
   * Sets the value of the 'strategyId' field.
   * 策略ID
   * @param value the value to set.
   */
  public NewOrder setStrategyId(int value) {
    this.strategyId = value;
    return this;
  }

  /**
   * Gets the value of the 'delayMillis' field.
   * @return 延迟时间
   */
  public long getDelayMillis() {
    return delayMillis;
  }


  /**
   * Sets the value of the 'delayMillis' field.
   * 延迟时间
   * @param value the value to set.
   */
  public NewOrder setDelayMillis(long value) {
    this.delayMillis = value;
    return this;
  }

  /**
   * Gets the value of the 'operatorId' field.
   * @return 操作ID
   */
  public java.lang.String getOperatorId() {
    return operatorId;
  }


  /**
   * Sets the value of the 'operatorId' field.
   * 操作ID
   * @param value the value to set.
   */
  public NewOrder setOperatorId(java.lang.String value) {
    this.operatorId = value;
    return this;
  }

  /**
   * Gets the value of the 'remark' field.
   * @return 备注
   */
  public java.lang.String getRemark() {
    return remark;
  }


  /**
   * Sets the value of the 'remark' field.
   * 备注
   * @param value the value to set.
   */
  public NewOrder setRemark(java.lang.String value) {
    this.remark = value;
    return this;
  }

  /**
   * Gets the value of the 'reason' field.
   * @return 操作原因
   */
  public java.lang.String getReason() {
    return reason;
  }


  /**
   * Sets the value of the 'reason' field.
   * 操作原因
   * @param value the value to set.
   */
  public NewOrder setReason(java.lang.String value) {
    this.reason = value;
    return this;
  }

  /**
   * Gets the value of the 'source' field.
   * @return 操作来源
   */
  public java.lang.String getSource() {
    return source;
  }


  /**
   * Sets the value of the 'source' field.
   * 操作来源
   * @param value the value to set.
   */
  public NewOrder setSource(java.lang.String value) {
    this.source = value;
    return this;
  }

  /**
   * Creates a new NewOrder RecordBuilder.
   * @return A new NewOrder RecordBuilder
   */
  public static io.rapid.core.serializable.avro.outbound.NewOrder.Builder newBuilder() {
    return new io.rapid.core.serializable.avro.outbound.NewOrder.Builder();
  }

  /**
   * Creates a new NewOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new NewOrder RecordBuilder
   */
  public static io.rapid.core.serializable.avro.outbound.NewOrder.Builder newBuilder(io.rapid.core.serializable.avro.outbound.NewOrder.Builder other) {
    if (other == null) {
      return new io.rapid.core.serializable.avro.outbound.NewOrder.Builder();
    } else {
      return new io.rapid.core.serializable.avro.outbound.NewOrder.Builder(other);
    }
  }

  /**
   * Creates a new NewOrder RecordBuilder by copying an existing NewOrder instance.
   * @param other The existing instance to copy.
   * @return A new NewOrder RecordBuilder
   */
  public static io.rapid.core.serializable.avro.outbound.NewOrder.Builder newBuilder(io.rapid.core.serializable.avro.outbound.NewOrder other) {
    if (other == null) {
      return new io.rapid.core.serializable.avro.outbound.NewOrder.Builder();
    } else {
      return new io.rapid.core.serializable.avro.outbound.NewOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for NewOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<NewOrder>
    implements org.apache.avro.data.RecordBuilder<NewOrder> {

    /** Epoch Microsecond Unit */
    private long generateTime;
    /** Epoch Microsecond Unit */
    private long sendTime;
    /** 订单ID */
    private long ordSysId;
    /** 委托数量 */
    private int offerQty;
    /** 最小成交数量 */
    private int minimumQty;
    /** 委托价格 */
    private double offerPrice;
    /** 交易标的ID */
    private int instrumentId;
    /** 交易标的代码 */
    private java.lang.String instrumentCode;
    /** 交易所代码 */
    private java.lang.String exchangeCode;
    /** 订单类型 */
    private io.rapid.core.serializable.avro.enums.OrdType type;
    /** 订单有效类型 */
    private io.rapid.core.serializable.avro.enums.OrdValid valid;
    /** 订单动作 */
    private io.rapid.core.serializable.avro.enums.TrdAction action;
    /** 订单方向 */
    private io.rapid.core.serializable.avro.enums.TrdDirection direction;
    /** 账户ID */
    private int accountId;
    /** 经纪商ID */
    private java.lang.String brokerId;
    /** 子账户ID */
    private int subAccountId;
    /** 策略ID */
    private int strategyId;
    /** 延迟时间 */
    private long delayMillis;
    /** 操作ID */
    private java.lang.String operatorId;
    /** 备注 */
    private java.lang.String remark;
    /** 操作原因 */
    private java.lang.String reason;
    /** 操作来源 */
    private java.lang.String source;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.core.serializable.avro.outbound.NewOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.generateTime)) {
        this.generateTime = data().deepCopy(fields()[0].schema(), other.generateTime);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.sendTime)) {
        this.sendTime = data().deepCopy(fields()[1].schema(), other.sendTime);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.ordSysId)) {
        this.ordSysId = data().deepCopy(fields()[2].schema(), other.ordSysId);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.offerQty)) {
        this.offerQty = data().deepCopy(fields()[3].schema(), other.offerQty);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.minimumQty)) {
        this.minimumQty = data().deepCopy(fields()[4].schema(), other.minimumQty);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.offerPrice)) {
        this.offerPrice = data().deepCopy(fields()[5].schema(), other.offerPrice);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.instrumentId)) {
        this.instrumentId = data().deepCopy(fields()[6].schema(), other.instrumentId);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[7].schema(), other.instrumentCode);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.exchangeCode)) {
        this.exchangeCode = data().deepCopy(fields()[8].schema(), other.exchangeCode);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.type)) {
        this.type = data().deepCopy(fields()[9].schema(), other.type);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.valid)) {
        this.valid = data().deepCopy(fields()[10].schema(), other.valid);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.action)) {
        this.action = data().deepCopy(fields()[11].schema(), other.action);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.direction)) {
        this.direction = data().deepCopy(fields()[12].schema(), other.direction);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.accountId)) {
        this.accountId = data().deepCopy(fields()[13].schema(), other.accountId);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[14].schema(), other.brokerId);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.subAccountId)) {
        this.subAccountId = data().deepCopy(fields()[15].schema(), other.subAccountId);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[16].schema(), other.strategyId);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.delayMillis)) {
        this.delayMillis = data().deepCopy(fields()[17].schema(), other.delayMillis);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.operatorId)) {
        this.operatorId = data().deepCopy(fields()[18].schema(), other.operatorId);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.remark)) {
        this.remark = data().deepCopy(fields()[19].schema(), other.remark);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.reason)) {
        this.reason = data().deepCopy(fields()[20].schema(), other.reason);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.source)) {
        this.source = data().deepCopy(fields()[21].schema(), other.source);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
    }

    /**
     * Creates a Builder by copying an existing NewOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.core.serializable.avro.outbound.NewOrder other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.generateTime)) {
        this.generateTime = data().deepCopy(fields()[0].schema(), other.generateTime);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.sendTime)) {
        this.sendTime = data().deepCopy(fields()[1].schema(), other.sendTime);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.ordSysId)) {
        this.ordSysId = data().deepCopy(fields()[2].schema(), other.ordSysId);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.offerQty)) {
        this.offerQty = data().deepCopy(fields()[3].schema(), other.offerQty);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.minimumQty)) {
        this.minimumQty = data().deepCopy(fields()[4].schema(), other.minimumQty);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.offerPrice)) {
        this.offerPrice = data().deepCopy(fields()[5].schema(), other.offerPrice);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.instrumentId)) {
        this.instrumentId = data().deepCopy(fields()[6].schema(), other.instrumentId);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.instrumentCode)) {
        this.instrumentCode = data().deepCopy(fields()[7].schema(), other.instrumentCode);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.exchangeCode)) {
        this.exchangeCode = data().deepCopy(fields()[8].schema(), other.exchangeCode);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.type)) {
        this.type = data().deepCopy(fields()[9].schema(), other.type);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.valid)) {
        this.valid = data().deepCopy(fields()[10].schema(), other.valid);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.action)) {
        this.action = data().deepCopy(fields()[11].schema(), other.action);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.direction)) {
        this.direction = data().deepCopy(fields()[12].schema(), other.direction);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.accountId)) {
        this.accountId = data().deepCopy(fields()[13].schema(), other.accountId);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.brokerId)) {
        this.brokerId = data().deepCopy(fields()[14].schema(), other.brokerId);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.subAccountId)) {
        this.subAccountId = data().deepCopy(fields()[15].schema(), other.subAccountId);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.strategyId)) {
        this.strategyId = data().deepCopy(fields()[16].schema(), other.strategyId);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.delayMillis)) {
        this.delayMillis = data().deepCopy(fields()[17].schema(), other.delayMillis);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.operatorId)) {
        this.operatorId = data().deepCopy(fields()[18].schema(), other.operatorId);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.remark)) {
        this.remark = data().deepCopy(fields()[19].schema(), other.remark);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.reason)) {
        this.reason = data().deepCopy(fields()[20].schema(), other.reason);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.source)) {
        this.source = data().deepCopy(fields()[21].schema(), other.source);
        fieldSetFlags()[21] = true;
      }
    }

    /**
      * Gets the value of the 'generateTime' field.
      * Epoch Microsecond Unit
      * @return The value.
      */
    public long getGenerateTime() {
      return generateTime;
    }


    /**
      * Sets the value of the 'generateTime' field.
      * Epoch Microsecond Unit
      * @param value The value of 'generateTime'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setGenerateTime(long value) {
      validate(fields()[0], value);
      this.generateTime = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'generateTime' field has been set.
      * Epoch Microsecond Unit
      * @return True if the 'generateTime' field has been set, false otherwise.
      */
    public boolean hasGenerateTime() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'generateTime' field.
      * Epoch Microsecond Unit
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearGenerateTime() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'sendTime' field.
      * Epoch Microsecond Unit
      * @return The value.
      */
    public long getSendTime() {
      return sendTime;
    }


    /**
      * Sets the value of the 'sendTime' field.
      * Epoch Microsecond Unit
      * @param value The value of 'sendTime'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setSendTime(long value) {
      validate(fields()[1], value);
      this.sendTime = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'sendTime' field has been set.
      * Epoch Microsecond Unit
      * @return True if the 'sendTime' field has been set, false otherwise.
      */
    public boolean hasSendTime() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'sendTime' field.
      * Epoch Microsecond Unit
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearSendTime() {
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'ordSysId' field.
      * 订单ID
      * @return The value.
      */
    public long getOrdSysId() {
      return ordSysId;
    }


    /**
      * Sets the value of the 'ordSysId' field.
      * 订单ID
      * @param value The value of 'ordSysId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setOrdSysId(long value) {
      validate(fields()[2], value);
      this.ordSysId = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'ordSysId' field has been set.
      * 订单ID
      * @return True if the 'ordSysId' field has been set, false otherwise.
      */
    public boolean hasOrdSysId() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'ordSysId' field.
      * 订单ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearOrdSysId() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'offerQty' field.
      * 委托数量
      * @return The value.
      */
    public int getOfferQty() {
      return offerQty;
    }


    /**
      * Sets the value of the 'offerQty' field.
      * 委托数量
      * @param value The value of 'offerQty'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setOfferQty(int value) {
      validate(fields()[3], value);
      this.offerQty = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'offerQty' field has been set.
      * 委托数量
      * @return True if the 'offerQty' field has been set, false otherwise.
      */
    public boolean hasOfferQty() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'offerQty' field.
      * 委托数量
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearOfferQty() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'minimumQty' field.
      * 最小成交数量
      * @return The value.
      */
    public int getMinimumQty() {
      return minimumQty;
    }


    /**
      * Sets the value of the 'minimumQty' field.
      * 最小成交数量
      * @param value The value of 'minimumQty'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setMinimumQty(int value) {
      validate(fields()[4], value);
      this.minimumQty = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'minimumQty' field has been set.
      * 最小成交数量
      * @return True if the 'minimumQty' field has been set, false otherwise.
      */
    public boolean hasMinimumQty() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'minimumQty' field.
      * 最小成交数量
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearMinimumQty() {
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'offerPrice' field.
      * 委托价格
      * @return The value.
      */
    public double getOfferPrice() {
      return offerPrice;
    }


    /**
      * Sets the value of the 'offerPrice' field.
      * 委托价格
      * @param value The value of 'offerPrice'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setOfferPrice(double value) {
      validate(fields()[5], value);
      this.offerPrice = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'offerPrice' field has been set.
      * 委托价格
      * @return True if the 'offerPrice' field has been set, false otherwise.
      */
    public boolean hasOfferPrice() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'offerPrice' field.
      * 委托价格
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearOfferPrice() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentId' field.
      * 交易标的ID
      * @return The value.
      */
    public int getInstrumentId() {
      return instrumentId;
    }


    /**
      * Sets the value of the 'instrumentId' field.
      * 交易标的ID
      * @param value The value of 'instrumentId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setInstrumentId(int value) {
      validate(fields()[6], value);
      this.instrumentId = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentId' field has been set.
      * 交易标的ID
      * @return True if the 'instrumentId' field has been set, false otherwise.
      */
    public boolean hasInstrumentId() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'instrumentId' field.
      * 交易标的ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearInstrumentId() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'instrumentCode' field.
      * 交易标的代码
      * @return The value.
      */
    public java.lang.String getInstrumentCode() {
      return instrumentCode;
    }


    /**
      * Sets the value of the 'instrumentCode' field.
      * 交易标的代码
      * @param value The value of 'instrumentCode'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setInstrumentCode(java.lang.String value) {
      validate(fields()[7], value);
      this.instrumentCode = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'instrumentCode' field has been set.
      * 交易标的代码
      * @return True if the 'instrumentCode' field has been set, false otherwise.
      */
    public boolean hasInstrumentCode() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'instrumentCode' field.
      * 交易标的代码
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearInstrumentCode() {
      instrumentCode = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'exchangeCode' field.
      * 交易所代码
      * @return The value.
      */
    public java.lang.String getExchangeCode() {
      return exchangeCode;
    }


    /**
      * Sets the value of the 'exchangeCode' field.
      * 交易所代码
      * @param value The value of 'exchangeCode'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setExchangeCode(java.lang.String value) {
      validate(fields()[8], value);
      this.exchangeCode = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'exchangeCode' field has been set.
      * 交易所代码
      * @return True if the 'exchangeCode' field has been set, false otherwise.
      */
    public boolean hasExchangeCode() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'exchangeCode' field.
      * 交易所代码
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearExchangeCode() {
      exchangeCode = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'type' field.
      * 订单类型
      * @return The value.
      */
    public io.rapid.core.serializable.avro.enums.OrdType getType() {
      return type;
    }


    /**
      * Sets the value of the 'type' field.
      * 订单类型
      * @param value The value of 'type'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setType(io.rapid.core.serializable.avro.enums.OrdType value) {
      validate(fields()[9], value);
      this.type = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'type' field has been set.
      * 订单类型
      * @return True if the 'type' field has been set, false otherwise.
      */
    public boolean hasType() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'type' field.
      * 订单类型
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearType() {
      type = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'valid' field.
      * 订单有效类型
      * @return The value.
      */
    public io.rapid.core.serializable.avro.enums.OrdValid getValid() {
      return valid;
    }


    /**
      * Sets the value of the 'valid' field.
      * 订单有效类型
      * @param value The value of 'valid'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setValid(io.rapid.core.serializable.avro.enums.OrdValid value) {
      validate(fields()[10], value);
      this.valid = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'valid' field has been set.
      * 订单有效类型
      * @return True if the 'valid' field has been set, false otherwise.
      */
    public boolean hasValid() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'valid' field.
      * 订单有效类型
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearValid() {
      valid = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'action' field.
      * 订单动作
      * @return The value.
      */
    public io.rapid.core.serializable.avro.enums.TrdAction getAction() {
      return action;
    }


    /**
      * Sets the value of the 'action' field.
      * 订单动作
      * @param value The value of 'action'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setAction(io.rapid.core.serializable.avro.enums.TrdAction value) {
      validate(fields()[11], value);
      this.action = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'action' field has been set.
      * 订单动作
      * @return True if the 'action' field has been set, false otherwise.
      */
    public boolean hasAction() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'action' field.
      * 订单动作
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearAction() {
      action = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'direction' field.
      * 订单方向
      * @return The value.
      */
    public io.rapid.core.serializable.avro.enums.TrdDirection getDirection() {
      return direction;
    }


    /**
      * Sets the value of the 'direction' field.
      * 订单方向
      * @param value The value of 'direction'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setDirection(io.rapid.core.serializable.avro.enums.TrdDirection value) {
      validate(fields()[12], value);
      this.direction = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'direction' field has been set.
      * 订单方向
      * @return True if the 'direction' field has been set, false otherwise.
      */
    public boolean hasDirection() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'direction' field.
      * 订单方向
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearDirection() {
      direction = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'accountId' field.
      * 账户ID
      * @return The value.
      */
    public int getAccountId() {
      return accountId;
    }


    /**
      * Sets the value of the 'accountId' field.
      * 账户ID
      * @param value The value of 'accountId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setAccountId(int value) {
      validate(fields()[13], value);
      this.accountId = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'accountId' field has been set.
      * 账户ID
      * @return True if the 'accountId' field has been set, false otherwise.
      */
    public boolean hasAccountId() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'accountId' field.
      * 账户ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearAccountId() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'brokerId' field.
      * 经纪商ID
      * @return The value.
      */
    public java.lang.String getBrokerId() {
      return brokerId;
    }


    /**
      * Sets the value of the 'brokerId' field.
      * 经纪商ID
      * @param value The value of 'brokerId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setBrokerId(java.lang.String value) {
      validate(fields()[14], value);
      this.brokerId = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'brokerId' field has been set.
      * 经纪商ID
      * @return True if the 'brokerId' field has been set, false otherwise.
      */
    public boolean hasBrokerId() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'brokerId' field.
      * 经纪商ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearBrokerId() {
      brokerId = null;
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'subAccountId' field.
      * 子账户ID
      * @return The value.
      */
    public int getSubAccountId() {
      return subAccountId;
    }


    /**
      * Sets the value of the 'subAccountId' field.
      * 子账户ID
      * @param value The value of 'subAccountId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setSubAccountId(int value) {
      validate(fields()[15], value);
      this.subAccountId = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'subAccountId' field has been set.
      * 子账户ID
      * @return True if the 'subAccountId' field has been set, false otherwise.
      */
    public boolean hasSubAccountId() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'subAccountId' field.
      * 子账户ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearSubAccountId() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'strategyId' field.
      * 策略ID
      * @return The value.
      */
    public int getStrategyId() {
      return strategyId;
    }


    /**
      * Sets the value of the 'strategyId' field.
      * 策略ID
      * @param value The value of 'strategyId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setStrategyId(int value) {
      validate(fields()[16], value);
      this.strategyId = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'strategyId' field has been set.
      * 策略ID
      * @return True if the 'strategyId' field has been set, false otherwise.
      */
    public boolean hasStrategyId() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'strategyId' field.
      * 策略ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearStrategyId() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'delayMillis' field.
      * 延迟时间
      * @return The value.
      */
    public long getDelayMillis() {
      return delayMillis;
    }


    /**
      * Sets the value of the 'delayMillis' field.
      * 延迟时间
      * @param value The value of 'delayMillis'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setDelayMillis(long value) {
      validate(fields()[17], value);
      this.delayMillis = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'delayMillis' field has been set.
      * 延迟时间
      * @return True if the 'delayMillis' field has been set, false otherwise.
      */
    public boolean hasDelayMillis() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'delayMillis' field.
      * 延迟时间
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearDelayMillis() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'operatorId' field.
      * 操作ID
      * @return The value.
      */
    public java.lang.String getOperatorId() {
      return operatorId;
    }


    /**
      * Sets the value of the 'operatorId' field.
      * 操作ID
      * @param value The value of 'operatorId'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setOperatorId(java.lang.String value) {
      validate(fields()[18], value);
      this.operatorId = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'operatorId' field has been set.
      * 操作ID
      * @return True if the 'operatorId' field has been set, false otherwise.
      */
    public boolean hasOperatorId() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'operatorId' field.
      * 操作ID
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearOperatorId() {
      operatorId = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'remark' field.
      * 备注
      * @return The value.
      */
    public java.lang.String getRemark() {
      return remark;
    }


    /**
      * Sets the value of the 'remark' field.
      * 备注
      * @param value The value of 'remark'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setRemark(java.lang.String value) {
      validate(fields()[19], value);
      this.remark = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'remark' field has been set.
      * 备注
      * @return True if the 'remark' field has been set, false otherwise.
      */
    public boolean hasRemark() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'remark' field.
      * 备注
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearRemark() {
      remark = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'reason' field.
      * 操作原因
      * @return The value.
      */
    public java.lang.String getReason() {
      return reason;
    }


    /**
      * Sets the value of the 'reason' field.
      * 操作原因
      * @param value The value of 'reason'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setReason(java.lang.String value) {
      validate(fields()[20], value);
      this.reason = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'reason' field has been set.
      * 操作原因
      * @return True if the 'reason' field has been set, false otherwise.
      */
    public boolean hasReason() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'reason' field.
      * 操作原因
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearReason() {
      reason = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'source' field.
      * 操作来源
      * @return The value.
      */
    public java.lang.String getSource() {
      return source;
    }


    /**
      * Sets the value of the 'source' field.
      * 操作来源
      * @param value The value of 'source'.
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder setSource(java.lang.String value) {
      validate(fields()[21], value);
      this.source = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'source' field has been set.
      * 操作来源
      * @return True if the 'source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'source' field.
      * 操作来源
      * @return This builder.
      */
    public io.rapid.core.serializable.avro.outbound.NewOrder.Builder clearSource() {
      source = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    @Override
    public NewOrder build() {
      try {
        NewOrder record = new NewOrder();
        record.generateTime = fieldSetFlags()[0] ? this.generateTime : (java.lang.Long) defaultValue(fields()[0]);
        record.sendTime = fieldSetFlags()[1] ? this.sendTime : (java.lang.Long) defaultValue(fields()[1]);
        record.ordSysId = fieldSetFlags()[2] ? this.ordSysId : (java.lang.Long) defaultValue(fields()[2]);
        record.offerQty = fieldSetFlags()[3] ? this.offerQty : (java.lang.Integer) defaultValue(fields()[3]);
        record.minimumQty = fieldSetFlags()[4] ? this.minimumQty : (java.lang.Integer) defaultValue(fields()[4]);
        record.offerPrice = fieldSetFlags()[5] ? this.offerPrice : (java.lang.Double) defaultValue(fields()[5]);
        record.instrumentId = fieldSetFlags()[6] ? this.instrumentId : (java.lang.Integer) defaultValue(fields()[6]);
        record.instrumentCode = fieldSetFlags()[7] ? this.instrumentCode : (java.lang.String) defaultValue(fields()[7]);
        record.exchangeCode = fieldSetFlags()[8] ? this.exchangeCode : (java.lang.String) defaultValue(fields()[8]);
        record.type = fieldSetFlags()[9] ? this.type : (io.rapid.core.serializable.avro.enums.OrdType) defaultValue(fields()[9]);
        record.valid = fieldSetFlags()[10] ? this.valid : (io.rapid.core.serializable.avro.enums.OrdValid) defaultValue(fields()[10]);
        record.action = fieldSetFlags()[11] ? this.action : (io.rapid.core.serializable.avro.enums.TrdAction) defaultValue(fields()[11]);
        record.direction = fieldSetFlags()[12] ? this.direction : (io.rapid.core.serializable.avro.enums.TrdDirection) defaultValue(fields()[12]);
        record.accountId = fieldSetFlags()[13] ? this.accountId : (java.lang.Integer) defaultValue(fields()[13]);
        record.brokerId = fieldSetFlags()[14] ? this.brokerId : (java.lang.String) defaultValue(fields()[14]);
        record.subAccountId = fieldSetFlags()[15] ? this.subAccountId : (java.lang.Integer) defaultValue(fields()[15]);
        record.strategyId = fieldSetFlags()[16] ? this.strategyId : (java.lang.Integer) defaultValue(fields()[16]);
        record.delayMillis = fieldSetFlags()[17] ? this.delayMillis : (java.lang.Long) defaultValue(fields()[17]);
        record.operatorId = fieldSetFlags()[18] ? this.operatorId : (java.lang.String) defaultValue(fields()[18]);
        record.remark = fieldSetFlags()[19] ? this.remark : (java.lang.String) defaultValue(fields()[19]);
        record.reason = fieldSetFlags()[20] ? this.reason : (java.lang.String) defaultValue(fields()[20]);
        record.source = fieldSetFlags()[21] ? this.source : (java.lang.String) defaultValue(fields()[21]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<NewOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<NewOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<NewOrder>
    READER$ = (org.apache.avro.io.DatumReader<NewOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeLong(this.generateTime);

    out.writeLong(this.sendTime);

    out.writeLong(this.ordSysId);

    out.writeInt(this.offerQty);

    out.writeInt(this.minimumQty);

    out.writeDouble(this.offerPrice);

    out.writeInt(this.instrumentId);

    out.writeString(this.instrumentCode);

    out.writeString(this.exchangeCode);

    out.writeEnum(this.type.ordinal());

    out.writeEnum(this.valid.ordinal());

    out.writeEnum(this.action.ordinal());

    out.writeEnum(this.direction.ordinal());

    out.writeInt(this.accountId);

    out.writeString(this.brokerId);

    out.writeInt(this.subAccountId);

    out.writeInt(this.strategyId);

    out.writeLong(this.delayMillis);

    out.writeString(this.operatorId);

    out.writeString(this.remark);

    out.writeString(this.reason);

    out.writeString(this.source);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.generateTime = in.readLong();

      this.sendTime = in.readLong();

      this.ordSysId = in.readLong();

      this.offerQty = in.readInt();

      this.minimumQty = in.readInt();

      this.offerPrice = in.readDouble();

      this.instrumentId = in.readInt();

      this.instrumentCode = in.readString();

      this.exchangeCode = in.readString();

      this.type = io.rapid.core.serializable.avro.enums.OrdType.values()[in.readEnum()];

      this.valid = io.rapid.core.serializable.avro.enums.OrdValid.values()[in.readEnum()];

      this.action = io.rapid.core.serializable.avro.enums.TrdAction.values()[in.readEnum()];

      this.direction = io.rapid.core.serializable.avro.enums.TrdDirection.values()[in.readEnum()];

      this.accountId = in.readInt();

      this.brokerId = in.readString();

      this.subAccountId = in.readInt();

      this.strategyId = in.readInt();

      this.delayMillis = in.readLong();

      this.operatorId = in.readString();

      this.remark = in.readString();

      this.reason = in.readString();

      this.source = in.readString();

    } else {
      for (int i = 0; i < 22; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.generateTime = in.readLong();
          break;

        case 1:
          this.sendTime = in.readLong();
          break;

        case 2:
          this.ordSysId = in.readLong();
          break;

        case 3:
          this.offerQty = in.readInt();
          break;

        case 4:
          this.minimumQty = in.readInt();
          break;

        case 5:
          this.offerPrice = in.readDouble();
          break;

        case 6:
          this.instrumentId = in.readInt();
          break;

        case 7:
          this.instrumentCode = in.readString();
          break;

        case 8:
          this.exchangeCode = in.readString();
          break;

        case 9:
          this.type = io.rapid.core.serializable.avro.enums.OrdType.values()[in.readEnum()];
          break;

        case 10:
          this.valid = io.rapid.core.serializable.avro.enums.OrdValid.values()[in.readEnum()];
          break;

        case 11:
          this.action = io.rapid.core.serializable.avro.enums.TrdAction.values()[in.readEnum()];
          break;

        case 12:
          this.direction = io.rapid.core.serializable.avro.enums.TrdDirection.values()[in.readEnum()];
          break;

        case 13:
          this.accountId = in.readInt();
          break;

        case 14:
          this.brokerId = in.readString();
          break;

        case 15:
          this.subAccountId = in.readInt();
          break;

        case 16:
          this.strategyId = in.readInt();
          break;

        case 17:
          this.delayMillis = in.readLong();
          break;

        case 18:
          this.operatorId = in.readString();
          break;

        case 19:
          this.remark = in.readString();
          break;

        case 20:
          this.reason = in.readString();
          break;

        case 21:
          this.source = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










