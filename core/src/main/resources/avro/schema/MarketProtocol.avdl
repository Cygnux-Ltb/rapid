@namespace("io.cygnuxltb.jcts.core.ser")
protocol MarketProtocol {

	/**
	 * 行情类型
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.enums")
	enum MarketDataType {
		DEPTH, FAST, LEVEL10, LEVEL20, LEVEL30
	}

	/**
	 * 行情订阅状态
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.enums")
	enum SubscribeStatus {
		SUCCEED, PART_SUCCEED, FAILED
	}

	/**
	 * 行情订阅 
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.req")
	record MarketDataSubscribe {
		io.cygnuxltb.jcts.core.ser.enums.MarketDataType type;
		array<string> instrumentCodes;
		string recvAddr;
	}

	/**
	 * 行情订阅回报
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.event")
	record MarketDataSubscribeEvent {
		io.cygnuxltb.jcts.core.ser.enums.SubscribeStatus status;
		array<string> successInstrumentCodes;
		array<string> failInstrumentCodes;
		string msg;
	}

	/**
	 * 深度行情数据结构
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.event")
	record DepthMarketDataEvent {
		long timestamp;
		int instrumentId;
		string instrumentCode;
		double lastPrice;
		int volume;
		long turnover;
		array<double> bidPrices;
		array<int> bidVolumes;
		array<double> askPrices;
		array<int> askVolumes;
		int depth;
	}

	/**
	 * 五档快速行情数据结构
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.event")
	record FastMarketDataEvent {
		long timestamp;
		int instrumentId;
		string instrumentCode;
		double lastPrice;
		int volume;
		long turnover;
		double bidPrices1;
		double bidPrices2;
		double bidPrices3;
		double bidPrices4;
		double bidPrices5;
		int bidVolumes1;
		int bidVolumes2;
		int bidVolumes3;
		int bidVolumes4;
		int bidVolumes5;
		double askPrices1;
		double askPrices2;
		double askPrices3;
		double askPrices4;
		double askPrices5;
		int askVolumes1;
		int askVolumes2;
		int askVolumes3;
		int askVolumes4;
		int askVolumes5;
	}

	/**
	 * 十档行情数据结构
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.event")
	record L10MarketDataEvent {
		long timestamp;
		int instrumentId;
		string instrumentCode;
		double lastPrice;
		int volume;
		long turnover;
		double bidPrices1;
		double bidPrices2;
		double bidPrices3;
		double bidPrices4;
		double bidPrices5;
		double bidPrices6;
		double bidPrices7;
		double bidPrices8;
		double bidPrices9;
		double bidPrices10;
		int bidVolumes1;
		int bidVolumes2;
		int bidVolumes3;
		int bidVolumes4;
		int bidVolumes5;
		int bidVolumes6;
		int bidVolumes7;
		int bidVolumes8;
		int bidVolumes9;
		int bidVolumes10;
		double askPrices1;
		double askPrices2;
		double askPrices3;
		double askPrices4;
		double askPrices5;
		double askPrices6;
		double askPrices7;
		double askPrices8;
		double askPrices9;
		double askPrices10;
		int askVolumes1;
		int askVolumes2;
		int askVolumes3;
		int askVolumes4;
		int askVolumes5;
		int askVolumes6;
		int askVolumes7;
		int askVolumes8;
		int askVolumes9;
		int askVolumes10;
	}

	/**
	 * 二十档行情数据结构
	 */
	@namespace("io.cygnuxltb.jcts.core.ser.event")
	record L20MarketDataEvent {
		long timestamp;
		int instrumentId;
		string instrumentCode;
		double lastPrice;
		int volume;
		long turnover;
		double bidPrices1;
		double bidPrices2;
		double bidPrices3;
		double bidPrices4;
		double bidPrices5;
		double bidPrices6;
		double bidPrices7;
		double bidPrices8;
		double bidPrices9;
		double bidPrices10;
		double bidPrices11;
		double bidPrices12;
		double bidPrices13;
		double bidPrices14;
		double bidPrices15;
		double bidPrices16;
		double bidPrices17;
		double bidPrices18;
		double bidPrices19;
		double bidPrices20;
		int bidVolumes1;
		int bidVolumes2;
		int bidVolumes3;
		int bidVolumes4;
		int bidVolumes5;
		int bidVolumes6;
		int bidVolumes7;
		int bidVolumes8;
		int bidVolumes9;
		int bidVolumes10;
		int bidVolumes11;
		int bidVolumes12;
		int bidVolumes13;
		int bidVolumes14;
		int bidVolumes15;
		int bidVolumes16;
		int bidVolumes17;
		int bidVolumes18;
		int bidVolumes19;
		int bidVolumes20;
		double askPrices1;
		double askPrices2;
		double askPrices3;
		double askPrices4;
		double askPrices5;
		double askPrices6;
		double askPrices7;
		double askPrices8;
		double askPrices9;
		double askPrices10;
		double askPrices11;
		double askPrices12;
		double askPrices13;
		double askPrices14;
		double askPrices15;
		double askPrices16;
		double askPrices17;
		double askPrices18;
		double askPrices19;
		double askPrices20;
		int askVolumes1;
		int askVolumes2;
		int askVolumes3;
		int askVolumes4;
		int askVolumes5;
		int askVolumes6;
		int askVolumes7;
		int askVolumes8;
		int askVolumes9;
		int askVolumes10;
		int askVolumes11;
		int askVolumes12;
		int askVolumes13;
		int askVolumes14;
		int askVolumes15;
		int askVolumes16;
		int askVolumes17;
		int askVolumes18;
		int askVolumes19;
		int askVolumes20;
	}

}
