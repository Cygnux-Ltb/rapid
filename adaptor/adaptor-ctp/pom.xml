<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>io.cygnuxltb</groupId>
        <artifactId>adaptor</artifactId>
        <version>1.0</version>
    </parent>

    <artifactId>adaptor-ctp</artifactId>
    <name>adaptor-ctp</name>

    <build>
        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <version>${spring-boot.version}</version>
                <configuration>
                    <jvmArguments>-Xmx512m</jvmArguments>
                </configuration>
            </plugin>
        </plugins>
    </build>

    <dependencies>
        <dependency>
            <groupId>com.google.inject</groupId>
            <artifactId>guice</artifactId>
            <version>7.0.0</version>
            <exclusions>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>io.mercury</groupId>
            <artifactId>transport-rabbitmq</artifactId>
        </dependency>
        <dependency>
            <groupId>io.mercury</groupId>
            <artifactId>transport-zmq</artifactId>
        </dependency>

        <!-- Jakarta Annotations API -->
        <dependency>
            <groupId>jakarta.annotation</groupId>
            <artifactId>jakarta.annotation-api</artifactId>
            <version>2.1.1</version>
        </dependency>

        <!-- Spring Boot autoconfiguration attempts to automatically
             configure your Spring application based on the jar
             dependencies that you have added. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-autoconfigure</artifactId>
            <version>${spring-boot.version}</version>
        </dependency>

        <!-- Starter for using Log4j2 for logging.
             An alternative to spring-boot-starter-logging -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-log4j2</artifactId>
            <version>${spring-boot.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-jul</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j2-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <!-- PROD CTP JNI API -->
        <!-- The /install/install.sh must be run first -->
        <!-- <dependency> <groupId>ctp</groupId> <artifactId>thostapi</artifactId>
            <version>6.3.15</version> </dependency> -->

        <!-- SIMNOW CTP JNI API -->
        <!-- The /install/install.sh must be run first -->
        <dependency>
            <groupId>ctp</groupId>
            <artifactId>thostapi</artifactId>
            <version>6.3.13</version>
        </dependency>

        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>io.cygnuxltb</groupId>
            <artifactId>core</artifactId>
            <version>1.0</version>
        </dependency>
    </dependencies>

</project>
