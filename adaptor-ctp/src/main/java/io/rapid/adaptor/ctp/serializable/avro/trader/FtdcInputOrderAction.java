/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.adaptor.ctp.serializable.avro.trader;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** FtdcInputOrderAction */
@org.apache.avro.specific.AvroGenerated
public class FtdcInputOrderAction extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = -923739706129180728L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FtdcInputOrderAction\",\"namespace\":\"io.rapid.adaptor.ctp.serializable.avro.trader\",\"doc\":\"FtdcInputOrderAction\",\"fields\":[{\"name\":\"ErrorID\",\"type\":\"int\",\"doc\":\"FTDC响应信息 - 错误代码\"},{\"name\":\"ErrorMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"FTDC响应信息 - 错误信息\"},{\"name\":\"IsLast\",\"type\":\"boolean\",\"doc\":\"是否最后一条信息\"},{\"name\":\"BrokerID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪公司代码\"},{\"name\":\"InvestorID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资者代码\"},{\"name\":\"OrderActionRef\",\"type\":\"int\",\"doc\":\"报单操作引用\"},{\"name\":\"OrderRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单引用\"},{\"name\":\"RequestID\",\"type\":\"int\",\"doc\":\"请求编号\"},{\"name\":\"FrontID\",\"type\":\"int\",\"doc\":\"前置编号\"},{\"name\":\"SessionID\",\"type\":\"int\",\"doc\":\"会话编号\"},{\"name\":\"ExchangeID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所代码\"},{\"name\":\"OrderSysID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单编号\"},{\"name\":\"ActionFlag\",\"type\":\"int\",\"doc\":\"操作标志\"},{\"name\":\"LimitPrice\",\"type\":\"double\",\"doc\":\"价格\"},{\"name\":\"VolumeChange\",\"type\":\"int\",\"doc\":\"数量变化\"},{\"name\":\"UserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户代码\"},{\"name\":\"InstrumentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"合约代码\"},{\"name\":\"InvestUnitID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资单元代码\"},{\"name\":\"IPAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"IP地址\"},{\"name\":\"MacAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"MAC地址\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FtdcInputOrderAction> ENCODER =
      new BinaryMessageEncoder<FtdcInputOrderAction>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FtdcInputOrderAction> DECODER =
      new BinaryMessageDecoder<FtdcInputOrderAction>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FtdcInputOrderAction> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FtdcInputOrderAction> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FtdcInputOrderAction> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FtdcInputOrderAction>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FtdcInputOrderAction to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FtdcInputOrderAction from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FtdcInputOrderAction instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FtdcInputOrderAction fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** FTDC响应信息 - 错误代码 */
  public int ErrorID;
  /** FTDC响应信息 - 错误信息 */
  public java.lang.String ErrorMsg;
  /** 是否最后一条信息 */
  public boolean IsLast;
  /** 经纪公司代码 */
  public java.lang.String BrokerID;
  /** 投资者代码 */
  public java.lang.String InvestorID;
  /** 报单操作引用 */
  public int OrderActionRef;
  /** 报单引用 */
  public java.lang.String OrderRef;
  /** 请求编号 */
  public int RequestID;
  /** 前置编号 */
  public int FrontID;
  /** 会话编号 */
  public int SessionID;
  /** 交易所代码 */
  public java.lang.String ExchangeID;
  /** 报单编号 */
  public java.lang.String OrderSysID;
  /** 操作标志 */
  public int ActionFlag;
  /** 价格 */
  public double LimitPrice;
  /** 数量变化 */
  public int VolumeChange;
  /** 用户代码 */
  public java.lang.String UserID;
  /** 合约代码 */
  public java.lang.String InstrumentID;
  /** 投资单元代码 */
  public java.lang.String InvestUnitID;
  /** IP地址 */
  public java.lang.String IPAddress;
  /** MAC地址 */
  public java.lang.String MacAddress;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FtdcInputOrderAction() {}

  /**
   * All-args constructor.
   * @param ErrorID FTDC响应信息 - 错误代码
   * @param ErrorMsg FTDC响应信息 - 错误信息
   * @param IsLast 是否最后一条信息
   * @param BrokerID 经纪公司代码
   * @param InvestorID 投资者代码
   * @param OrderActionRef 报单操作引用
   * @param OrderRef 报单引用
   * @param RequestID 请求编号
   * @param FrontID 前置编号
   * @param SessionID 会话编号
   * @param ExchangeID 交易所代码
   * @param OrderSysID 报单编号
   * @param ActionFlag 操作标志
   * @param LimitPrice 价格
   * @param VolumeChange 数量变化
   * @param UserID 用户代码
   * @param InstrumentID 合约代码
   * @param InvestUnitID 投资单元代码
   * @param IPAddress IP地址
   * @param MacAddress MAC地址
   */
  public FtdcInputOrderAction(java.lang.Integer ErrorID, java.lang.String ErrorMsg, java.lang.Boolean IsLast, java.lang.String BrokerID, java.lang.String InvestorID, java.lang.Integer OrderActionRef, java.lang.String OrderRef, java.lang.Integer RequestID, java.lang.Integer FrontID, java.lang.Integer SessionID, java.lang.String ExchangeID, java.lang.String OrderSysID, java.lang.Integer ActionFlag, java.lang.Double LimitPrice, java.lang.Integer VolumeChange, java.lang.String UserID, java.lang.String InstrumentID, java.lang.String InvestUnitID, java.lang.String IPAddress, java.lang.String MacAddress) {
    this.ErrorID = ErrorID;
    this.ErrorMsg = ErrorMsg;
    this.IsLast = IsLast;
    this.BrokerID = BrokerID;
    this.InvestorID = InvestorID;
    this.OrderActionRef = OrderActionRef;
    this.OrderRef = OrderRef;
    this.RequestID = RequestID;
    this.FrontID = FrontID;
    this.SessionID = SessionID;
    this.ExchangeID = ExchangeID;
    this.OrderSysID = OrderSysID;
    this.ActionFlag = ActionFlag;
    this.LimitPrice = LimitPrice;
    this.VolumeChange = VolumeChange;
    this.UserID = UserID;
    this.InstrumentID = InstrumentID;
    this.InvestUnitID = InvestUnitID;
    this.IPAddress = IPAddress;
    this.MacAddress = MacAddress;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ErrorID;
    case 1: return ErrorMsg;
    case 2: return IsLast;
    case 3: return BrokerID;
    case 4: return InvestorID;
    case 5: return OrderActionRef;
    case 6: return OrderRef;
    case 7: return RequestID;
    case 8: return FrontID;
    case 9: return SessionID;
    case 10: return ExchangeID;
    case 11: return OrderSysID;
    case 12: return ActionFlag;
    case 13: return LimitPrice;
    case 14: return VolumeChange;
    case 15: return UserID;
    case 16: return InstrumentID;
    case 17: return InvestUnitID;
    case 18: return IPAddress;
    case 19: return MacAddress;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ErrorID = (java.lang.Integer)value$; break;
    case 1: ErrorMsg = value$ != null ? value$.toString() : null; break;
    case 2: IsLast = (java.lang.Boolean)value$; break;
    case 3: BrokerID = value$ != null ? value$.toString() : null; break;
    case 4: InvestorID = value$ != null ? value$.toString() : null; break;
    case 5: OrderActionRef = (java.lang.Integer)value$; break;
    case 6: OrderRef = value$ != null ? value$.toString() : null; break;
    case 7: RequestID = (java.lang.Integer)value$; break;
    case 8: FrontID = (java.lang.Integer)value$; break;
    case 9: SessionID = (java.lang.Integer)value$; break;
    case 10: ExchangeID = value$ != null ? value$.toString() : null; break;
    case 11: OrderSysID = value$ != null ? value$.toString() : null; break;
    case 12: ActionFlag = (java.lang.Integer)value$; break;
    case 13: LimitPrice = (java.lang.Double)value$; break;
    case 14: VolumeChange = (java.lang.Integer)value$; break;
    case 15: UserID = value$ != null ? value$.toString() : null; break;
    case 16: InstrumentID = value$ != null ? value$.toString() : null; break;
    case 17: InvestUnitID = value$ != null ? value$.toString() : null; break;
    case 18: IPAddress = value$ != null ? value$.toString() : null; break;
    case 19: MacAddress = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ErrorID' field.
   * @return FTDC响应信息 - 错误代码
   */
  public int getErrorID() {
    return ErrorID;
  }


  /**
   * Sets the value of the 'ErrorID' field.
   * FTDC响应信息 - 错误代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setErrorID(int value) {
    this.ErrorID = value;
    return this;
  }

  /**
   * Gets the value of the 'ErrorMsg' field.
   * @return FTDC响应信息 - 错误信息
   */
  public java.lang.String getErrorMsg() {
    return ErrorMsg;
  }


  /**
   * Sets the value of the 'ErrorMsg' field.
   * FTDC响应信息 - 错误信息
   * @param value the value to set.
   */
  public FtdcInputOrderAction setErrorMsg(java.lang.String value) {
    this.ErrorMsg = value;
    return this;
  }

  /**
   * Gets the value of the 'IsLast' field.
   * @return 是否最后一条信息
   */
  public boolean getIsLast() {
    return IsLast;
  }


  /**
   * Sets the value of the 'IsLast' field.
   * 是否最后一条信息
   * @param value the value to set.
   */
  public FtdcInputOrderAction setIsLast(boolean value) {
    this.IsLast = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerID' field.
   * @return 经纪公司代码
   */
  public java.lang.String getBrokerID() {
    return BrokerID;
  }


  /**
   * Sets the value of the 'BrokerID' field.
   * 经纪公司代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setBrokerID(java.lang.String value) {
    this.BrokerID = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestorID' field.
   * @return 投资者代码
   */
  public java.lang.String getInvestorID() {
    return InvestorID;
  }


  /**
   * Sets the value of the 'InvestorID' field.
   * 投资者代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setInvestorID(java.lang.String value) {
    this.InvestorID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderActionRef' field.
   * @return 报单操作引用
   */
  public int getOrderActionRef() {
    return OrderActionRef;
  }


  /**
   * Sets the value of the 'OrderActionRef' field.
   * 报单操作引用
   * @param value the value to set.
   */
  public FtdcInputOrderAction setOrderActionRef(int value) {
    this.OrderActionRef = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderRef' field.
   * @return 报单引用
   */
  public java.lang.String getOrderRef() {
    return OrderRef;
  }


  /**
   * Sets the value of the 'OrderRef' field.
   * 报单引用
   * @param value the value to set.
   */
  public FtdcInputOrderAction setOrderRef(java.lang.String value) {
    this.OrderRef = value;
    return this;
  }

  /**
   * Gets the value of the 'RequestID' field.
   * @return 请求编号
   */
  public int getRequestID() {
    return RequestID;
  }


  /**
   * Sets the value of the 'RequestID' field.
   * 请求编号
   * @param value the value to set.
   */
  public FtdcInputOrderAction setRequestID(int value) {
    this.RequestID = value;
    return this;
  }

  /**
   * Gets the value of the 'FrontID' field.
   * @return 前置编号
   */
  public int getFrontID() {
    return FrontID;
  }


  /**
   * Sets the value of the 'FrontID' field.
   * 前置编号
   * @param value the value to set.
   */
  public FtdcInputOrderAction setFrontID(int value) {
    this.FrontID = value;
    return this;
  }

  /**
   * Gets the value of the 'SessionID' field.
   * @return 会话编号
   */
  public int getSessionID() {
    return SessionID;
  }


  /**
   * Sets the value of the 'SessionID' field.
   * 会话编号
   * @param value the value to set.
   */
  public FtdcInputOrderAction setSessionID(int value) {
    this.SessionID = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeID' field.
   * @return 交易所代码
   */
  public java.lang.String getExchangeID() {
    return ExchangeID;
  }


  /**
   * Sets the value of the 'ExchangeID' field.
   * 交易所代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setExchangeID(java.lang.String value) {
    this.ExchangeID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderSysID' field.
   * @return 报单编号
   */
  public java.lang.String getOrderSysID() {
    return OrderSysID;
  }


  /**
   * Sets the value of the 'OrderSysID' field.
   * 报单编号
   * @param value the value to set.
   */
  public FtdcInputOrderAction setOrderSysID(java.lang.String value) {
    this.OrderSysID = value;
    return this;
  }

  /**
   * Gets the value of the 'ActionFlag' field.
   * @return 操作标志
   */
  public int getActionFlag() {
    return ActionFlag;
  }


  /**
   * Sets the value of the 'ActionFlag' field.
   * 操作标志
   * @param value the value to set.
   */
  public FtdcInputOrderAction setActionFlag(int value) {
    this.ActionFlag = value;
    return this;
  }

  /**
   * Gets the value of the 'LimitPrice' field.
   * @return 价格
   */
  public double getLimitPrice() {
    return LimitPrice;
  }


  /**
   * Sets the value of the 'LimitPrice' field.
   * 价格
   * @param value the value to set.
   */
  public FtdcInputOrderAction setLimitPrice(double value) {
    this.LimitPrice = value;
    return this;
  }

  /**
   * Gets the value of the 'VolumeChange' field.
   * @return 数量变化
   */
  public int getVolumeChange() {
    return VolumeChange;
  }


  /**
   * Sets the value of the 'VolumeChange' field.
   * 数量变化
   * @param value the value to set.
   */
  public FtdcInputOrderAction setVolumeChange(int value) {
    this.VolumeChange = value;
    return this;
  }

  /**
   * Gets the value of the 'UserID' field.
   * @return 用户代码
   */
  public java.lang.String getUserID() {
    return UserID;
  }


  /**
   * Sets the value of the 'UserID' field.
   * 用户代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setUserID(java.lang.String value) {
    this.UserID = value;
    return this;
  }

  /**
   * Gets the value of the 'InstrumentID' field.
   * @return 合约代码
   */
  public java.lang.String getInstrumentID() {
    return InstrumentID;
  }


  /**
   * Sets the value of the 'InstrumentID' field.
   * 合约代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setInstrumentID(java.lang.String value) {
    this.InstrumentID = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestUnitID' field.
   * @return 投资单元代码
   */
  public java.lang.String getInvestUnitID() {
    return InvestUnitID;
  }


  /**
   * Sets the value of the 'InvestUnitID' field.
   * 投资单元代码
   * @param value the value to set.
   */
  public FtdcInputOrderAction setInvestUnitID(java.lang.String value) {
    this.InvestUnitID = value;
    return this;
  }

  /**
   * Gets the value of the 'IPAddress' field.
   * @return IP地址
   */
  public java.lang.String getIPAddress() {
    return IPAddress;
  }


  /**
   * Sets the value of the 'IPAddress' field.
   * IP地址
   * @param value the value to set.
   */
  public FtdcInputOrderAction setIPAddress(java.lang.String value) {
    this.IPAddress = value;
    return this;
  }

  /**
   * Gets the value of the 'MacAddress' field.
   * @return MAC地址
   */
  public java.lang.String getMacAddress() {
    return MacAddress;
  }


  /**
   * Sets the value of the 'MacAddress' field.
   * MAC地址
   * @param value the value to set.
   */
  public FtdcInputOrderAction setMacAddress(java.lang.String value) {
    this.MacAddress = value;
    return this;
  }

  /**
   * Creates a new FtdcInputOrderAction RecordBuilder.
   * @return A new FtdcInputOrderAction RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder newBuilder() {
    return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder();
  }

  /**
   * Creates a new FtdcInputOrderAction RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FtdcInputOrderAction RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder(other);
    }
  }

  /**
   * Creates a new FtdcInputOrderAction RecordBuilder by copying an existing FtdcInputOrderAction instance.
   * @param other The existing instance to copy.
   * @return A new FtdcInputOrderAction RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder(other);
    }
  }

  /**
   * RecordBuilder for FtdcInputOrderAction instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FtdcInputOrderAction>
    implements org.apache.avro.data.RecordBuilder<FtdcInputOrderAction> {

    /** FTDC响应信息 - 错误代码 */
    private int ErrorID;
    /** FTDC响应信息 - 错误信息 */
    private java.lang.String ErrorMsg;
    /** 是否最后一条信息 */
    private boolean IsLast;
    /** 经纪公司代码 */
    private java.lang.String BrokerID;
    /** 投资者代码 */
    private java.lang.String InvestorID;
    /** 报单操作引用 */
    private int OrderActionRef;
    /** 报单引用 */
    private java.lang.String OrderRef;
    /** 请求编号 */
    private int RequestID;
    /** 前置编号 */
    private int FrontID;
    /** 会话编号 */
    private int SessionID;
    /** 交易所代码 */
    private java.lang.String ExchangeID;
    /** 报单编号 */
    private java.lang.String OrderSysID;
    /** 操作标志 */
    private int ActionFlag;
    /** 价格 */
    private double LimitPrice;
    /** 数量变化 */
    private int VolumeChange;
    /** 用户代码 */
    private java.lang.String UserID;
    /** 合约代码 */
    private java.lang.String InstrumentID;
    /** 投资单元代码 */
    private java.lang.String InvestUnitID;
    /** IP地址 */
    private java.lang.String IPAddress;
    /** MAC地址 */
    private java.lang.String MacAddress;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ErrorID)) {
        this.ErrorID = data().deepCopy(fields()[0].schema(), other.ErrorID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ErrorMsg)) {
        this.ErrorMsg = data().deepCopy(fields()[1].schema(), other.ErrorMsg);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[2].schema(), other.IsLast);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[3].schema(), other.BrokerID);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[4].schema(), other.InvestorID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.OrderActionRef)) {
        this.OrderActionRef = data().deepCopy(fields()[5].schema(), other.OrderActionRef);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[6].schema(), other.OrderRef);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[7].schema(), other.RequestID);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.FrontID)) {
        this.FrontID = data().deepCopy(fields()[8].schema(), other.FrontID);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.SessionID)) {
        this.SessionID = data().deepCopy(fields()[9].schema(), other.SessionID);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[10].schema(), other.ExchangeID);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[11].schema(), other.OrderSysID);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.ActionFlag)) {
        this.ActionFlag = data().deepCopy(fields()[12].schema(), other.ActionFlag);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.LimitPrice)) {
        this.LimitPrice = data().deepCopy(fields()[13].schema(), other.LimitPrice);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.VolumeChange)) {
        this.VolumeChange = data().deepCopy(fields()[14].schema(), other.VolumeChange);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.UserID)) {
        this.UserID = data().deepCopy(fields()[15].schema(), other.UserID);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[16].schema(), other.InstrumentID);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[17].schema(), other.InvestUnitID);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.IPAddress)) {
        this.IPAddress = data().deepCopy(fields()[18].schema(), other.IPAddress);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.MacAddress)) {
        this.MacAddress = data().deepCopy(fields()[19].schema(), other.MacAddress);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
    }

    /**
     * Creates a Builder by copying an existing FtdcInputOrderAction instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.ErrorID)) {
        this.ErrorID = data().deepCopy(fields()[0].schema(), other.ErrorID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ErrorMsg)) {
        this.ErrorMsg = data().deepCopy(fields()[1].schema(), other.ErrorMsg);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[2].schema(), other.IsLast);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[3].schema(), other.BrokerID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[4].schema(), other.InvestorID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.OrderActionRef)) {
        this.OrderActionRef = data().deepCopy(fields()[5].schema(), other.OrderActionRef);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[6].schema(), other.OrderRef);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[7].schema(), other.RequestID);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.FrontID)) {
        this.FrontID = data().deepCopy(fields()[8].schema(), other.FrontID);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.SessionID)) {
        this.SessionID = data().deepCopy(fields()[9].schema(), other.SessionID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[10].schema(), other.ExchangeID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[11].schema(), other.OrderSysID);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.ActionFlag)) {
        this.ActionFlag = data().deepCopy(fields()[12].schema(), other.ActionFlag);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.LimitPrice)) {
        this.LimitPrice = data().deepCopy(fields()[13].schema(), other.LimitPrice);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.VolumeChange)) {
        this.VolumeChange = data().deepCopy(fields()[14].schema(), other.VolumeChange);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.UserID)) {
        this.UserID = data().deepCopy(fields()[15].schema(), other.UserID);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[16].schema(), other.InstrumentID);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[17].schema(), other.InvestUnitID);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.IPAddress)) {
        this.IPAddress = data().deepCopy(fields()[18].schema(), other.IPAddress);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.MacAddress)) {
        this.MacAddress = data().deepCopy(fields()[19].schema(), other.MacAddress);
        fieldSetFlags()[19] = true;
      }
    }

    /**
      * Gets the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @return The value.
      */
    public int getErrorID() {
      return ErrorID;
    }


    /**
      * Sets the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @param value The value of 'ErrorID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setErrorID(int value) {
      validate(fields()[0], value);
      this.ErrorID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ErrorID' field has been set.
      * FTDC响应信息 - 错误代码
      * @return True if the 'ErrorID' field has been set, false otherwise.
      */
    public boolean hasErrorID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearErrorID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @return The value.
      */
    public java.lang.String getErrorMsg() {
      return ErrorMsg;
    }


    /**
      * Sets the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @param value The value of 'ErrorMsg'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setErrorMsg(java.lang.String value) {
      validate(fields()[1], value);
      this.ErrorMsg = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ErrorMsg' field has been set.
      * FTDC响应信息 - 错误信息
      * @return True if the 'ErrorMsg' field has been set, false otherwise.
      */
    public boolean hasErrorMsg() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearErrorMsg() {
      ErrorMsg = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return The value.
      */
    public boolean getIsLast() {
      return IsLast;
    }


    /**
      * Sets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @param value The value of 'IsLast'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setIsLast(boolean value) {
      validate(fields()[2], value);
      this.IsLast = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'IsLast' field has been set.
      * 是否最后一条信息
      * @return True if the 'IsLast' field has been set, false otherwise.
      */
    public boolean hasIsLast() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearIsLast() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return The value.
      */
    public java.lang.String getBrokerID() {
      return BrokerID;
    }


    /**
      * Sets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @param value The value of 'BrokerID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setBrokerID(java.lang.String value) {
      validate(fields()[3], value);
      this.BrokerID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerID' field has been set.
      * 经纪公司代码
      * @return True if the 'BrokerID' field has been set, false otherwise.
      */
    public boolean hasBrokerID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearBrokerID() {
      BrokerID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestorID' field.
      * 投资者代码
      * @return The value.
      */
    public java.lang.String getInvestorID() {
      return InvestorID;
    }


    /**
      * Sets the value of the 'InvestorID' field.
      * 投资者代码
      * @param value The value of 'InvestorID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setInvestorID(java.lang.String value) {
      validate(fields()[4], value);
      this.InvestorID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestorID' field has been set.
      * 投资者代码
      * @return True if the 'InvestorID' field has been set, false otherwise.
      */
    public boolean hasInvestorID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'InvestorID' field.
      * 投资者代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearInvestorID() {
      InvestorID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderActionRef' field.
      * 报单操作引用
      * @return The value.
      */
    public int getOrderActionRef() {
      return OrderActionRef;
    }


    /**
      * Sets the value of the 'OrderActionRef' field.
      * 报单操作引用
      * @param value The value of 'OrderActionRef'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setOrderActionRef(int value) {
      validate(fields()[5], value);
      this.OrderActionRef = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderActionRef' field has been set.
      * 报单操作引用
      * @return True if the 'OrderActionRef' field has been set, false otherwise.
      */
    public boolean hasOrderActionRef() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'OrderActionRef' field.
      * 报单操作引用
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearOrderActionRef() {
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderRef' field.
      * 报单引用
      * @return The value.
      */
    public java.lang.String getOrderRef() {
      return OrderRef;
    }


    /**
      * Sets the value of the 'OrderRef' field.
      * 报单引用
      * @param value The value of 'OrderRef'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setOrderRef(java.lang.String value) {
      validate(fields()[6], value);
      this.OrderRef = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderRef' field has been set.
      * 报单引用
      * @return True if the 'OrderRef' field has been set, false otherwise.
      */
    public boolean hasOrderRef() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'OrderRef' field.
      * 报单引用
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearOrderRef() {
      OrderRef = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'RequestID' field.
      * 请求编号
      * @return The value.
      */
    public int getRequestID() {
      return RequestID;
    }


    /**
      * Sets the value of the 'RequestID' field.
      * 请求编号
      * @param value The value of 'RequestID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setRequestID(int value) {
      validate(fields()[7], value);
      this.RequestID = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'RequestID' field has been set.
      * 请求编号
      * @return True if the 'RequestID' field has been set, false otherwise.
      */
    public boolean hasRequestID() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'RequestID' field.
      * 请求编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearRequestID() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrontID' field.
      * 前置编号
      * @return The value.
      */
    public int getFrontID() {
      return FrontID;
    }


    /**
      * Sets the value of the 'FrontID' field.
      * 前置编号
      * @param value The value of 'FrontID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setFrontID(int value) {
      validate(fields()[8], value);
      this.FrontID = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'FrontID' field has been set.
      * 前置编号
      * @return True if the 'FrontID' field has been set, false otherwise.
      */
    public boolean hasFrontID() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'FrontID' field.
      * 前置编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearFrontID() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'SessionID' field.
      * 会话编号
      * @return The value.
      */
    public int getSessionID() {
      return SessionID;
    }


    /**
      * Sets the value of the 'SessionID' field.
      * 会话编号
      * @param value The value of 'SessionID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setSessionID(int value) {
      validate(fields()[9], value);
      this.SessionID = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'SessionID' field has been set.
      * 会话编号
      * @return True if the 'SessionID' field has been set, false otherwise.
      */
    public boolean hasSessionID() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'SessionID' field.
      * 会话编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearSessionID() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeID' field.
      * 交易所代码
      * @return The value.
      */
    public java.lang.String getExchangeID() {
      return ExchangeID;
    }


    /**
      * Sets the value of the 'ExchangeID' field.
      * 交易所代码
      * @param value The value of 'ExchangeID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setExchangeID(java.lang.String value) {
      validate(fields()[10], value);
      this.ExchangeID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeID' field has been set.
      * 交易所代码
      * @return True if the 'ExchangeID' field has been set, false otherwise.
      */
    public boolean hasExchangeID() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ExchangeID' field.
      * 交易所代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearExchangeID() {
      ExchangeID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderSysID' field.
      * 报单编号
      * @return The value.
      */
    public java.lang.String getOrderSysID() {
      return OrderSysID;
    }


    /**
      * Sets the value of the 'OrderSysID' field.
      * 报单编号
      * @param value The value of 'OrderSysID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setOrderSysID(java.lang.String value) {
      validate(fields()[11], value);
      this.OrderSysID = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderSysID' field has been set.
      * 报单编号
      * @return True if the 'OrderSysID' field has been set, false otherwise.
      */
    public boolean hasOrderSysID() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'OrderSysID' field.
      * 报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearOrderSysID() {
      OrderSysID = null;
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'ActionFlag' field.
      * 操作标志
      * @return The value.
      */
    public int getActionFlag() {
      return ActionFlag;
    }


    /**
      * Sets the value of the 'ActionFlag' field.
      * 操作标志
      * @param value The value of 'ActionFlag'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setActionFlag(int value) {
      validate(fields()[12], value);
      this.ActionFlag = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'ActionFlag' field has been set.
      * 操作标志
      * @return True if the 'ActionFlag' field has been set, false otherwise.
      */
    public boolean hasActionFlag() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'ActionFlag' field.
      * 操作标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearActionFlag() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'LimitPrice' field.
      * 价格
      * @return The value.
      */
    public double getLimitPrice() {
      return LimitPrice;
    }


    /**
      * Sets the value of the 'LimitPrice' field.
      * 价格
      * @param value The value of 'LimitPrice'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setLimitPrice(double value) {
      validate(fields()[13], value);
      this.LimitPrice = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'LimitPrice' field has been set.
      * 价格
      * @return True if the 'LimitPrice' field has been set, false otherwise.
      */
    public boolean hasLimitPrice() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'LimitPrice' field.
      * 价格
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearLimitPrice() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'VolumeChange' field.
      * 数量变化
      * @return The value.
      */
    public int getVolumeChange() {
      return VolumeChange;
    }


    /**
      * Sets the value of the 'VolumeChange' field.
      * 数量变化
      * @param value The value of 'VolumeChange'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setVolumeChange(int value) {
      validate(fields()[14], value);
      this.VolumeChange = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'VolumeChange' field has been set.
      * 数量变化
      * @return True if the 'VolumeChange' field has been set, false otherwise.
      */
    public boolean hasVolumeChange() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'VolumeChange' field.
      * 数量变化
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearVolumeChange() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserID' field.
      * 用户代码
      * @return The value.
      */
    public java.lang.String getUserID() {
      return UserID;
    }


    /**
      * Sets the value of the 'UserID' field.
      * 用户代码
      * @param value The value of 'UserID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setUserID(java.lang.String value) {
      validate(fields()[15], value);
      this.UserID = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'UserID' field has been set.
      * 用户代码
      * @return True if the 'UserID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'UserID' field.
      * 用户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearUserID() {
      UserID = null;
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstrumentID' field.
      * 合约代码
      * @return The value.
      */
    public java.lang.String getInstrumentID() {
      return InstrumentID;
    }


    /**
      * Sets the value of the 'InstrumentID' field.
      * 合约代码
      * @param value The value of 'InstrumentID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setInstrumentID(java.lang.String value) {
      validate(fields()[16], value);
      this.InstrumentID = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'InstrumentID' field has been set.
      * 合约代码
      * @return True if the 'InstrumentID' field has been set, false otherwise.
      */
    public boolean hasInstrumentID() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'InstrumentID' field.
      * 合约代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearInstrumentID() {
      InstrumentID = null;
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return The value.
      */
    public java.lang.String getInvestUnitID() {
      return InvestUnitID;
    }


    /**
      * Sets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @param value The value of 'InvestUnitID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setInvestUnitID(java.lang.String value) {
      validate(fields()[17], value);
      this.InvestUnitID = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestUnitID' field has been set.
      * 投资单元代码
      * @return True if the 'InvestUnitID' field has been set, false otherwise.
      */
    public boolean hasInvestUnitID() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearInvestUnitID() {
      InvestUnitID = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'IPAddress' field.
      * IP地址
      * @return The value.
      */
    public java.lang.String getIPAddress() {
      return IPAddress;
    }


    /**
      * Sets the value of the 'IPAddress' field.
      * IP地址
      * @param value The value of 'IPAddress'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setIPAddress(java.lang.String value) {
      validate(fields()[18], value);
      this.IPAddress = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'IPAddress' field has been set.
      * IP地址
      * @return True if the 'IPAddress' field has been set, false otherwise.
      */
    public boolean hasIPAddress() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'IPAddress' field.
      * IP地址
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearIPAddress() {
      IPAddress = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'MacAddress' field.
      * MAC地址
      * @return The value.
      */
    public java.lang.String getMacAddress() {
      return MacAddress;
    }


    /**
      * Sets the value of the 'MacAddress' field.
      * MAC地址
      * @param value The value of 'MacAddress'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder setMacAddress(java.lang.String value) {
      validate(fields()[19], value);
      this.MacAddress = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'MacAddress' field has been set.
      * MAC地址
      * @return True if the 'MacAddress' field has been set, false otherwise.
      */
    public boolean hasMacAddress() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'MacAddress' field.
      * MAC地址
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcInputOrderAction.Builder clearMacAddress() {
      MacAddress = null;
      fieldSetFlags()[19] = false;
      return this;
    }

    @Override
    public FtdcInputOrderAction build() {
      try {
        FtdcInputOrderAction record = new FtdcInputOrderAction();
        record.ErrorID = fieldSetFlags()[0] ? this.ErrorID : (java.lang.Integer) defaultValue(fields()[0]);
        record.ErrorMsg = fieldSetFlags()[1] ? this.ErrorMsg : (java.lang.String) defaultValue(fields()[1]);
        record.IsLast = fieldSetFlags()[2] ? this.IsLast : (java.lang.Boolean) defaultValue(fields()[2]);
        record.BrokerID = fieldSetFlags()[3] ? this.BrokerID : (java.lang.String) defaultValue(fields()[3]);
        record.InvestorID = fieldSetFlags()[4] ? this.InvestorID : (java.lang.String) defaultValue(fields()[4]);
        record.OrderActionRef = fieldSetFlags()[5] ? this.OrderActionRef : (java.lang.Integer) defaultValue(fields()[5]);
        record.OrderRef = fieldSetFlags()[6] ? this.OrderRef : (java.lang.String) defaultValue(fields()[6]);
        record.RequestID = fieldSetFlags()[7] ? this.RequestID : (java.lang.Integer) defaultValue(fields()[7]);
        record.FrontID = fieldSetFlags()[8] ? this.FrontID : (java.lang.Integer) defaultValue(fields()[8]);
        record.SessionID = fieldSetFlags()[9] ? this.SessionID : (java.lang.Integer) defaultValue(fields()[9]);
        record.ExchangeID = fieldSetFlags()[10] ? this.ExchangeID : (java.lang.String) defaultValue(fields()[10]);
        record.OrderSysID = fieldSetFlags()[11] ? this.OrderSysID : (java.lang.String) defaultValue(fields()[11]);
        record.ActionFlag = fieldSetFlags()[12] ? this.ActionFlag : (java.lang.Integer) defaultValue(fields()[12]);
        record.LimitPrice = fieldSetFlags()[13] ? this.LimitPrice : (java.lang.Double) defaultValue(fields()[13]);
        record.VolumeChange = fieldSetFlags()[14] ? this.VolumeChange : (java.lang.Integer) defaultValue(fields()[14]);
        record.UserID = fieldSetFlags()[15] ? this.UserID : (java.lang.String) defaultValue(fields()[15]);
        record.InstrumentID = fieldSetFlags()[16] ? this.InstrumentID : (java.lang.String) defaultValue(fields()[16]);
        record.InvestUnitID = fieldSetFlags()[17] ? this.InvestUnitID : (java.lang.String) defaultValue(fields()[17]);
        record.IPAddress = fieldSetFlags()[18] ? this.IPAddress : (java.lang.String) defaultValue(fields()[18]);
        record.MacAddress = fieldSetFlags()[19] ? this.MacAddress : (java.lang.String) defaultValue(fields()[19]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FtdcInputOrderAction>
    WRITER$ = (org.apache.avro.io.DatumWriter<FtdcInputOrderAction>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FtdcInputOrderAction>
    READER$ = (org.apache.avro.io.DatumReader<FtdcInputOrderAction>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.ErrorID);

    out.writeString(this.ErrorMsg);

    out.writeBoolean(this.IsLast);

    out.writeString(this.BrokerID);

    out.writeString(this.InvestorID);

    out.writeInt(this.OrderActionRef);

    out.writeString(this.OrderRef);

    out.writeInt(this.RequestID);

    out.writeInt(this.FrontID);

    out.writeInt(this.SessionID);

    out.writeString(this.ExchangeID);

    out.writeString(this.OrderSysID);

    out.writeInt(this.ActionFlag);

    out.writeDouble(this.LimitPrice);

    out.writeInt(this.VolumeChange);

    out.writeString(this.UserID);

    out.writeString(this.InstrumentID);

    out.writeString(this.InvestUnitID);

    out.writeString(this.IPAddress);

    out.writeString(this.MacAddress);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ErrorID = in.readInt();

      this.ErrorMsg = in.readString();

      this.IsLast = in.readBoolean();

      this.BrokerID = in.readString();

      this.InvestorID = in.readString();

      this.OrderActionRef = in.readInt();

      this.OrderRef = in.readString();

      this.RequestID = in.readInt();

      this.FrontID = in.readInt();

      this.SessionID = in.readInt();

      this.ExchangeID = in.readString();

      this.OrderSysID = in.readString();

      this.ActionFlag = in.readInt();

      this.LimitPrice = in.readDouble();

      this.VolumeChange = in.readInt();

      this.UserID = in.readString();

      this.InstrumentID = in.readString();

      this.InvestUnitID = in.readString();

      this.IPAddress = in.readString();

      this.MacAddress = in.readString();

    } else {
      for (int i = 0; i < 20; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ErrorID = in.readInt();
          break;

        case 1:
          this.ErrorMsg = in.readString();
          break;

        case 2:
          this.IsLast = in.readBoolean();
          break;

        case 3:
          this.BrokerID = in.readString();
          break;

        case 4:
          this.InvestorID = in.readString();
          break;

        case 5:
          this.OrderActionRef = in.readInt();
          break;

        case 6:
          this.OrderRef = in.readString();
          break;

        case 7:
          this.RequestID = in.readInt();
          break;

        case 8:
          this.FrontID = in.readInt();
          break;

        case 9:
          this.SessionID = in.readInt();
          break;

        case 10:
          this.ExchangeID = in.readString();
          break;

        case 11:
          this.OrderSysID = in.readString();
          break;

        case 12:
          this.ActionFlag = in.readInt();
          break;

        case 13:
          this.LimitPrice = in.readDouble();
          break;

        case 14:
          this.VolumeChange = in.readInt();
          break;

        case 15:
          this.UserID = in.readString();
          break;

        case 16:
          this.InstrumentID = in.readString();
          break;

        case 17:
          this.InvestUnitID = in.readString();
          break;

        case 18:
          this.IPAddress = in.readString();
          break;

        case 19:
          this.MacAddress = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










