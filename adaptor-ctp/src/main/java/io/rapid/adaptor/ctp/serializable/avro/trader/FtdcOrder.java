/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.adaptor.ctp.serializable.avro.trader;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** FtdcOrder */
@org.apache.avro.specific.AvroGenerated
public class FtdcOrder extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 7576212763322801235L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FtdcOrder\",\"namespace\":\"io.rapid.adaptor.ctp.serializable.avro.trader\",\"doc\":\"FtdcOrder\",\"fields\":[{\"name\":\"IsLast\",\"type\":\"boolean\",\"doc\":\"是否最后一条信息\"},{\"name\":\"BrokerID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪公司代码\"},{\"name\":\"InvestorID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资者代码\"},{\"name\":\"InstrumentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"合约代码\"},{\"name\":\"OrderRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单引用\"},{\"name\":\"UserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户代码\"},{\"name\":\"OrderPriceType\",\"type\":\"int\",\"doc\":\"报单价格条件\"},{\"name\":\"Direction\",\"type\":\"int\",\"doc\":\"买卖方向\"},{\"name\":\"CombOffsetFlag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"组合开平标志\"},{\"name\":\"CombHedgeFlag\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"组合投机套保标志\"},{\"name\":\"LimitPrice\",\"type\":\"double\",\"doc\":\"价格\"},{\"name\":\"VolumeTotalOriginal\",\"type\":\"int\",\"doc\":\"数量\"},{\"name\":\"TimeCondition\",\"type\":\"int\",\"doc\":\"有效期类型\"},{\"name\":\"GTDDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"GTD日期\"},{\"name\":\"VolumeCondition\",\"type\":\"int\",\"doc\":\"成交量类型\"},{\"name\":\"MinVolume\",\"type\":\"int\",\"doc\":\"最小成交量\"},{\"name\":\"ContingentCondition\",\"type\":\"int\",\"doc\":\"触发条件\"},{\"name\":\"StopPrice\",\"type\":\"double\",\"doc\":\"止损价\"},{\"name\":\"ForceCloseReason\",\"type\":\"int\",\"doc\":\"强平原因\"},{\"name\":\"IsAutoSuspend\",\"type\":\"int\",\"doc\":\"自动挂起标志\"},{\"name\":\"BusinessUnit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"业务单元\"},{\"name\":\"RequestID\",\"type\":\"int\",\"doc\":\"请求编号\"},{\"name\":\"OrderLocalID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"本地报单编号\"},{\"name\":\"ExchangeID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所代码\"},{\"name\":\"ParticipantID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"会员代码\"},{\"name\":\"ClientID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"客户代码\"},{\"name\":\"ExchangeInstID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"合约在交易所的代码\"},{\"name\":\"TraderID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所交易员代码\"},{\"name\":\"InstallID\",\"type\":\"int\",\"doc\":\"安装编号\"},{\"name\":\"OrderSubmitStatus\",\"type\":\"int\",\"doc\":\"报单提交状态\"},{\"name\":\"NotifySequence\",\"type\":\"int\",\"doc\":\"报单提示序号\"},{\"name\":\"TradingDay\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易日\"},{\"name\":\"SettlementID\",\"type\":\"int\",\"doc\":\"结算编号\"},{\"name\":\"OrderSysID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单编号\"},{\"name\":\"OrderSource\",\"type\":\"int\",\"doc\":\"报单来源\"},{\"name\":\"OrderStatus\",\"type\":\"int\",\"doc\":\"报单状态\"},{\"name\":\"OrderType\",\"type\":\"int\",\"doc\":\"报单类型\"},{\"name\":\"VolumeTraded\",\"type\":\"int\",\"doc\":\"今成交数量\"},{\"name\":\"VolumeTotal\",\"type\":\"int\",\"doc\":\"剩余数量\"},{\"name\":\"InsertDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单日期\"},{\"name\":\"InsertTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"委托时间\"},{\"name\":\"ActiveTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"激活时间\"},{\"name\":\"SuspendTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"挂起时间\"},{\"name\":\"UpdateTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"最后修改时间\"},{\"name\":\"CancelTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"撤销时间\"},{\"name\":\"ActiveTraderID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"最后修改交易所交易员代码\"},{\"name\":\"ClearingPartID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"结算会员编号\"},{\"name\":\"SequenceNo\",\"type\":\"int\",\"doc\":\"序号\"},{\"name\":\"FrontID\",\"type\":\"int\",\"doc\":\"前置编号\"},{\"name\":\"SessionID\",\"type\":\"int\",\"doc\":\"会话编号\"},{\"name\":\"UserProductInfo\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户端产品信息\"},{\"name\":\"StatusMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"状态信息\"},{\"name\":\"UserForceClose\",\"type\":\"int\",\"doc\":\"用户强评标志\"},{\"name\":\"ActiveUserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"操作用户代码\"},{\"name\":\"BrokerOrderSeq\",\"type\":\"int\",\"doc\":\"经纪公司报单编号\"},{\"name\":\"RelativeOrderSysID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"相关报单\"},{\"name\":\"ZCETotalTradedVolume\",\"type\":\"int\",\"doc\":\"郑商所成交数量\"},{\"name\":\"IsSwapOrder\",\"type\":\"int\",\"doc\":\"互换单标志\"},{\"name\":\"BranchID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"营业部编号\"},{\"name\":\"InvestUnitID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资单元代码\"},{\"name\":\"AccountID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"资金账号\"},{\"name\":\"CurrencyID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"币种代码\"},{\"name\":\"IPAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"IP地址\"},{\"name\":\"MacAddress\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"MAC地址\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FtdcOrder> ENCODER =
      new BinaryMessageEncoder<FtdcOrder>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FtdcOrder> DECODER =
      new BinaryMessageDecoder<FtdcOrder>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FtdcOrder> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FtdcOrder> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FtdcOrder> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FtdcOrder>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FtdcOrder to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FtdcOrder from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FtdcOrder instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FtdcOrder fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** 是否最后一条信息 */
  public boolean IsLast;
  /** 经纪公司代码 */
  public java.lang.String BrokerID;
  /** 投资者代码 */
  public java.lang.String InvestorID;
  /** 合约代码 */
  public java.lang.String InstrumentID;
  /** 报单引用 */
  public java.lang.String OrderRef;
  /** 用户代码 */
  public java.lang.String UserID;
  /** 报单价格条件 */
  public int OrderPriceType;
  /** 买卖方向 */
  public int Direction;
  /** 组合开平标志 */
  public java.lang.String CombOffsetFlag;
  /** 组合投机套保标志 */
  public java.lang.String CombHedgeFlag;
  /** 价格 */
  public double LimitPrice;
  /** 数量 */
  public int VolumeTotalOriginal;
  /** 有效期类型 */
  public int TimeCondition;
  /** GTD日期 */
  public java.lang.String GTDDate;
  /** 成交量类型 */
  public int VolumeCondition;
  /** 最小成交量 */
  public int MinVolume;
  /** 触发条件 */
  public int ContingentCondition;
  /** 止损价 */
  public double StopPrice;
  /** 强平原因 */
  public int ForceCloseReason;
  /** 自动挂起标志 */
  public int IsAutoSuspend;
  /** 业务单元 */
  public java.lang.String BusinessUnit;
  /** 请求编号 */
  public int RequestID;
  /** 本地报单编号 */
  public java.lang.String OrderLocalID;
  /** 交易所代码 */
  public java.lang.String ExchangeID;
  /** 会员代码 */
  public java.lang.String ParticipantID;
  /** 客户代码 */
  public java.lang.String ClientID;
  /** 合约在交易所的代码 */
  public java.lang.String ExchangeInstID;
  /** 交易所交易员代码 */
  public java.lang.String TraderID;
  /** 安装编号 */
  public int InstallID;
  /** 报单提交状态 */
  public int OrderSubmitStatus;
  /** 报单提示序号 */
  public int NotifySequence;
  /** 交易日 */
  public java.lang.String TradingDay;
  /** 结算编号 */
  public int SettlementID;
  /** 报单编号 */
  public java.lang.String OrderSysID;
  /** 报单来源 */
  public int OrderSource;
  /** 报单状态 */
  public int OrderStatus;
  /** 报单类型 */
  public int OrderType;
  /** 今成交数量 */
  public int VolumeTraded;
  /** 剩余数量 */
  public int VolumeTotal;
  /** 报单日期 */
  public java.lang.String InsertDate;
  /** 委托时间 */
  public java.lang.String InsertTime;
  /** 激活时间 */
  public java.lang.String ActiveTime;
  /** 挂起时间 */
  public java.lang.String SuspendTime;
  /** 最后修改时间 */
  public java.lang.String UpdateTime;
  /** 撤销时间 */
  public java.lang.String CancelTime;
  /** 最后修改交易所交易员代码 */
  public java.lang.String ActiveTraderID;
  /** 结算会员编号 */
  public java.lang.String ClearingPartID;
  /** 序号 */
  public int SequenceNo;
  /** 前置编号 */
  public int FrontID;
  /** 会话编号 */
  public int SessionID;
  /** 用户端产品信息 */
  public java.lang.String UserProductInfo;
  /** 状态信息 */
  public java.lang.String StatusMsg;
  /** 用户强评标志 */
  public int UserForceClose;
  /** 操作用户代码 */
  public java.lang.String ActiveUserID;
  /** 经纪公司报单编号 */
  public int BrokerOrderSeq;
  /** 相关报单 */
  public java.lang.String RelativeOrderSysID;
  /** 郑商所成交数量 */
  public int ZCETotalTradedVolume;
  /** 互换单标志 */
  public int IsSwapOrder;
  /** 营业部编号 */
  public java.lang.String BranchID;
  /** 投资单元代码 */
  public java.lang.String InvestUnitID;
  /** 资金账号 */
  public java.lang.String AccountID;
  /** 币种代码 */
  public java.lang.String CurrencyID;
  /** IP地址 */
  public java.lang.String IPAddress;
  /** MAC地址 */
  public java.lang.String MacAddress;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FtdcOrder() {}

  /**
   * All-args constructor.
   * @param IsLast 是否最后一条信息
   * @param BrokerID 经纪公司代码
   * @param InvestorID 投资者代码
   * @param InstrumentID 合约代码
   * @param OrderRef 报单引用
   * @param UserID 用户代码
   * @param OrderPriceType 报单价格条件
   * @param Direction 买卖方向
   * @param CombOffsetFlag 组合开平标志
   * @param CombHedgeFlag 组合投机套保标志
   * @param LimitPrice 价格
   * @param VolumeTotalOriginal 数量
   * @param TimeCondition 有效期类型
   * @param GTDDate GTD日期
   * @param VolumeCondition 成交量类型
   * @param MinVolume 最小成交量
   * @param ContingentCondition 触发条件
   * @param StopPrice 止损价
   * @param ForceCloseReason 强平原因
   * @param IsAutoSuspend 自动挂起标志
   * @param BusinessUnit 业务单元
   * @param RequestID 请求编号
   * @param OrderLocalID 本地报单编号
   * @param ExchangeID 交易所代码
   * @param ParticipantID 会员代码
   * @param ClientID 客户代码
   * @param ExchangeInstID 合约在交易所的代码
   * @param TraderID 交易所交易员代码
   * @param InstallID 安装编号
   * @param OrderSubmitStatus 报单提交状态
   * @param NotifySequence 报单提示序号
   * @param TradingDay 交易日
   * @param SettlementID 结算编号
   * @param OrderSysID 报单编号
   * @param OrderSource 报单来源
   * @param OrderStatus 报单状态
   * @param OrderType 报单类型
   * @param VolumeTraded 今成交数量
   * @param VolumeTotal 剩余数量
   * @param InsertDate 报单日期
   * @param InsertTime 委托时间
   * @param ActiveTime 激活时间
   * @param SuspendTime 挂起时间
   * @param UpdateTime 最后修改时间
   * @param CancelTime 撤销时间
   * @param ActiveTraderID 最后修改交易所交易员代码
   * @param ClearingPartID 结算会员编号
   * @param SequenceNo 序号
   * @param FrontID 前置编号
   * @param SessionID 会话编号
   * @param UserProductInfo 用户端产品信息
   * @param StatusMsg 状态信息
   * @param UserForceClose 用户强评标志
   * @param ActiveUserID 操作用户代码
   * @param BrokerOrderSeq 经纪公司报单编号
   * @param RelativeOrderSysID 相关报单
   * @param ZCETotalTradedVolume 郑商所成交数量
   * @param IsSwapOrder 互换单标志
   * @param BranchID 营业部编号
   * @param InvestUnitID 投资单元代码
   * @param AccountID 资金账号
   * @param CurrencyID 币种代码
   * @param IPAddress IP地址
   * @param MacAddress MAC地址
   */
  public FtdcOrder(java.lang.Boolean IsLast, java.lang.String BrokerID, java.lang.String InvestorID, java.lang.String InstrumentID, java.lang.String OrderRef, java.lang.String UserID, java.lang.Integer OrderPriceType, java.lang.Integer Direction, java.lang.String CombOffsetFlag, java.lang.String CombHedgeFlag, java.lang.Double LimitPrice, java.lang.Integer VolumeTotalOriginal, java.lang.Integer TimeCondition, java.lang.String GTDDate, java.lang.Integer VolumeCondition, java.lang.Integer MinVolume, java.lang.Integer ContingentCondition, java.lang.Double StopPrice, java.lang.Integer ForceCloseReason, java.lang.Integer IsAutoSuspend, java.lang.String BusinessUnit, java.lang.Integer RequestID, java.lang.String OrderLocalID, java.lang.String ExchangeID, java.lang.String ParticipantID, java.lang.String ClientID, java.lang.String ExchangeInstID, java.lang.String TraderID, java.lang.Integer InstallID, java.lang.Integer OrderSubmitStatus, java.lang.Integer NotifySequence, java.lang.String TradingDay, java.lang.Integer SettlementID, java.lang.String OrderSysID, java.lang.Integer OrderSource, java.lang.Integer OrderStatus, java.lang.Integer OrderType, java.lang.Integer VolumeTraded, java.lang.Integer VolumeTotal, java.lang.String InsertDate, java.lang.String InsertTime, java.lang.String ActiveTime, java.lang.String SuspendTime, java.lang.String UpdateTime, java.lang.String CancelTime, java.lang.String ActiveTraderID, java.lang.String ClearingPartID, java.lang.Integer SequenceNo, java.lang.Integer FrontID, java.lang.Integer SessionID, java.lang.String UserProductInfo, java.lang.String StatusMsg, java.lang.Integer UserForceClose, java.lang.String ActiveUserID, java.lang.Integer BrokerOrderSeq, java.lang.String RelativeOrderSysID, java.lang.Integer ZCETotalTradedVolume, java.lang.Integer IsSwapOrder, java.lang.String BranchID, java.lang.String InvestUnitID, java.lang.String AccountID, java.lang.String CurrencyID, java.lang.String IPAddress, java.lang.String MacAddress) {
    this.IsLast = IsLast;
    this.BrokerID = BrokerID;
    this.InvestorID = InvestorID;
    this.InstrumentID = InstrumentID;
    this.OrderRef = OrderRef;
    this.UserID = UserID;
    this.OrderPriceType = OrderPriceType;
    this.Direction = Direction;
    this.CombOffsetFlag = CombOffsetFlag;
    this.CombHedgeFlag = CombHedgeFlag;
    this.LimitPrice = LimitPrice;
    this.VolumeTotalOriginal = VolumeTotalOriginal;
    this.TimeCondition = TimeCondition;
    this.GTDDate = GTDDate;
    this.VolumeCondition = VolumeCondition;
    this.MinVolume = MinVolume;
    this.ContingentCondition = ContingentCondition;
    this.StopPrice = StopPrice;
    this.ForceCloseReason = ForceCloseReason;
    this.IsAutoSuspend = IsAutoSuspend;
    this.BusinessUnit = BusinessUnit;
    this.RequestID = RequestID;
    this.OrderLocalID = OrderLocalID;
    this.ExchangeID = ExchangeID;
    this.ParticipantID = ParticipantID;
    this.ClientID = ClientID;
    this.ExchangeInstID = ExchangeInstID;
    this.TraderID = TraderID;
    this.InstallID = InstallID;
    this.OrderSubmitStatus = OrderSubmitStatus;
    this.NotifySequence = NotifySequence;
    this.TradingDay = TradingDay;
    this.SettlementID = SettlementID;
    this.OrderSysID = OrderSysID;
    this.OrderSource = OrderSource;
    this.OrderStatus = OrderStatus;
    this.OrderType = OrderType;
    this.VolumeTraded = VolumeTraded;
    this.VolumeTotal = VolumeTotal;
    this.InsertDate = InsertDate;
    this.InsertTime = InsertTime;
    this.ActiveTime = ActiveTime;
    this.SuspendTime = SuspendTime;
    this.UpdateTime = UpdateTime;
    this.CancelTime = CancelTime;
    this.ActiveTraderID = ActiveTraderID;
    this.ClearingPartID = ClearingPartID;
    this.SequenceNo = SequenceNo;
    this.FrontID = FrontID;
    this.SessionID = SessionID;
    this.UserProductInfo = UserProductInfo;
    this.StatusMsg = StatusMsg;
    this.UserForceClose = UserForceClose;
    this.ActiveUserID = ActiveUserID;
    this.BrokerOrderSeq = BrokerOrderSeq;
    this.RelativeOrderSysID = RelativeOrderSysID;
    this.ZCETotalTradedVolume = ZCETotalTradedVolume;
    this.IsSwapOrder = IsSwapOrder;
    this.BranchID = BranchID;
    this.InvestUnitID = InvestUnitID;
    this.AccountID = AccountID;
    this.CurrencyID = CurrencyID;
    this.IPAddress = IPAddress;
    this.MacAddress = MacAddress;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return IsLast;
    case 1: return BrokerID;
    case 2: return InvestorID;
    case 3: return InstrumentID;
    case 4: return OrderRef;
    case 5: return UserID;
    case 6: return OrderPriceType;
    case 7: return Direction;
    case 8: return CombOffsetFlag;
    case 9: return CombHedgeFlag;
    case 10: return LimitPrice;
    case 11: return VolumeTotalOriginal;
    case 12: return TimeCondition;
    case 13: return GTDDate;
    case 14: return VolumeCondition;
    case 15: return MinVolume;
    case 16: return ContingentCondition;
    case 17: return StopPrice;
    case 18: return ForceCloseReason;
    case 19: return IsAutoSuspend;
    case 20: return BusinessUnit;
    case 21: return RequestID;
    case 22: return OrderLocalID;
    case 23: return ExchangeID;
    case 24: return ParticipantID;
    case 25: return ClientID;
    case 26: return ExchangeInstID;
    case 27: return TraderID;
    case 28: return InstallID;
    case 29: return OrderSubmitStatus;
    case 30: return NotifySequence;
    case 31: return TradingDay;
    case 32: return SettlementID;
    case 33: return OrderSysID;
    case 34: return OrderSource;
    case 35: return OrderStatus;
    case 36: return OrderType;
    case 37: return VolumeTraded;
    case 38: return VolumeTotal;
    case 39: return InsertDate;
    case 40: return InsertTime;
    case 41: return ActiveTime;
    case 42: return SuspendTime;
    case 43: return UpdateTime;
    case 44: return CancelTime;
    case 45: return ActiveTraderID;
    case 46: return ClearingPartID;
    case 47: return SequenceNo;
    case 48: return FrontID;
    case 49: return SessionID;
    case 50: return UserProductInfo;
    case 51: return StatusMsg;
    case 52: return UserForceClose;
    case 53: return ActiveUserID;
    case 54: return BrokerOrderSeq;
    case 55: return RelativeOrderSysID;
    case 56: return ZCETotalTradedVolume;
    case 57: return IsSwapOrder;
    case 58: return BranchID;
    case 59: return InvestUnitID;
    case 60: return AccountID;
    case 61: return CurrencyID;
    case 62: return IPAddress;
    case 63: return MacAddress;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: IsLast = (java.lang.Boolean)value$; break;
    case 1: BrokerID = value$ != null ? value$.toString() : null; break;
    case 2: InvestorID = value$ != null ? value$.toString() : null; break;
    case 3: InstrumentID = value$ != null ? value$.toString() : null; break;
    case 4: OrderRef = value$ != null ? value$.toString() : null; break;
    case 5: UserID = value$ != null ? value$.toString() : null; break;
    case 6: OrderPriceType = (java.lang.Integer)value$; break;
    case 7: Direction = (java.lang.Integer)value$; break;
    case 8: CombOffsetFlag = value$ != null ? value$.toString() : null; break;
    case 9: CombHedgeFlag = value$ != null ? value$.toString() : null; break;
    case 10: LimitPrice = (java.lang.Double)value$; break;
    case 11: VolumeTotalOriginal = (java.lang.Integer)value$; break;
    case 12: TimeCondition = (java.lang.Integer)value$; break;
    case 13: GTDDate = value$ != null ? value$.toString() : null; break;
    case 14: VolumeCondition = (java.lang.Integer)value$; break;
    case 15: MinVolume = (java.lang.Integer)value$; break;
    case 16: ContingentCondition = (java.lang.Integer)value$; break;
    case 17: StopPrice = (java.lang.Double)value$; break;
    case 18: ForceCloseReason = (java.lang.Integer)value$; break;
    case 19: IsAutoSuspend = (java.lang.Integer)value$; break;
    case 20: BusinessUnit = value$ != null ? value$.toString() : null; break;
    case 21: RequestID = (java.lang.Integer)value$; break;
    case 22: OrderLocalID = value$ != null ? value$.toString() : null; break;
    case 23: ExchangeID = value$ != null ? value$.toString() : null; break;
    case 24: ParticipantID = value$ != null ? value$.toString() : null; break;
    case 25: ClientID = value$ != null ? value$.toString() : null; break;
    case 26: ExchangeInstID = value$ != null ? value$.toString() : null; break;
    case 27: TraderID = value$ != null ? value$.toString() : null; break;
    case 28: InstallID = (java.lang.Integer)value$; break;
    case 29: OrderSubmitStatus = (java.lang.Integer)value$; break;
    case 30: NotifySequence = (java.lang.Integer)value$; break;
    case 31: TradingDay = value$ != null ? value$.toString() : null; break;
    case 32: SettlementID = (java.lang.Integer)value$; break;
    case 33: OrderSysID = value$ != null ? value$.toString() : null; break;
    case 34: OrderSource = (java.lang.Integer)value$; break;
    case 35: OrderStatus = (java.lang.Integer)value$; break;
    case 36: OrderType = (java.lang.Integer)value$; break;
    case 37: VolumeTraded = (java.lang.Integer)value$; break;
    case 38: VolumeTotal = (java.lang.Integer)value$; break;
    case 39: InsertDate = value$ != null ? value$.toString() : null; break;
    case 40: InsertTime = value$ != null ? value$.toString() : null; break;
    case 41: ActiveTime = value$ != null ? value$.toString() : null; break;
    case 42: SuspendTime = value$ != null ? value$.toString() : null; break;
    case 43: UpdateTime = value$ != null ? value$.toString() : null; break;
    case 44: CancelTime = value$ != null ? value$.toString() : null; break;
    case 45: ActiveTraderID = value$ != null ? value$.toString() : null; break;
    case 46: ClearingPartID = value$ != null ? value$.toString() : null; break;
    case 47: SequenceNo = (java.lang.Integer)value$; break;
    case 48: FrontID = (java.lang.Integer)value$; break;
    case 49: SessionID = (java.lang.Integer)value$; break;
    case 50: UserProductInfo = value$ != null ? value$.toString() : null; break;
    case 51: StatusMsg = value$ != null ? value$.toString() : null; break;
    case 52: UserForceClose = (java.lang.Integer)value$; break;
    case 53: ActiveUserID = value$ != null ? value$.toString() : null; break;
    case 54: BrokerOrderSeq = (java.lang.Integer)value$; break;
    case 55: RelativeOrderSysID = value$ != null ? value$.toString() : null; break;
    case 56: ZCETotalTradedVolume = (java.lang.Integer)value$; break;
    case 57: IsSwapOrder = (java.lang.Integer)value$; break;
    case 58: BranchID = value$ != null ? value$.toString() : null; break;
    case 59: InvestUnitID = value$ != null ? value$.toString() : null; break;
    case 60: AccountID = value$ != null ? value$.toString() : null; break;
    case 61: CurrencyID = value$ != null ? value$.toString() : null; break;
    case 62: IPAddress = value$ != null ? value$.toString() : null; break;
    case 63: MacAddress = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'IsLast' field.
   * @return 是否最后一条信息
   */
  public boolean getIsLast() {
    return IsLast;
  }


  /**
   * Sets the value of the 'IsLast' field.
   * 是否最后一条信息
   * @param value the value to set.
   */
  public FtdcOrder setIsLast(boolean value) {
    this.IsLast = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerID' field.
   * @return 经纪公司代码
   */
  public java.lang.String getBrokerID() {
    return BrokerID;
  }


  /**
   * Sets the value of the 'BrokerID' field.
   * 经纪公司代码
   * @param value the value to set.
   */
  public FtdcOrder setBrokerID(java.lang.String value) {
    this.BrokerID = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestorID' field.
   * @return 投资者代码
   */
  public java.lang.String getInvestorID() {
    return InvestorID;
  }


  /**
   * Sets the value of the 'InvestorID' field.
   * 投资者代码
   * @param value the value to set.
   */
  public FtdcOrder setInvestorID(java.lang.String value) {
    this.InvestorID = value;
    return this;
  }

  /**
   * Gets the value of the 'InstrumentID' field.
   * @return 合约代码
   */
  public java.lang.String getInstrumentID() {
    return InstrumentID;
  }


  /**
   * Sets the value of the 'InstrumentID' field.
   * 合约代码
   * @param value the value to set.
   */
  public FtdcOrder setInstrumentID(java.lang.String value) {
    this.InstrumentID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderRef' field.
   * @return 报单引用
   */
  public java.lang.String getOrderRef() {
    return OrderRef;
  }


  /**
   * Sets the value of the 'OrderRef' field.
   * 报单引用
   * @param value the value to set.
   */
  public FtdcOrder setOrderRef(java.lang.String value) {
    this.OrderRef = value;
    return this;
  }

  /**
   * Gets the value of the 'UserID' field.
   * @return 用户代码
   */
  public java.lang.String getUserID() {
    return UserID;
  }


  /**
   * Sets the value of the 'UserID' field.
   * 用户代码
   * @param value the value to set.
   */
  public FtdcOrder setUserID(java.lang.String value) {
    this.UserID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderPriceType' field.
   * @return 报单价格条件
   */
  public int getOrderPriceType() {
    return OrderPriceType;
  }


  /**
   * Sets the value of the 'OrderPriceType' field.
   * 报单价格条件
   * @param value the value to set.
   */
  public FtdcOrder setOrderPriceType(int value) {
    this.OrderPriceType = value;
    return this;
  }

  /**
   * Gets the value of the 'Direction' field.
   * @return 买卖方向
   */
  public int getDirection() {
    return Direction;
  }


  /**
   * Sets the value of the 'Direction' field.
   * 买卖方向
   * @param value the value to set.
   */
  public FtdcOrder setDirection(int value) {
    this.Direction = value;
    return this;
  }

  /**
   * Gets the value of the 'CombOffsetFlag' field.
   * @return 组合开平标志
   */
  public java.lang.String getCombOffsetFlag() {
    return CombOffsetFlag;
  }


  /**
   * Sets the value of the 'CombOffsetFlag' field.
   * 组合开平标志
   * @param value the value to set.
   */
  public FtdcOrder setCombOffsetFlag(java.lang.String value) {
    this.CombOffsetFlag = value;
    return this;
  }

  /**
   * Gets the value of the 'CombHedgeFlag' field.
   * @return 组合投机套保标志
   */
  public java.lang.String getCombHedgeFlag() {
    return CombHedgeFlag;
  }


  /**
   * Sets the value of the 'CombHedgeFlag' field.
   * 组合投机套保标志
   * @param value the value to set.
   */
  public FtdcOrder setCombHedgeFlag(java.lang.String value) {
    this.CombHedgeFlag = value;
    return this;
  }

  /**
   * Gets the value of the 'LimitPrice' field.
   * @return 价格
   */
  public double getLimitPrice() {
    return LimitPrice;
  }


  /**
   * Sets the value of the 'LimitPrice' field.
   * 价格
   * @param value the value to set.
   */
  public FtdcOrder setLimitPrice(double value) {
    this.LimitPrice = value;
    return this;
  }

  /**
   * Gets the value of the 'VolumeTotalOriginal' field.
   * @return 数量
   */
  public int getVolumeTotalOriginal() {
    return VolumeTotalOriginal;
  }


  /**
   * Sets the value of the 'VolumeTotalOriginal' field.
   * 数量
   * @param value the value to set.
   */
  public FtdcOrder setVolumeTotalOriginal(int value) {
    this.VolumeTotalOriginal = value;
    return this;
  }

  /**
   * Gets the value of the 'TimeCondition' field.
   * @return 有效期类型
   */
  public int getTimeCondition() {
    return TimeCondition;
  }


  /**
   * Sets the value of the 'TimeCondition' field.
   * 有效期类型
   * @param value the value to set.
   */
  public FtdcOrder setTimeCondition(int value) {
    this.TimeCondition = value;
    return this;
  }

  /**
   * Gets the value of the 'GTDDate' field.
   * @return GTD日期
   */
  public java.lang.String getGTDDate() {
    return GTDDate;
  }


  /**
   * Sets the value of the 'GTDDate' field.
   * GTD日期
   * @param value the value to set.
   */
  public FtdcOrder setGTDDate(java.lang.String value) {
    this.GTDDate = value;
    return this;
  }

  /**
   * Gets the value of the 'VolumeCondition' field.
   * @return 成交量类型
   */
  public int getVolumeCondition() {
    return VolumeCondition;
  }


  /**
   * Sets the value of the 'VolumeCondition' field.
   * 成交量类型
   * @param value the value to set.
   */
  public FtdcOrder setVolumeCondition(int value) {
    this.VolumeCondition = value;
    return this;
  }

  /**
   * Gets the value of the 'MinVolume' field.
   * @return 最小成交量
   */
  public int getMinVolume() {
    return MinVolume;
  }


  /**
   * Sets the value of the 'MinVolume' field.
   * 最小成交量
   * @param value the value to set.
   */
  public FtdcOrder setMinVolume(int value) {
    this.MinVolume = value;
    return this;
  }

  /**
   * Gets the value of the 'ContingentCondition' field.
   * @return 触发条件
   */
  public int getContingentCondition() {
    return ContingentCondition;
  }


  /**
   * Sets the value of the 'ContingentCondition' field.
   * 触发条件
   * @param value the value to set.
   */
  public FtdcOrder setContingentCondition(int value) {
    this.ContingentCondition = value;
    return this;
  }

  /**
   * Gets the value of the 'StopPrice' field.
   * @return 止损价
   */
  public double getStopPrice() {
    return StopPrice;
  }


  /**
   * Sets the value of the 'StopPrice' field.
   * 止损价
   * @param value the value to set.
   */
  public FtdcOrder setStopPrice(double value) {
    this.StopPrice = value;
    return this;
  }

  /**
   * Gets the value of the 'ForceCloseReason' field.
   * @return 强平原因
   */
  public int getForceCloseReason() {
    return ForceCloseReason;
  }


  /**
   * Sets the value of the 'ForceCloseReason' field.
   * 强平原因
   * @param value the value to set.
   */
  public FtdcOrder setForceCloseReason(int value) {
    this.ForceCloseReason = value;
    return this;
  }

  /**
   * Gets the value of the 'IsAutoSuspend' field.
   * @return 自动挂起标志
   */
  public int getIsAutoSuspend() {
    return IsAutoSuspend;
  }


  /**
   * Sets the value of the 'IsAutoSuspend' field.
   * 自动挂起标志
   * @param value the value to set.
   */
  public FtdcOrder setIsAutoSuspend(int value) {
    this.IsAutoSuspend = value;
    return this;
  }

  /**
   * Gets the value of the 'BusinessUnit' field.
   * @return 业务单元
   */
  public java.lang.String getBusinessUnit() {
    return BusinessUnit;
  }


  /**
   * Sets the value of the 'BusinessUnit' field.
   * 业务单元
   * @param value the value to set.
   */
  public FtdcOrder setBusinessUnit(java.lang.String value) {
    this.BusinessUnit = value;
    return this;
  }

  /**
   * Gets the value of the 'RequestID' field.
   * @return 请求编号
   */
  public int getRequestID() {
    return RequestID;
  }


  /**
   * Sets the value of the 'RequestID' field.
   * 请求编号
   * @param value the value to set.
   */
  public FtdcOrder setRequestID(int value) {
    this.RequestID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderLocalID' field.
   * @return 本地报单编号
   */
  public java.lang.String getOrderLocalID() {
    return OrderLocalID;
  }


  /**
   * Sets the value of the 'OrderLocalID' field.
   * 本地报单编号
   * @param value the value to set.
   */
  public FtdcOrder setOrderLocalID(java.lang.String value) {
    this.OrderLocalID = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeID' field.
   * @return 交易所代码
   */
  public java.lang.String getExchangeID() {
    return ExchangeID;
  }


  /**
   * Sets the value of the 'ExchangeID' field.
   * 交易所代码
   * @param value the value to set.
   */
  public FtdcOrder setExchangeID(java.lang.String value) {
    this.ExchangeID = value;
    return this;
  }

  /**
   * Gets the value of the 'ParticipantID' field.
   * @return 会员代码
   */
  public java.lang.String getParticipantID() {
    return ParticipantID;
  }


  /**
   * Sets the value of the 'ParticipantID' field.
   * 会员代码
   * @param value the value to set.
   */
  public FtdcOrder setParticipantID(java.lang.String value) {
    this.ParticipantID = value;
    return this;
  }

  /**
   * Gets the value of the 'ClientID' field.
   * @return 客户代码
   */
  public java.lang.String getClientID() {
    return ClientID;
  }


  /**
   * Sets the value of the 'ClientID' field.
   * 客户代码
   * @param value the value to set.
   */
  public FtdcOrder setClientID(java.lang.String value) {
    this.ClientID = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeInstID' field.
   * @return 合约在交易所的代码
   */
  public java.lang.String getExchangeInstID() {
    return ExchangeInstID;
  }


  /**
   * Sets the value of the 'ExchangeInstID' field.
   * 合约在交易所的代码
   * @param value the value to set.
   */
  public FtdcOrder setExchangeInstID(java.lang.String value) {
    this.ExchangeInstID = value;
    return this;
  }

  /**
   * Gets the value of the 'TraderID' field.
   * @return 交易所交易员代码
   */
  public java.lang.String getTraderID() {
    return TraderID;
  }


  /**
   * Sets the value of the 'TraderID' field.
   * 交易所交易员代码
   * @param value the value to set.
   */
  public FtdcOrder setTraderID(java.lang.String value) {
    this.TraderID = value;
    return this;
  }

  /**
   * Gets the value of the 'InstallID' field.
   * @return 安装编号
   */
  public int getInstallID() {
    return InstallID;
  }


  /**
   * Sets the value of the 'InstallID' field.
   * 安装编号
   * @param value the value to set.
   */
  public FtdcOrder setInstallID(int value) {
    this.InstallID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderSubmitStatus' field.
   * @return 报单提交状态
   */
  public int getOrderSubmitStatus() {
    return OrderSubmitStatus;
  }


  /**
   * Sets the value of the 'OrderSubmitStatus' field.
   * 报单提交状态
   * @param value the value to set.
   */
  public FtdcOrder setOrderSubmitStatus(int value) {
    this.OrderSubmitStatus = value;
    return this;
  }

  /**
   * Gets the value of the 'NotifySequence' field.
   * @return 报单提示序号
   */
  public int getNotifySequence() {
    return NotifySequence;
  }


  /**
   * Sets the value of the 'NotifySequence' field.
   * 报单提示序号
   * @param value the value to set.
   */
  public FtdcOrder setNotifySequence(int value) {
    this.NotifySequence = value;
    return this;
  }

  /**
   * Gets the value of the 'TradingDay' field.
   * @return 交易日
   */
  public java.lang.String getTradingDay() {
    return TradingDay;
  }


  /**
   * Sets the value of the 'TradingDay' field.
   * 交易日
   * @param value the value to set.
   */
  public FtdcOrder setTradingDay(java.lang.String value) {
    this.TradingDay = value;
    return this;
  }

  /**
   * Gets the value of the 'SettlementID' field.
   * @return 结算编号
   */
  public int getSettlementID() {
    return SettlementID;
  }


  /**
   * Sets the value of the 'SettlementID' field.
   * 结算编号
   * @param value the value to set.
   */
  public FtdcOrder setSettlementID(int value) {
    this.SettlementID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderSysID' field.
   * @return 报单编号
   */
  public java.lang.String getOrderSysID() {
    return OrderSysID;
  }


  /**
   * Sets the value of the 'OrderSysID' field.
   * 报单编号
   * @param value the value to set.
   */
  public FtdcOrder setOrderSysID(java.lang.String value) {
    this.OrderSysID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderSource' field.
   * @return 报单来源
   */
  public int getOrderSource() {
    return OrderSource;
  }


  /**
   * Sets the value of the 'OrderSource' field.
   * 报单来源
   * @param value the value to set.
   */
  public FtdcOrder setOrderSource(int value) {
    this.OrderSource = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderStatus' field.
   * @return 报单状态
   */
  public int getOrderStatus() {
    return OrderStatus;
  }


  /**
   * Sets the value of the 'OrderStatus' field.
   * 报单状态
   * @param value the value to set.
   */
  public FtdcOrder setOrderStatus(int value) {
    this.OrderStatus = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderType' field.
   * @return 报单类型
   */
  public int getOrderType() {
    return OrderType;
  }


  /**
   * Sets the value of the 'OrderType' field.
   * 报单类型
   * @param value the value to set.
   */
  public FtdcOrder setOrderType(int value) {
    this.OrderType = value;
    return this;
  }

  /**
   * Gets the value of the 'VolumeTraded' field.
   * @return 今成交数量
   */
  public int getVolumeTraded() {
    return VolumeTraded;
  }


  /**
   * Sets the value of the 'VolumeTraded' field.
   * 今成交数量
   * @param value the value to set.
   */
  public FtdcOrder setVolumeTraded(int value) {
    this.VolumeTraded = value;
    return this;
  }

  /**
   * Gets the value of the 'VolumeTotal' field.
   * @return 剩余数量
   */
  public int getVolumeTotal() {
    return VolumeTotal;
  }


  /**
   * Sets the value of the 'VolumeTotal' field.
   * 剩余数量
   * @param value the value to set.
   */
  public FtdcOrder setVolumeTotal(int value) {
    this.VolumeTotal = value;
    return this;
  }

  /**
   * Gets the value of the 'InsertDate' field.
   * @return 报单日期
   */
  public java.lang.String getInsertDate() {
    return InsertDate;
  }


  /**
   * Sets the value of the 'InsertDate' field.
   * 报单日期
   * @param value the value to set.
   */
  public FtdcOrder setInsertDate(java.lang.String value) {
    this.InsertDate = value;
    return this;
  }

  /**
   * Gets the value of the 'InsertTime' field.
   * @return 委托时间
   */
  public java.lang.String getInsertTime() {
    return InsertTime;
  }


  /**
   * Sets the value of the 'InsertTime' field.
   * 委托时间
   * @param value the value to set.
   */
  public FtdcOrder setInsertTime(java.lang.String value) {
    this.InsertTime = value;
    return this;
  }

  /**
   * Gets the value of the 'ActiveTime' field.
   * @return 激活时间
   */
  public java.lang.String getActiveTime() {
    return ActiveTime;
  }


  /**
   * Sets the value of the 'ActiveTime' field.
   * 激活时间
   * @param value the value to set.
   */
  public FtdcOrder setActiveTime(java.lang.String value) {
    this.ActiveTime = value;
    return this;
  }

  /**
   * Gets the value of the 'SuspendTime' field.
   * @return 挂起时间
   */
  public java.lang.String getSuspendTime() {
    return SuspendTime;
  }


  /**
   * Sets the value of the 'SuspendTime' field.
   * 挂起时间
   * @param value the value to set.
   */
  public FtdcOrder setSuspendTime(java.lang.String value) {
    this.SuspendTime = value;
    return this;
  }

  /**
   * Gets the value of the 'UpdateTime' field.
   * @return 最后修改时间
   */
  public java.lang.String getUpdateTime() {
    return UpdateTime;
  }


  /**
   * Sets the value of the 'UpdateTime' field.
   * 最后修改时间
   * @param value the value to set.
   */
  public FtdcOrder setUpdateTime(java.lang.String value) {
    this.UpdateTime = value;
    return this;
  }

  /**
   * Gets the value of the 'CancelTime' field.
   * @return 撤销时间
   */
  public java.lang.String getCancelTime() {
    return CancelTime;
  }


  /**
   * Sets the value of the 'CancelTime' field.
   * 撤销时间
   * @param value the value to set.
   */
  public FtdcOrder setCancelTime(java.lang.String value) {
    this.CancelTime = value;
    return this;
  }

  /**
   * Gets the value of the 'ActiveTraderID' field.
   * @return 最后修改交易所交易员代码
   */
  public java.lang.String getActiveTraderID() {
    return ActiveTraderID;
  }


  /**
   * Sets the value of the 'ActiveTraderID' field.
   * 最后修改交易所交易员代码
   * @param value the value to set.
   */
  public FtdcOrder setActiveTraderID(java.lang.String value) {
    this.ActiveTraderID = value;
    return this;
  }

  /**
   * Gets the value of the 'ClearingPartID' field.
   * @return 结算会员编号
   */
  public java.lang.String getClearingPartID() {
    return ClearingPartID;
  }


  /**
   * Sets the value of the 'ClearingPartID' field.
   * 结算会员编号
   * @param value the value to set.
   */
  public FtdcOrder setClearingPartID(java.lang.String value) {
    this.ClearingPartID = value;
    return this;
  }

  /**
   * Gets the value of the 'SequenceNo' field.
   * @return 序号
   */
  public int getSequenceNo() {
    return SequenceNo;
  }


  /**
   * Sets the value of the 'SequenceNo' field.
   * 序号
   * @param value the value to set.
   */
  public FtdcOrder setSequenceNo(int value) {
    this.SequenceNo = value;
    return this;
  }

  /**
   * Gets the value of the 'FrontID' field.
   * @return 前置编号
   */
  public int getFrontID() {
    return FrontID;
  }


  /**
   * Sets the value of the 'FrontID' field.
   * 前置编号
   * @param value the value to set.
   */
  public FtdcOrder setFrontID(int value) {
    this.FrontID = value;
    return this;
  }

  /**
   * Gets the value of the 'SessionID' field.
   * @return 会话编号
   */
  public int getSessionID() {
    return SessionID;
  }


  /**
   * Sets the value of the 'SessionID' field.
   * 会话编号
   * @param value the value to set.
   */
  public FtdcOrder setSessionID(int value) {
    this.SessionID = value;
    return this;
  }

  /**
   * Gets the value of the 'UserProductInfo' field.
   * @return 用户端产品信息
   */
  public java.lang.String getUserProductInfo() {
    return UserProductInfo;
  }


  /**
   * Sets the value of the 'UserProductInfo' field.
   * 用户端产品信息
   * @param value the value to set.
   */
  public FtdcOrder setUserProductInfo(java.lang.String value) {
    this.UserProductInfo = value;
    return this;
  }

  /**
   * Gets the value of the 'StatusMsg' field.
   * @return 状态信息
   */
  public java.lang.String getStatusMsg() {
    return StatusMsg;
  }


  /**
   * Sets the value of the 'StatusMsg' field.
   * 状态信息
   * @param value the value to set.
   */
  public FtdcOrder setStatusMsg(java.lang.String value) {
    this.StatusMsg = value;
    return this;
  }

  /**
   * Gets the value of the 'UserForceClose' field.
   * @return 用户强评标志
   */
  public int getUserForceClose() {
    return UserForceClose;
  }


  /**
   * Sets the value of the 'UserForceClose' field.
   * 用户强评标志
   * @param value the value to set.
   */
  public FtdcOrder setUserForceClose(int value) {
    this.UserForceClose = value;
    return this;
  }

  /**
   * Gets the value of the 'ActiveUserID' field.
   * @return 操作用户代码
   */
  public java.lang.String getActiveUserID() {
    return ActiveUserID;
  }


  /**
   * Sets the value of the 'ActiveUserID' field.
   * 操作用户代码
   * @param value the value to set.
   */
  public FtdcOrder setActiveUserID(java.lang.String value) {
    this.ActiveUserID = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerOrderSeq' field.
   * @return 经纪公司报单编号
   */
  public int getBrokerOrderSeq() {
    return BrokerOrderSeq;
  }


  /**
   * Sets the value of the 'BrokerOrderSeq' field.
   * 经纪公司报单编号
   * @param value the value to set.
   */
  public FtdcOrder setBrokerOrderSeq(int value) {
    this.BrokerOrderSeq = value;
    return this;
  }

  /**
   * Gets the value of the 'RelativeOrderSysID' field.
   * @return 相关报单
   */
  public java.lang.String getRelativeOrderSysID() {
    return RelativeOrderSysID;
  }


  /**
   * Sets the value of the 'RelativeOrderSysID' field.
   * 相关报单
   * @param value the value to set.
   */
  public FtdcOrder setRelativeOrderSysID(java.lang.String value) {
    this.RelativeOrderSysID = value;
    return this;
  }

  /**
   * Gets the value of the 'ZCETotalTradedVolume' field.
   * @return 郑商所成交数量
   */
  public int getZCETotalTradedVolume() {
    return ZCETotalTradedVolume;
  }


  /**
   * Sets the value of the 'ZCETotalTradedVolume' field.
   * 郑商所成交数量
   * @param value the value to set.
   */
  public FtdcOrder setZCETotalTradedVolume(int value) {
    this.ZCETotalTradedVolume = value;
    return this;
  }

  /**
   * Gets the value of the 'IsSwapOrder' field.
   * @return 互换单标志
   */
  public int getIsSwapOrder() {
    return IsSwapOrder;
  }


  /**
   * Sets the value of the 'IsSwapOrder' field.
   * 互换单标志
   * @param value the value to set.
   */
  public FtdcOrder setIsSwapOrder(int value) {
    this.IsSwapOrder = value;
    return this;
  }

  /**
   * Gets the value of the 'BranchID' field.
   * @return 营业部编号
   */
  public java.lang.String getBranchID() {
    return BranchID;
  }


  /**
   * Sets the value of the 'BranchID' field.
   * 营业部编号
   * @param value the value to set.
   */
  public FtdcOrder setBranchID(java.lang.String value) {
    this.BranchID = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestUnitID' field.
   * @return 投资单元代码
   */
  public java.lang.String getInvestUnitID() {
    return InvestUnitID;
  }


  /**
   * Sets the value of the 'InvestUnitID' field.
   * 投资单元代码
   * @param value the value to set.
   */
  public FtdcOrder setInvestUnitID(java.lang.String value) {
    this.InvestUnitID = value;
    return this;
  }

  /**
   * Gets the value of the 'AccountID' field.
   * @return 资金账号
   */
  public java.lang.String getAccountID() {
    return AccountID;
  }


  /**
   * Sets the value of the 'AccountID' field.
   * 资金账号
   * @param value the value to set.
   */
  public FtdcOrder setAccountID(java.lang.String value) {
    this.AccountID = value;
    return this;
  }

  /**
   * Gets the value of the 'CurrencyID' field.
   * @return 币种代码
   */
  public java.lang.String getCurrencyID() {
    return CurrencyID;
  }


  /**
   * Sets the value of the 'CurrencyID' field.
   * 币种代码
   * @param value the value to set.
   */
  public FtdcOrder setCurrencyID(java.lang.String value) {
    this.CurrencyID = value;
    return this;
  }

  /**
   * Gets the value of the 'IPAddress' field.
   * @return IP地址
   */
  public java.lang.String getIPAddress() {
    return IPAddress;
  }


  /**
   * Sets the value of the 'IPAddress' field.
   * IP地址
   * @param value the value to set.
   */
  public FtdcOrder setIPAddress(java.lang.String value) {
    this.IPAddress = value;
    return this;
  }

  /**
   * Gets the value of the 'MacAddress' field.
   * @return MAC地址
   */
  public java.lang.String getMacAddress() {
    return MacAddress;
  }


  /**
   * Sets the value of the 'MacAddress' field.
   * MAC地址
   * @param value the value to set.
   */
  public FtdcOrder setMacAddress(java.lang.String value) {
    this.MacAddress = value;
    return this;
  }

  /**
   * Creates a new FtdcOrder RecordBuilder.
   * @return A new FtdcOrder RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder newBuilder() {
    return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder();
  }

  /**
   * Creates a new FtdcOrder RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FtdcOrder RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder(other);
    }
  }

  /**
   * Creates a new FtdcOrder RecordBuilder by copying an existing FtdcOrder instance.
   * @param other The existing instance to copy.
   * @return A new FtdcOrder RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder(other);
    }
  }

  /**
   * RecordBuilder for FtdcOrder instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FtdcOrder>
    implements org.apache.avro.data.RecordBuilder<FtdcOrder> {

    /** 是否最后一条信息 */
    private boolean IsLast;
    /** 经纪公司代码 */
    private java.lang.String BrokerID;
    /** 投资者代码 */
    private java.lang.String InvestorID;
    /** 合约代码 */
    private java.lang.String InstrumentID;
    /** 报单引用 */
    private java.lang.String OrderRef;
    /** 用户代码 */
    private java.lang.String UserID;
    /** 报单价格条件 */
    private int OrderPriceType;
    /** 买卖方向 */
    private int Direction;
    /** 组合开平标志 */
    private java.lang.String CombOffsetFlag;
    /** 组合投机套保标志 */
    private java.lang.String CombHedgeFlag;
    /** 价格 */
    private double LimitPrice;
    /** 数量 */
    private int VolumeTotalOriginal;
    /** 有效期类型 */
    private int TimeCondition;
    /** GTD日期 */
    private java.lang.String GTDDate;
    /** 成交量类型 */
    private int VolumeCondition;
    /** 最小成交量 */
    private int MinVolume;
    /** 触发条件 */
    private int ContingentCondition;
    /** 止损价 */
    private double StopPrice;
    /** 强平原因 */
    private int ForceCloseReason;
    /** 自动挂起标志 */
    private int IsAutoSuspend;
    /** 业务单元 */
    private java.lang.String BusinessUnit;
    /** 请求编号 */
    private int RequestID;
    /** 本地报单编号 */
    private java.lang.String OrderLocalID;
    /** 交易所代码 */
    private java.lang.String ExchangeID;
    /** 会员代码 */
    private java.lang.String ParticipantID;
    /** 客户代码 */
    private java.lang.String ClientID;
    /** 合约在交易所的代码 */
    private java.lang.String ExchangeInstID;
    /** 交易所交易员代码 */
    private java.lang.String TraderID;
    /** 安装编号 */
    private int InstallID;
    /** 报单提交状态 */
    private int OrderSubmitStatus;
    /** 报单提示序号 */
    private int NotifySequence;
    /** 交易日 */
    private java.lang.String TradingDay;
    /** 结算编号 */
    private int SettlementID;
    /** 报单编号 */
    private java.lang.String OrderSysID;
    /** 报单来源 */
    private int OrderSource;
    /** 报单状态 */
    private int OrderStatus;
    /** 报单类型 */
    private int OrderType;
    /** 今成交数量 */
    private int VolumeTraded;
    /** 剩余数量 */
    private int VolumeTotal;
    /** 报单日期 */
    private java.lang.String InsertDate;
    /** 委托时间 */
    private java.lang.String InsertTime;
    /** 激活时间 */
    private java.lang.String ActiveTime;
    /** 挂起时间 */
    private java.lang.String SuspendTime;
    /** 最后修改时间 */
    private java.lang.String UpdateTime;
    /** 撤销时间 */
    private java.lang.String CancelTime;
    /** 最后修改交易所交易员代码 */
    private java.lang.String ActiveTraderID;
    /** 结算会员编号 */
    private java.lang.String ClearingPartID;
    /** 序号 */
    private int SequenceNo;
    /** 前置编号 */
    private int FrontID;
    /** 会话编号 */
    private int SessionID;
    /** 用户端产品信息 */
    private java.lang.String UserProductInfo;
    /** 状态信息 */
    private java.lang.String StatusMsg;
    /** 用户强评标志 */
    private int UserForceClose;
    /** 操作用户代码 */
    private java.lang.String ActiveUserID;
    /** 经纪公司报单编号 */
    private int BrokerOrderSeq;
    /** 相关报单 */
    private java.lang.String RelativeOrderSysID;
    /** 郑商所成交数量 */
    private int ZCETotalTradedVolume;
    /** 互换单标志 */
    private int IsSwapOrder;
    /** 营业部编号 */
    private java.lang.String BranchID;
    /** 投资单元代码 */
    private java.lang.String InvestUnitID;
    /** 资金账号 */
    private java.lang.String AccountID;
    /** 币种代码 */
    private java.lang.String CurrencyID;
    /** IP地址 */
    private java.lang.String IPAddress;
    /** MAC地址 */
    private java.lang.String MacAddress;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[0].schema(), other.IsLast);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[1].schema(), other.BrokerID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[2].schema(), other.InvestorID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[3].schema(), other.InstrumentID);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[4].schema(), other.OrderRef);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.UserID)) {
        this.UserID = data().deepCopy(fields()[5].schema(), other.UserID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.OrderPriceType)) {
        this.OrderPriceType = data().deepCopy(fields()[6].schema(), other.OrderPriceType);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.Direction)) {
        this.Direction = data().deepCopy(fields()[7].schema(), other.Direction);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.CombOffsetFlag)) {
        this.CombOffsetFlag = data().deepCopy(fields()[8].schema(), other.CombOffsetFlag);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.CombHedgeFlag)) {
        this.CombHedgeFlag = data().deepCopy(fields()[9].schema(), other.CombHedgeFlag);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.LimitPrice)) {
        this.LimitPrice = data().deepCopy(fields()[10].schema(), other.LimitPrice);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.VolumeTotalOriginal)) {
        this.VolumeTotalOriginal = data().deepCopy(fields()[11].schema(), other.VolumeTotalOriginal);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.TimeCondition)) {
        this.TimeCondition = data().deepCopy(fields()[12].schema(), other.TimeCondition);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.GTDDate)) {
        this.GTDDate = data().deepCopy(fields()[13].schema(), other.GTDDate);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.VolumeCondition)) {
        this.VolumeCondition = data().deepCopy(fields()[14].schema(), other.VolumeCondition);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.MinVolume)) {
        this.MinVolume = data().deepCopy(fields()[15].schema(), other.MinVolume);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.ContingentCondition)) {
        this.ContingentCondition = data().deepCopy(fields()[16].schema(), other.ContingentCondition);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.StopPrice)) {
        this.StopPrice = data().deepCopy(fields()[17].schema(), other.StopPrice);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.ForceCloseReason)) {
        this.ForceCloseReason = data().deepCopy(fields()[18].schema(), other.ForceCloseReason);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.IsAutoSuspend)) {
        this.IsAutoSuspend = data().deepCopy(fields()[19].schema(), other.IsAutoSuspend);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.BusinessUnit)) {
        this.BusinessUnit = data().deepCopy(fields()[20].schema(), other.BusinessUnit);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[21].schema(), other.RequestID);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.OrderLocalID)) {
        this.OrderLocalID = data().deepCopy(fields()[22].schema(), other.OrderLocalID);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[23].schema(), other.ExchangeID);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.ParticipantID)) {
        this.ParticipantID = data().deepCopy(fields()[24].schema(), other.ParticipantID);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.ClientID)) {
        this.ClientID = data().deepCopy(fields()[25].schema(), other.ClientID);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.ExchangeInstID)) {
        this.ExchangeInstID = data().deepCopy(fields()[26].schema(), other.ExchangeInstID);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.TraderID)) {
        this.TraderID = data().deepCopy(fields()[27].schema(), other.TraderID);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.InstallID)) {
        this.InstallID = data().deepCopy(fields()[28].schema(), other.InstallID);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.OrderSubmitStatus)) {
        this.OrderSubmitStatus = data().deepCopy(fields()[29].schema(), other.OrderSubmitStatus);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.NotifySequence)) {
        this.NotifySequence = data().deepCopy(fields()[30].schema(), other.NotifySequence);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[31].schema(), other.TradingDay);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[32].schema(), other.SettlementID);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[33].schema(), other.OrderSysID);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.OrderSource)) {
        this.OrderSource = data().deepCopy(fields()[34].schema(), other.OrderSource);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.OrderStatus)) {
        this.OrderStatus = data().deepCopy(fields()[35].schema(), other.OrderStatus);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.OrderType)) {
        this.OrderType = data().deepCopy(fields()[36].schema(), other.OrderType);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.VolumeTraded)) {
        this.VolumeTraded = data().deepCopy(fields()[37].schema(), other.VolumeTraded);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.VolumeTotal)) {
        this.VolumeTotal = data().deepCopy(fields()[38].schema(), other.VolumeTotal);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.InsertDate)) {
        this.InsertDate = data().deepCopy(fields()[39].schema(), other.InsertDate);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.InsertTime)) {
        this.InsertTime = data().deepCopy(fields()[40].schema(), other.InsertTime);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.ActiveTime)) {
        this.ActiveTime = data().deepCopy(fields()[41].schema(), other.ActiveTime);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.SuspendTime)) {
        this.SuspendTime = data().deepCopy(fields()[42].schema(), other.SuspendTime);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.UpdateTime)) {
        this.UpdateTime = data().deepCopy(fields()[43].schema(), other.UpdateTime);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.CancelTime)) {
        this.CancelTime = data().deepCopy(fields()[44].schema(), other.CancelTime);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.ActiveTraderID)) {
        this.ActiveTraderID = data().deepCopy(fields()[45].schema(), other.ActiveTraderID);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.ClearingPartID)) {
        this.ClearingPartID = data().deepCopy(fields()[46].schema(), other.ClearingPartID);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.SequenceNo)) {
        this.SequenceNo = data().deepCopy(fields()[47].schema(), other.SequenceNo);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.FrontID)) {
        this.FrontID = data().deepCopy(fields()[48].schema(), other.FrontID);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.SessionID)) {
        this.SessionID = data().deepCopy(fields()[49].schema(), other.SessionID);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.UserProductInfo)) {
        this.UserProductInfo = data().deepCopy(fields()[50].schema(), other.UserProductInfo);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (isValidValue(fields()[51], other.StatusMsg)) {
        this.StatusMsg = data().deepCopy(fields()[51].schema(), other.StatusMsg);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (isValidValue(fields()[52], other.UserForceClose)) {
        this.UserForceClose = data().deepCopy(fields()[52].schema(), other.UserForceClose);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
      if (isValidValue(fields()[53], other.ActiveUserID)) {
        this.ActiveUserID = data().deepCopy(fields()[53].schema(), other.ActiveUserID);
        fieldSetFlags()[53] = other.fieldSetFlags()[53];
      }
      if (isValidValue(fields()[54], other.BrokerOrderSeq)) {
        this.BrokerOrderSeq = data().deepCopy(fields()[54].schema(), other.BrokerOrderSeq);
        fieldSetFlags()[54] = other.fieldSetFlags()[54];
      }
      if (isValidValue(fields()[55], other.RelativeOrderSysID)) {
        this.RelativeOrderSysID = data().deepCopy(fields()[55].schema(), other.RelativeOrderSysID);
        fieldSetFlags()[55] = other.fieldSetFlags()[55];
      }
      if (isValidValue(fields()[56], other.ZCETotalTradedVolume)) {
        this.ZCETotalTradedVolume = data().deepCopy(fields()[56].schema(), other.ZCETotalTradedVolume);
        fieldSetFlags()[56] = other.fieldSetFlags()[56];
      }
      if (isValidValue(fields()[57], other.IsSwapOrder)) {
        this.IsSwapOrder = data().deepCopy(fields()[57].schema(), other.IsSwapOrder);
        fieldSetFlags()[57] = other.fieldSetFlags()[57];
      }
      if (isValidValue(fields()[58], other.BranchID)) {
        this.BranchID = data().deepCopy(fields()[58].schema(), other.BranchID);
        fieldSetFlags()[58] = other.fieldSetFlags()[58];
      }
      if (isValidValue(fields()[59], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[59].schema(), other.InvestUnitID);
        fieldSetFlags()[59] = other.fieldSetFlags()[59];
      }
      if (isValidValue(fields()[60], other.AccountID)) {
        this.AccountID = data().deepCopy(fields()[60].schema(), other.AccountID);
        fieldSetFlags()[60] = other.fieldSetFlags()[60];
      }
      if (isValidValue(fields()[61], other.CurrencyID)) {
        this.CurrencyID = data().deepCopy(fields()[61].schema(), other.CurrencyID);
        fieldSetFlags()[61] = other.fieldSetFlags()[61];
      }
      if (isValidValue(fields()[62], other.IPAddress)) {
        this.IPAddress = data().deepCopy(fields()[62].schema(), other.IPAddress);
        fieldSetFlags()[62] = other.fieldSetFlags()[62];
      }
      if (isValidValue(fields()[63], other.MacAddress)) {
        this.MacAddress = data().deepCopy(fields()[63].schema(), other.MacAddress);
        fieldSetFlags()[63] = other.fieldSetFlags()[63];
      }
    }

    /**
     * Creates a Builder by copying an existing FtdcOrder instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[0].schema(), other.IsLast);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[1].schema(), other.BrokerID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[2].schema(), other.InvestorID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[3].schema(), other.InstrumentID);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[4].schema(), other.OrderRef);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.UserID)) {
        this.UserID = data().deepCopy(fields()[5].schema(), other.UserID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.OrderPriceType)) {
        this.OrderPriceType = data().deepCopy(fields()[6].schema(), other.OrderPriceType);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Direction)) {
        this.Direction = data().deepCopy(fields()[7].schema(), other.Direction);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.CombOffsetFlag)) {
        this.CombOffsetFlag = data().deepCopy(fields()[8].schema(), other.CombOffsetFlag);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.CombHedgeFlag)) {
        this.CombHedgeFlag = data().deepCopy(fields()[9].schema(), other.CombHedgeFlag);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.LimitPrice)) {
        this.LimitPrice = data().deepCopy(fields()[10].schema(), other.LimitPrice);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.VolumeTotalOriginal)) {
        this.VolumeTotalOriginal = data().deepCopy(fields()[11].schema(), other.VolumeTotalOriginal);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.TimeCondition)) {
        this.TimeCondition = data().deepCopy(fields()[12].schema(), other.TimeCondition);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.GTDDate)) {
        this.GTDDate = data().deepCopy(fields()[13].schema(), other.GTDDate);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.VolumeCondition)) {
        this.VolumeCondition = data().deepCopy(fields()[14].schema(), other.VolumeCondition);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.MinVolume)) {
        this.MinVolume = data().deepCopy(fields()[15].schema(), other.MinVolume);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.ContingentCondition)) {
        this.ContingentCondition = data().deepCopy(fields()[16].schema(), other.ContingentCondition);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.StopPrice)) {
        this.StopPrice = data().deepCopy(fields()[17].schema(), other.StopPrice);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.ForceCloseReason)) {
        this.ForceCloseReason = data().deepCopy(fields()[18].schema(), other.ForceCloseReason);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.IsAutoSuspend)) {
        this.IsAutoSuspend = data().deepCopy(fields()[19].schema(), other.IsAutoSuspend);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.BusinessUnit)) {
        this.BusinessUnit = data().deepCopy(fields()[20].schema(), other.BusinessUnit);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[21].schema(), other.RequestID);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.OrderLocalID)) {
        this.OrderLocalID = data().deepCopy(fields()[22].schema(), other.OrderLocalID);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[23].schema(), other.ExchangeID);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.ParticipantID)) {
        this.ParticipantID = data().deepCopy(fields()[24].schema(), other.ParticipantID);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.ClientID)) {
        this.ClientID = data().deepCopy(fields()[25].schema(), other.ClientID);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.ExchangeInstID)) {
        this.ExchangeInstID = data().deepCopy(fields()[26].schema(), other.ExchangeInstID);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.TraderID)) {
        this.TraderID = data().deepCopy(fields()[27].schema(), other.TraderID);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.InstallID)) {
        this.InstallID = data().deepCopy(fields()[28].schema(), other.InstallID);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.OrderSubmitStatus)) {
        this.OrderSubmitStatus = data().deepCopy(fields()[29].schema(), other.OrderSubmitStatus);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.NotifySequence)) {
        this.NotifySequence = data().deepCopy(fields()[30].schema(), other.NotifySequence);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[31].schema(), other.TradingDay);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[32].schema(), other.SettlementID);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[33].schema(), other.OrderSysID);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.OrderSource)) {
        this.OrderSource = data().deepCopy(fields()[34].schema(), other.OrderSource);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.OrderStatus)) {
        this.OrderStatus = data().deepCopy(fields()[35].schema(), other.OrderStatus);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.OrderType)) {
        this.OrderType = data().deepCopy(fields()[36].schema(), other.OrderType);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.VolumeTraded)) {
        this.VolumeTraded = data().deepCopy(fields()[37].schema(), other.VolumeTraded);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.VolumeTotal)) {
        this.VolumeTotal = data().deepCopy(fields()[38].schema(), other.VolumeTotal);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.InsertDate)) {
        this.InsertDate = data().deepCopy(fields()[39].schema(), other.InsertDate);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.InsertTime)) {
        this.InsertTime = data().deepCopy(fields()[40].schema(), other.InsertTime);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.ActiveTime)) {
        this.ActiveTime = data().deepCopy(fields()[41].schema(), other.ActiveTime);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.SuspendTime)) {
        this.SuspendTime = data().deepCopy(fields()[42].schema(), other.SuspendTime);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.UpdateTime)) {
        this.UpdateTime = data().deepCopy(fields()[43].schema(), other.UpdateTime);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.CancelTime)) {
        this.CancelTime = data().deepCopy(fields()[44].schema(), other.CancelTime);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.ActiveTraderID)) {
        this.ActiveTraderID = data().deepCopy(fields()[45].schema(), other.ActiveTraderID);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.ClearingPartID)) {
        this.ClearingPartID = data().deepCopy(fields()[46].schema(), other.ClearingPartID);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SequenceNo)) {
        this.SequenceNo = data().deepCopy(fields()[47].schema(), other.SequenceNo);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.FrontID)) {
        this.FrontID = data().deepCopy(fields()[48].schema(), other.FrontID);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SessionID)) {
        this.SessionID = data().deepCopy(fields()[49].schema(), other.SessionID);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.UserProductInfo)) {
        this.UserProductInfo = data().deepCopy(fields()[50].schema(), other.UserProductInfo);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.StatusMsg)) {
        this.StatusMsg = data().deepCopy(fields()[51].schema(), other.StatusMsg);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.UserForceClose)) {
        this.UserForceClose = data().deepCopy(fields()[52].schema(), other.UserForceClose);
        fieldSetFlags()[52] = true;
      }
      if (isValidValue(fields()[53], other.ActiveUserID)) {
        this.ActiveUserID = data().deepCopy(fields()[53].schema(), other.ActiveUserID);
        fieldSetFlags()[53] = true;
      }
      if (isValidValue(fields()[54], other.BrokerOrderSeq)) {
        this.BrokerOrderSeq = data().deepCopy(fields()[54].schema(), other.BrokerOrderSeq);
        fieldSetFlags()[54] = true;
      }
      if (isValidValue(fields()[55], other.RelativeOrderSysID)) {
        this.RelativeOrderSysID = data().deepCopy(fields()[55].schema(), other.RelativeOrderSysID);
        fieldSetFlags()[55] = true;
      }
      if (isValidValue(fields()[56], other.ZCETotalTradedVolume)) {
        this.ZCETotalTradedVolume = data().deepCopy(fields()[56].schema(), other.ZCETotalTradedVolume);
        fieldSetFlags()[56] = true;
      }
      if (isValidValue(fields()[57], other.IsSwapOrder)) {
        this.IsSwapOrder = data().deepCopy(fields()[57].schema(), other.IsSwapOrder);
        fieldSetFlags()[57] = true;
      }
      if (isValidValue(fields()[58], other.BranchID)) {
        this.BranchID = data().deepCopy(fields()[58].schema(), other.BranchID);
        fieldSetFlags()[58] = true;
      }
      if (isValidValue(fields()[59], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[59].schema(), other.InvestUnitID);
        fieldSetFlags()[59] = true;
      }
      if (isValidValue(fields()[60], other.AccountID)) {
        this.AccountID = data().deepCopy(fields()[60].schema(), other.AccountID);
        fieldSetFlags()[60] = true;
      }
      if (isValidValue(fields()[61], other.CurrencyID)) {
        this.CurrencyID = data().deepCopy(fields()[61].schema(), other.CurrencyID);
        fieldSetFlags()[61] = true;
      }
      if (isValidValue(fields()[62], other.IPAddress)) {
        this.IPAddress = data().deepCopy(fields()[62].schema(), other.IPAddress);
        fieldSetFlags()[62] = true;
      }
      if (isValidValue(fields()[63], other.MacAddress)) {
        this.MacAddress = data().deepCopy(fields()[63].schema(), other.MacAddress);
        fieldSetFlags()[63] = true;
      }
    }

    /**
      * Gets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return The value.
      */
    public boolean getIsLast() {
      return IsLast;
    }


    /**
      * Sets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @param value The value of 'IsLast'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setIsLast(boolean value) {
      validate(fields()[0], value);
      this.IsLast = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'IsLast' field has been set.
      * 是否最后一条信息
      * @return True if the 'IsLast' field has been set, false otherwise.
      */
    public boolean hasIsLast() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearIsLast() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return The value.
      */
    public java.lang.String getBrokerID() {
      return BrokerID;
    }


    /**
      * Sets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @param value The value of 'BrokerID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setBrokerID(java.lang.String value) {
      validate(fields()[1], value);
      this.BrokerID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerID' field has been set.
      * 经纪公司代码
      * @return True if the 'BrokerID' field has been set, false otherwise.
      */
    public boolean hasBrokerID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearBrokerID() {
      BrokerID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestorID' field.
      * 投资者代码
      * @return The value.
      */
    public java.lang.String getInvestorID() {
      return InvestorID;
    }


    /**
      * Sets the value of the 'InvestorID' field.
      * 投资者代码
      * @param value The value of 'InvestorID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInvestorID(java.lang.String value) {
      validate(fields()[2], value);
      this.InvestorID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestorID' field has been set.
      * 投资者代码
      * @return True if the 'InvestorID' field has been set, false otherwise.
      */
    public boolean hasInvestorID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'InvestorID' field.
      * 投资者代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInvestorID() {
      InvestorID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstrumentID' field.
      * 合约代码
      * @return The value.
      */
    public java.lang.String getInstrumentID() {
      return InstrumentID;
    }


    /**
      * Sets the value of the 'InstrumentID' field.
      * 合约代码
      * @param value The value of 'InstrumentID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInstrumentID(java.lang.String value) {
      validate(fields()[3], value);
      this.InstrumentID = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'InstrumentID' field has been set.
      * 合约代码
      * @return True if the 'InstrumentID' field has been set, false otherwise.
      */
    public boolean hasInstrumentID() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'InstrumentID' field.
      * 合约代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInstrumentID() {
      InstrumentID = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderRef' field.
      * 报单引用
      * @return The value.
      */
    public java.lang.String getOrderRef() {
      return OrderRef;
    }


    /**
      * Sets the value of the 'OrderRef' field.
      * 报单引用
      * @param value The value of 'OrderRef'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderRef(java.lang.String value) {
      validate(fields()[4], value);
      this.OrderRef = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderRef' field has been set.
      * 报单引用
      * @return True if the 'OrderRef' field has been set, false otherwise.
      */
    public boolean hasOrderRef() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'OrderRef' field.
      * 报单引用
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderRef() {
      OrderRef = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserID' field.
      * 用户代码
      * @return The value.
      */
    public java.lang.String getUserID() {
      return UserID;
    }


    /**
      * Sets the value of the 'UserID' field.
      * 用户代码
      * @param value The value of 'UserID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setUserID(java.lang.String value) {
      validate(fields()[5], value);
      this.UserID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'UserID' field has been set.
      * 用户代码
      * @return True if the 'UserID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'UserID' field.
      * 用户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearUserID() {
      UserID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderPriceType' field.
      * 报单价格条件
      * @return The value.
      */
    public int getOrderPriceType() {
      return OrderPriceType;
    }


    /**
      * Sets the value of the 'OrderPriceType' field.
      * 报单价格条件
      * @param value The value of 'OrderPriceType'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderPriceType(int value) {
      validate(fields()[6], value);
      this.OrderPriceType = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderPriceType' field has been set.
      * 报单价格条件
      * @return True if the 'OrderPriceType' field has been set, false otherwise.
      */
    public boolean hasOrderPriceType() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'OrderPriceType' field.
      * 报单价格条件
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderPriceType() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Direction' field.
      * 买卖方向
      * @return The value.
      */
    public int getDirection() {
      return Direction;
    }


    /**
      * Sets the value of the 'Direction' field.
      * 买卖方向
      * @param value The value of 'Direction'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setDirection(int value) {
      validate(fields()[7], value);
      this.Direction = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Direction' field has been set.
      * 买卖方向
      * @return True if the 'Direction' field has been set, false otherwise.
      */
    public boolean hasDirection() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Direction' field.
      * 买卖方向
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearDirection() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'CombOffsetFlag' field.
      * 组合开平标志
      * @return The value.
      */
    public java.lang.String getCombOffsetFlag() {
      return CombOffsetFlag;
    }


    /**
      * Sets the value of the 'CombOffsetFlag' field.
      * 组合开平标志
      * @param value The value of 'CombOffsetFlag'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setCombOffsetFlag(java.lang.String value) {
      validate(fields()[8], value);
      this.CombOffsetFlag = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'CombOffsetFlag' field has been set.
      * 组合开平标志
      * @return True if the 'CombOffsetFlag' field has been set, false otherwise.
      */
    public boolean hasCombOffsetFlag() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'CombOffsetFlag' field.
      * 组合开平标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearCombOffsetFlag() {
      CombOffsetFlag = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'CombHedgeFlag' field.
      * 组合投机套保标志
      * @return The value.
      */
    public java.lang.String getCombHedgeFlag() {
      return CombHedgeFlag;
    }


    /**
      * Sets the value of the 'CombHedgeFlag' field.
      * 组合投机套保标志
      * @param value The value of 'CombHedgeFlag'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setCombHedgeFlag(java.lang.String value) {
      validate(fields()[9], value);
      this.CombHedgeFlag = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'CombHedgeFlag' field has been set.
      * 组合投机套保标志
      * @return True if the 'CombHedgeFlag' field has been set, false otherwise.
      */
    public boolean hasCombHedgeFlag() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'CombHedgeFlag' field.
      * 组合投机套保标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearCombHedgeFlag() {
      CombHedgeFlag = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'LimitPrice' field.
      * 价格
      * @return The value.
      */
    public double getLimitPrice() {
      return LimitPrice;
    }


    /**
      * Sets the value of the 'LimitPrice' field.
      * 价格
      * @param value The value of 'LimitPrice'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setLimitPrice(double value) {
      validate(fields()[10], value);
      this.LimitPrice = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'LimitPrice' field has been set.
      * 价格
      * @return True if the 'LimitPrice' field has been set, false otherwise.
      */
    public boolean hasLimitPrice() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'LimitPrice' field.
      * 价格
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearLimitPrice() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'VolumeTotalOriginal' field.
      * 数量
      * @return The value.
      */
    public int getVolumeTotalOriginal() {
      return VolumeTotalOriginal;
    }


    /**
      * Sets the value of the 'VolumeTotalOriginal' field.
      * 数量
      * @param value The value of 'VolumeTotalOriginal'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setVolumeTotalOriginal(int value) {
      validate(fields()[11], value);
      this.VolumeTotalOriginal = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'VolumeTotalOriginal' field has been set.
      * 数量
      * @return True if the 'VolumeTotalOriginal' field has been set, false otherwise.
      */
    public boolean hasVolumeTotalOriginal() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'VolumeTotalOriginal' field.
      * 数量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearVolumeTotalOriginal() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeCondition' field.
      * 有效期类型
      * @return The value.
      */
    public int getTimeCondition() {
      return TimeCondition;
    }


    /**
      * Sets the value of the 'TimeCondition' field.
      * 有效期类型
      * @param value The value of 'TimeCondition'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setTimeCondition(int value) {
      validate(fields()[12], value);
      this.TimeCondition = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeCondition' field has been set.
      * 有效期类型
      * @return True if the 'TimeCondition' field has been set, false otherwise.
      */
    public boolean hasTimeCondition() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'TimeCondition' field.
      * 有效期类型
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearTimeCondition() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'GTDDate' field.
      * GTD日期
      * @return The value.
      */
    public java.lang.String getGTDDate() {
      return GTDDate;
    }


    /**
      * Sets the value of the 'GTDDate' field.
      * GTD日期
      * @param value The value of 'GTDDate'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setGTDDate(java.lang.String value) {
      validate(fields()[13], value);
      this.GTDDate = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'GTDDate' field has been set.
      * GTD日期
      * @return True if the 'GTDDate' field has been set, false otherwise.
      */
    public boolean hasGTDDate() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'GTDDate' field.
      * GTD日期
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearGTDDate() {
      GTDDate = null;
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'VolumeCondition' field.
      * 成交量类型
      * @return The value.
      */
    public int getVolumeCondition() {
      return VolumeCondition;
    }


    /**
      * Sets the value of the 'VolumeCondition' field.
      * 成交量类型
      * @param value The value of 'VolumeCondition'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setVolumeCondition(int value) {
      validate(fields()[14], value);
      this.VolumeCondition = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'VolumeCondition' field has been set.
      * 成交量类型
      * @return True if the 'VolumeCondition' field has been set, false otherwise.
      */
    public boolean hasVolumeCondition() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'VolumeCondition' field.
      * 成交量类型
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearVolumeCondition() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'MinVolume' field.
      * 最小成交量
      * @return The value.
      */
    public int getMinVolume() {
      return MinVolume;
    }


    /**
      * Sets the value of the 'MinVolume' field.
      * 最小成交量
      * @param value The value of 'MinVolume'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setMinVolume(int value) {
      validate(fields()[15], value);
      this.MinVolume = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'MinVolume' field has been set.
      * 最小成交量
      * @return True if the 'MinVolume' field has been set, false otherwise.
      */
    public boolean hasMinVolume() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'MinVolume' field.
      * 最小成交量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearMinVolume() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'ContingentCondition' field.
      * 触发条件
      * @return The value.
      */
    public int getContingentCondition() {
      return ContingentCondition;
    }


    /**
      * Sets the value of the 'ContingentCondition' field.
      * 触发条件
      * @param value The value of 'ContingentCondition'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setContingentCondition(int value) {
      validate(fields()[16], value);
      this.ContingentCondition = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'ContingentCondition' field has been set.
      * 触发条件
      * @return True if the 'ContingentCondition' field has been set, false otherwise.
      */
    public boolean hasContingentCondition() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'ContingentCondition' field.
      * 触发条件
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearContingentCondition() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'StopPrice' field.
      * 止损价
      * @return The value.
      */
    public double getStopPrice() {
      return StopPrice;
    }


    /**
      * Sets the value of the 'StopPrice' field.
      * 止损价
      * @param value The value of 'StopPrice'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setStopPrice(double value) {
      validate(fields()[17], value);
      this.StopPrice = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'StopPrice' field has been set.
      * 止损价
      * @return True if the 'StopPrice' field has been set, false otherwise.
      */
    public boolean hasStopPrice() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'StopPrice' field.
      * 止损价
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearStopPrice() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'ForceCloseReason' field.
      * 强平原因
      * @return The value.
      */
    public int getForceCloseReason() {
      return ForceCloseReason;
    }


    /**
      * Sets the value of the 'ForceCloseReason' field.
      * 强平原因
      * @param value The value of 'ForceCloseReason'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setForceCloseReason(int value) {
      validate(fields()[18], value);
      this.ForceCloseReason = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'ForceCloseReason' field has been set.
      * 强平原因
      * @return True if the 'ForceCloseReason' field has been set, false otherwise.
      */
    public boolean hasForceCloseReason() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'ForceCloseReason' field.
      * 强平原因
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearForceCloseReason() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsAutoSuspend' field.
      * 自动挂起标志
      * @return The value.
      */
    public int getIsAutoSuspend() {
      return IsAutoSuspend;
    }


    /**
      * Sets the value of the 'IsAutoSuspend' field.
      * 自动挂起标志
      * @param value The value of 'IsAutoSuspend'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setIsAutoSuspend(int value) {
      validate(fields()[19], value);
      this.IsAutoSuspend = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'IsAutoSuspend' field has been set.
      * 自动挂起标志
      * @return True if the 'IsAutoSuspend' field has been set, false otherwise.
      */
    public boolean hasIsAutoSuspend() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'IsAutoSuspend' field.
      * 自动挂起标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearIsAutoSuspend() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'BusinessUnit' field.
      * 业务单元
      * @return The value.
      */
    public java.lang.String getBusinessUnit() {
      return BusinessUnit;
    }


    /**
      * Sets the value of the 'BusinessUnit' field.
      * 业务单元
      * @param value The value of 'BusinessUnit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setBusinessUnit(java.lang.String value) {
      validate(fields()[20], value);
      this.BusinessUnit = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'BusinessUnit' field has been set.
      * 业务单元
      * @return True if the 'BusinessUnit' field has been set, false otherwise.
      */
    public boolean hasBusinessUnit() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'BusinessUnit' field.
      * 业务单元
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearBusinessUnit() {
      BusinessUnit = null;
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'RequestID' field.
      * 请求编号
      * @return The value.
      */
    public int getRequestID() {
      return RequestID;
    }


    /**
      * Sets the value of the 'RequestID' field.
      * 请求编号
      * @param value The value of 'RequestID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setRequestID(int value) {
      validate(fields()[21], value);
      this.RequestID = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'RequestID' field has been set.
      * 请求编号
      * @return True if the 'RequestID' field has been set, false otherwise.
      */
    public boolean hasRequestID() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'RequestID' field.
      * 请求编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearRequestID() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @return The value.
      */
    public java.lang.String getOrderLocalID() {
      return OrderLocalID;
    }


    /**
      * Sets the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @param value The value of 'OrderLocalID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderLocalID(java.lang.String value) {
      validate(fields()[22], value);
      this.OrderLocalID = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderLocalID' field has been set.
      * 本地报单编号
      * @return True if the 'OrderLocalID' field has been set, false otherwise.
      */
    public boolean hasOrderLocalID() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderLocalID() {
      OrderLocalID = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeID' field.
      * 交易所代码
      * @return The value.
      */
    public java.lang.String getExchangeID() {
      return ExchangeID;
    }


    /**
      * Sets the value of the 'ExchangeID' field.
      * 交易所代码
      * @param value The value of 'ExchangeID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setExchangeID(java.lang.String value) {
      validate(fields()[23], value);
      this.ExchangeID = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeID' field has been set.
      * 交易所代码
      * @return True if the 'ExchangeID' field has been set, false otherwise.
      */
    public boolean hasExchangeID() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'ExchangeID' field.
      * 交易所代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearExchangeID() {
      ExchangeID = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'ParticipantID' field.
      * 会员代码
      * @return The value.
      */
    public java.lang.String getParticipantID() {
      return ParticipantID;
    }


    /**
      * Sets the value of the 'ParticipantID' field.
      * 会员代码
      * @param value The value of 'ParticipantID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setParticipantID(java.lang.String value) {
      validate(fields()[24], value);
      this.ParticipantID = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'ParticipantID' field has been set.
      * 会员代码
      * @return True if the 'ParticipantID' field has been set, false otherwise.
      */
    public boolean hasParticipantID() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'ParticipantID' field.
      * 会员代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearParticipantID() {
      ParticipantID = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClientID' field.
      * 客户代码
      * @return The value.
      */
    public java.lang.String getClientID() {
      return ClientID;
    }


    /**
      * Sets the value of the 'ClientID' field.
      * 客户代码
      * @param value The value of 'ClientID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setClientID(java.lang.String value) {
      validate(fields()[25], value);
      this.ClientID = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'ClientID' field has been set.
      * 客户代码
      * @return True if the 'ClientID' field has been set, false otherwise.
      */
    public boolean hasClientID() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'ClientID' field.
      * 客户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearClientID() {
      ClientID = null;
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @return The value.
      */
    public java.lang.String getExchangeInstID() {
      return ExchangeInstID;
    }


    /**
      * Sets the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @param value The value of 'ExchangeInstID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setExchangeInstID(java.lang.String value) {
      validate(fields()[26], value);
      this.ExchangeInstID = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeInstID' field has been set.
      * 合约在交易所的代码
      * @return True if the 'ExchangeInstID' field has been set, false otherwise.
      */
    public boolean hasExchangeInstID() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearExchangeInstID() {
      ExchangeInstID = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'TraderID' field.
      * 交易所交易员代码
      * @return The value.
      */
    public java.lang.String getTraderID() {
      return TraderID;
    }


    /**
      * Sets the value of the 'TraderID' field.
      * 交易所交易员代码
      * @param value The value of 'TraderID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setTraderID(java.lang.String value) {
      validate(fields()[27], value);
      this.TraderID = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'TraderID' field has been set.
      * 交易所交易员代码
      * @return True if the 'TraderID' field has been set, false otherwise.
      */
    public boolean hasTraderID() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'TraderID' field.
      * 交易所交易员代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearTraderID() {
      TraderID = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstallID' field.
      * 安装编号
      * @return The value.
      */
    public int getInstallID() {
      return InstallID;
    }


    /**
      * Sets the value of the 'InstallID' field.
      * 安装编号
      * @param value The value of 'InstallID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInstallID(int value) {
      validate(fields()[28], value);
      this.InstallID = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'InstallID' field has been set.
      * 安装编号
      * @return True if the 'InstallID' field has been set, false otherwise.
      */
    public boolean hasInstallID() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'InstallID' field.
      * 安装编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInstallID() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderSubmitStatus' field.
      * 报单提交状态
      * @return The value.
      */
    public int getOrderSubmitStatus() {
      return OrderSubmitStatus;
    }


    /**
      * Sets the value of the 'OrderSubmitStatus' field.
      * 报单提交状态
      * @param value The value of 'OrderSubmitStatus'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderSubmitStatus(int value) {
      validate(fields()[29], value);
      this.OrderSubmitStatus = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderSubmitStatus' field has been set.
      * 报单提交状态
      * @return True if the 'OrderSubmitStatus' field has been set, false otherwise.
      */
    public boolean hasOrderSubmitStatus() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'OrderSubmitStatus' field.
      * 报单提交状态
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderSubmitStatus() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'NotifySequence' field.
      * 报单提示序号
      * @return The value.
      */
    public int getNotifySequence() {
      return NotifySequence;
    }


    /**
      * Sets the value of the 'NotifySequence' field.
      * 报单提示序号
      * @param value The value of 'NotifySequence'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setNotifySequence(int value) {
      validate(fields()[30], value);
      this.NotifySequence = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'NotifySequence' field has been set.
      * 报单提示序号
      * @return True if the 'NotifySequence' field has been set, false otherwise.
      */
    public boolean hasNotifySequence() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'NotifySequence' field.
      * 报单提示序号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearNotifySequence() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradingDay' field.
      * 交易日
      * @return The value.
      */
    public java.lang.String getTradingDay() {
      return TradingDay;
    }


    /**
      * Sets the value of the 'TradingDay' field.
      * 交易日
      * @param value The value of 'TradingDay'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setTradingDay(java.lang.String value) {
      validate(fields()[31], value);
      this.TradingDay = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'TradingDay' field has been set.
      * 交易日
      * @return True if the 'TradingDay' field has been set, false otherwise.
      */
    public boolean hasTradingDay() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'TradingDay' field.
      * 交易日
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearTradingDay() {
      TradingDay = null;
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'SettlementID' field.
      * 结算编号
      * @return The value.
      */
    public int getSettlementID() {
      return SettlementID;
    }


    /**
      * Sets the value of the 'SettlementID' field.
      * 结算编号
      * @param value The value of 'SettlementID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setSettlementID(int value) {
      validate(fields()[32], value);
      this.SettlementID = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'SettlementID' field has been set.
      * 结算编号
      * @return True if the 'SettlementID' field has been set, false otherwise.
      */
    public boolean hasSettlementID() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'SettlementID' field.
      * 结算编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearSettlementID() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderSysID' field.
      * 报单编号
      * @return The value.
      */
    public java.lang.String getOrderSysID() {
      return OrderSysID;
    }


    /**
      * Sets the value of the 'OrderSysID' field.
      * 报单编号
      * @param value The value of 'OrderSysID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderSysID(java.lang.String value) {
      validate(fields()[33], value);
      this.OrderSysID = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderSysID' field has been set.
      * 报单编号
      * @return True if the 'OrderSysID' field has been set, false otherwise.
      */
    public boolean hasOrderSysID() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'OrderSysID' field.
      * 报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderSysID() {
      OrderSysID = null;
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderSource' field.
      * 报单来源
      * @return The value.
      */
    public int getOrderSource() {
      return OrderSource;
    }


    /**
      * Sets the value of the 'OrderSource' field.
      * 报单来源
      * @param value The value of 'OrderSource'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderSource(int value) {
      validate(fields()[34], value);
      this.OrderSource = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderSource' field has been set.
      * 报单来源
      * @return True if the 'OrderSource' field has been set, false otherwise.
      */
    public boolean hasOrderSource() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'OrderSource' field.
      * 报单来源
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderSource() {
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderStatus' field.
      * 报单状态
      * @return The value.
      */
    public int getOrderStatus() {
      return OrderStatus;
    }


    /**
      * Sets the value of the 'OrderStatus' field.
      * 报单状态
      * @param value The value of 'OrderStatus'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderStatus(int value) {
      validate(fields()[35], value);
      this.OrderStatus = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderStatus' field has been set.
      * 报单状态
      * @return True if the 'OrderStatus' field has been set, false otherwise.
      */
    public boolean hasOrderStatus() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'OrderStatus' field.
      * 报单状态
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderStatus() {
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderType' field.
      * 报单类型
      * @return The value.
      */
    public int getOrderType() {
      return OrderType;
    }


    /**
      * Sets the value of the 'OrderType' field.
      * 报单类型
      * @param value The value of 'OrderType'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setOrderType(int value) {
      validate(fields()[36], value);
      this.OrderType = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderType' field has been set.
      * 报单类型
      * @return True if the 'OrderType' field has been set, false otherwise.
      */
    public boolean hasOrderType() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'OrderType' field.
      * 报单类型
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearOrderType() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'VolumeTraded' field.
      * 今成交数量
      * @return The value.
      */
    public int getVolumeTraded() {
      return VolumeTraded;
    }


    /**
      * Sets the value of the 'VolumeTraded' field.
      * 今成交数量
      * @param value The value of 'VolumeTraded'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setVolumeTraded(int value) {
      validate(fields()[37], value);
      this.VolumeTraded = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'VolumeTraded' field has been set.
      * 今成交数量
      * @return True if the 'VolumeTraded' field has been set, false otherwise.
      */
    public boolean hasVolumeTraded() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'VolumeTraded' field.
      * 今成交数量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearVolumeTraded() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'VolumeTotal' field.
      * 剩余数量
      * @return The value.
      */
    public int getVolumeTotal() {
      return VolumeTotal;
    }


    /**
      * Sets the value of the 'VolumeTotal' field.
      * 剩余数量
      * @param value The value of 'VolumeTotal'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setVolumeTotal(int value) {
      validate(fields()[38], value);
      this.VolumeTotal = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'VolumeTotal' field has been set.
      * 剩余数量
      * @return True if the 'VolumeTotal' field has been set, false otherwise.
      */
    public boolean hasVolumeTotal() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'VolumeTotal' field.
      * 剩余数量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearVolumeTotal() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'InsertDate' field.
      * 报单日期
      * @return The value.
      */
    public java.lang.String getInsertDate() {
      return InsertDate;
    }


    /**
      * Sets the value of the 'InsertDate' field.
      * 报单日期
      * @param value The value of 'InsertDate'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInsertDate(java.lang.String value) {
      validate(fields()[39], value);
      this.InsertDate = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'InsertDate' field has been set.
      * 报单日期
      * @return True if the 'InsertDate' field has been set, false otherwise.
      */
    public boolean hasInsertDate() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'InsertDate' field.
      * 报单日期
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInsertDate() {
      InsertDate = null;
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'InsertTime' field.
      * 委托时间
      * @return The value.
      */
    public java.lang.String getInsertTime() {
      return InsertTime;
    }


    /**
      * Sets the value of the 'InsertTime' field.
      * 委托时间
      * @param value The value of 'InsertTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInsertTime(java.lang.String value) {
      validate(fields()[40], value);
      this.InsertTime = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'InsertTime' field has been set.
      * 委托时间
      * @return True if the 'InsertTime' field has been set, false otherwise.
      */
    public boolean hasInsertTime() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'InsertTime' field.
      * 委托时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInsertTime() {
      InsertTime = null;
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'ActiveTime' field.
      * 激活时间
      * @return The value.
      */
    public java.lang.String getActiveTime() {
      return ActiveTime;
    }


    /**
      * Sets the value of the 'ActiveTime' field.
      * 激活时间
      * @param value The value of 'ActiveTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setActiveTime(java.lang.String value) {
      validate(fields()[41], value);
      this.ActiveTime = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'ActiveTime' field has been set.
      * 激活时间
      * @return True if the 'ActiveTime' field has been set, false otherwise.
      */
    public boolean hasActiveTime() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'ActiveTime' field.
      * 激活时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearActiveTime() {
      ActiveTime = null;
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'SuspendTime' field.
      * 挂起时间
      * @return The value.
      */
    public java.lang.String getSuspendTime() {
      return SuspendTime;
    }


    /**
      * Sets the value of the 'SuspendTime' field.
      * 挂起时间
      * @param value The value of 'SuspendTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setSuspendTime(java.lang.String value) {
      validate(fields()[42], value);
      this.SuspendTime = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'SuspendTime' field has been set.
      * 挂起时间
      * @return True if the 'SuspendTime' field has been set, false otherwise.
      */
    public boolean hasSuspendTime() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'SuspendTime' field.
      * 挂起时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearSuspendTime() {
      SuspendTime = null;
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'UpdateTime' field.
      * 最后修改时间
      * @return The value.
      */
    public java.lang.String getUpdateTime() {
      return UpdateTime;
    }


    /**
      * Sets the value of the 'UpdateTime' field.
      * 最后修改时间
      * @param value The value of 'UpdateTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setUpdateTime(java.lang.String value) {
      validate(fields()[43], value);
      this.UpdateTime = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'UpdateTime' field has been set.
      * 最后修改时间
      * @return True if the 'UpdateTime' field has been set, false otherwise.
      */
    public boolean hasUpdateTime() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'UpdateTime' field.
      * 最后修改时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearUpdateTime() {
      UpdateTime = null;
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'CancelTime' field.
      * 撤销时间
      * @return The value.
      */
    public java.lang.String getCancelTime() {
      return CancelTime;
    }


    /**
      * Sets the value of the 'CancelTime' field.
      * 撤销时间
      * @param value The value of 'CancelTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setCancelTime(java.lang.String value) {
      validate(fields()[44], value);
      this.CancelTime = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'CancelTime' field has been set.
      * 撤销时间
      * @return True if the 'CancelTime' field has been set, false otherwise.
      */
    public boolean hasCancelTime() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'CancelTime' field.
      * 撤销时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearCancelTime() {
      CancelTime = null;
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'ActiveTraderID' field.
      * 最后修改交易所交易员代码
      * @return The value.
      */
    public java.lang.String getActiveTraderID() {
      return ActiveTraderID;
    }


    /**
      * Sets the value of the 'ActiveTraderID' field.
      * 最后修改交易所交易员代码
      * @param value The value of 'ActiveTraderID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setActiveTraderID(java.lang.String value) {
      validate(fields()[45], value);
      this.ActiveTraderID = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'ActiveTraderID' field has been set.
      * 最后修改交易所交易员代码
      * @return True if the 'ActiveTraderID' field has been set, false otherwise.
      */
    public boolean hasActiveTraderID() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'ActiveTraderID' field.
      * 最后修改交易所交易员代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearActiveTraderID() {
      ActiveTraderID = null;
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @return The value.
      */
    public java.lang.String getClearingPartID() {
      return ClearingPartID;
    }


    /**
      * Sets the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @param value The value of 'ClearingPartID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setClearingPartID(java.lang.String value) {
      validate(fields()[46], value);
      this.ClearingPartID = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'ClearingPartID' field has been set.
      * 结算会员编号
      * @return True if the 'ClearingPartID' field has been set, false otherwise.
      */
    public boolean hasClearingPartID() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearClearingPartID() {
      ClearingPartID = null;
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'SequenceNo' field.
      * 序号
      * @return The value.
      */
    public int getSequenceNo() {
      return SequenceNo;
    }


    /**
      * Sets the value of the 'SequenceNo' field.
      * 序号
      * @param value The value of 'SequenceNo'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setSequenceNo(int value) {
      validate(fields()[47], value);
      this.SequenceNo = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'SequenceNo' field has been set.
      * 序号
      * @return True if the 'SequenceNo' field has been set, false otherwise.
      */
    public boolean hasSequenceNo() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'SequenceNo' field.
      * 序号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearSequenceNo() {
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrontID' field.
      * 前置编号
      * @return The value.
      */
    public int getFrontID() {
      return FrontID;
    }


    /**
      * Sets the value of the 'FrontID' field.
      * 前置编号
      * @param value The value of 'FrontID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setFrontID(int value) {
      validate(fields()[48], value);
      this.FrontID = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'FrontID' field has been set.
      * 前置编号
      * @return True if the 'FrontID' field has been set, false otherwise.
      */
    public boolean hasFrontID() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'FrontID' field.
      * 前置编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearFrontID() {
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'SessionID' field.
      * 会话编号
      * @return The value.
      */
    public int getSessionID() {
      return SessionID;
    }


    /**
      * Sets the value of the 'SessionID' field.
      * 会话编号
      * @param value The value of 'SessionID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setSessionID(int value) {
      validate(fields()[49], value);
      this.SessionID = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'SessionID' field has been set.
      * 会话编号
      * @return True if the 'SessionID' field has been set, false otherwise.
      */
    public boolean hasSessionID() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'SessionID' field.
      * 会话编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearSessionID() {
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserProductInfo' field.
      * 用户端产品信息
      * @return The value.
      */
    public java.lang.String getUserProductInfo() {
      return UserProductInfo;
    }


    /**
      * Sets the value of the 'UserProductInfo' field.
      * 用户端产品信息
      * @param value The value of 'UserProductInfo'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setUserProductInfo(java.lang.String value) {
      validate(fields()[50], value);
      this.UserProductInfo = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'UserProductInfo' field has been set.
      * 用户端产品信息
      * @return True if the 'UserProductInfo' field has been set, false otherwise.
      */
    public boolean hasUserProductInfo() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'UserProductInfo' field.
      * 用户端产品信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearUserProductInfo() {
      UserProductInfo = null;
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'StatusMsg' field.
      * 状态信息
      * @return The value.
      */
    public java.lang.String getStatusMsg() {
      return StatusMsg;
    }


    /**
      * Sets the value of the 'StatusMsg' field.
      * 状态信息
      * @param value The value of 'StatusMsg'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setStatusMsg(java.lang.String value) {
      validate(fields()[51], value);
      this.StatusMsg = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'StatusMsg' field has been set.
      * 状态信息
      * @return True if the 'StatusMsg' field has been set, false otherwise.
      */
    public boolean hasStatusMsg() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'StatusMsg' field.
      * 状态信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearStatusMsg() {
      StatusMsg = null;
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserForceClose' field.
      * 用户强评标志
      * @return The value.
      */
    public int getUserForceClose() {
      return UserForceClose;
    }


    /**
      * Sets the value of the 'UserForceClose' field.
      * 用户强评标志
      * @param value The value of 'UserForceClose'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setUserForceClose(int value) {
      validate(fields()[52], value);
      this.UserForceClose = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'UserForceClose' field has been set.
      * 用户强评标志
      * @return True if the 'UserForceClose' field has been set, false otherwise.
      */
    public boolean hasUserForceClose() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'UserForceClose' field.
      * 用户强评标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearUserForceClose() {
      fieldSetFlags()[52] = false;
      return this;
    }

    /**
      * Gets the value of the 'ActiveUserID' field.
      * 操作用户代码
      * @return The value.
      */
    public java.lang.String getActiveUserID() {
      return ActiveUserID;
    }


    /**
      * Sets the value of the 'ActiveUserID' field.
      * 操作用户代码
      * @param value The value of 'ActiveUserID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setActiveUserID(java.lang.String value) {
      validate(fields()[53], value);
      this.ActiveUserID = value;
      fieldSetFlags()[53] = true;
      return this;
    }

    /**
      * Checks whether the 'ActiveUserID' field has been set.
      * 操作用户代码
      * @return True if the 'ActiveUserID' field has been set, false otherwise.
      */
    public boolean hasActiveUserID() {
      return fieldSetFlags()[53];
    }


    /**
      * Clears the value of the 'ActiveUserID' field.
      * 操作用户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearActiveUserID() {
      ActiveUserID = null;
      fieldSetFlags()[53] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @return The value.
      */
    public int getBrokerOrderSeq() {
      return BrokerOrderSeq;
    }


    /**
      * Sets the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @param value The value of 'BrokerOrderSeq'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setBrokerOrderSeq(int value) {
      validate(fields()[54], value);
      this.BrokerOrderSeq = value;
      fieldSetFlags()[54] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerOrderSeq' field has been set.
      * 经纪公司报单编号
      * @return True if the 'BrokerOrderSeq' field has been set, false otherwise.
      */
    public boolean hasBrokerOrderSeq() {
      return fieldSetFlags()[54];
    }


    /**
      * Clears the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearBrokerOrderSeq() {
      fieldSetFlags()[54] = false;
      return this;
    }

    /**
      * Gets the value of the 'RelativeOrderSysID' field.
      * 相关报单
      * @return The value.
      */
    public java.lang.String getRelativeOrderSysID() {
      return RelativeOrderSysID;
    }


    /**
      * Sets the value of the 'RelativeOrderSysID' field.
      * 相关报单
      * @param value The value of 'RelativeOrderSysID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setRelativeOrderSysID(java.lang.String value) {
      validate(fields()[55], value);
      this.RelativeOrderSysID = value;
      fieldSetFlags()[55] = true;
      return this;
    }

    /**
      * Checks whether the 'RelativeOrderSysID' field has been set.
      * 相关报单
      * @return True if the 'RelativeOrderSysID' field has been set, false otherwise.
      */
    public boolean hasRelativeOrderSysID() {
      return fieldSetFlags()[55];
    }


    /**
      * Clears the value of the 'RelativeOrderSysID' field.
      * 相关报单
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearRelativeOrderSysID() {
      RelativeOrderSysID = null;
      fieldSetFlags()[55] = false;
      return this;
    }

    /**
      * Gets the value of the 'ZCETotalTradedVolume' field.
      * 郑商所成交数量
      * @return The value.
      */
    public int getZCETotalTradedVolume() {
      return ZCETotalTradedVolume;
    }


    /**
      * Sets the value of the 'ZCETotalTradedVolume' field.
      * 郑商所成交数量
      * @param value The value of 'ZCETotalTradedVolume'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setZCETotalTradedVolume(int value) {
      validate(fields()[56], value);
      this.ZCETotalTradedVolume = value;
      fieldSetFlags()[56] = true;
      return this;
    }

    /**
      * Checks whether the 'ZCETotalTradedVolume' field has been set.
      * 郑商所成交数量
      * @return True if the 'ZCETotalTradedVolume' field has been set, false otherwise.
      */
    public boolean hasZCETotalTradedVolume() {
      return fieldSetFlags()[56];
    }


    /**
      * Clears the value of the 'ZCETotalTradedVolume' field.
      * 郑商所成交数量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearZCETotalTradedVolume() {
      fieldSetFlags()[56] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsSwapOrder' field.
      * 互换单标志
      * @return The value.
      */
    public int getIsSwapOrder() {
      return IsSwapOrder;
    }


    /**
      * Sets the value of the 'IsSwapOrder' field.
      * 互换单标志
      * @param value The value of 'IsSwapOrder'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setIsSwapOrder(int value) {
      validate(fields()[57], value);
      this.IsSwapOrder = value;
      fieldSetFlags()[57] = true;
      return this;
    }

    /**
      * Checks whether the 'IsSwapOrder' field has been set.
      * 互换单标志
      * @return True if the 'IsSwapOrder' field has been set, false otherwise.
      */
    public boolean hasIsSwapOrder() {
      return fieldSetFlags()[57];
    }


    /**
      * Clears the value of the 'IsSwapOrder' field.
      * 互换单标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearIsSwapOrder() {
      fieldSetFlags()[57] = false;
      return this;
    }

    /**
      * Gets the value of the 'BranchID' field.
      * 营业部编号
      * @return The value.
      */
    public java.lang.String getBranchID() {
      return BranchID;
    }


    /**
      * Sets the value of the 'BranchID' field.
      * 营业部编号
      * @param value The value of 'BranchID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setBranchID(java.lang.String value) {
      validate(fields()[58], value);
      this.BranchID = value;
      fieldSetFlags()[58] = true;
      return this;
    }

    /**
      * Checks whether the 'BranchID' field has been set.
      * 营业部编号
      * @return True if the 'BranchID' field has been set, false otherwise.
      */
    public boolean hasBranchID() {
      return fieldSetFlags()[58];
    }


    /**
      * Clears the value of the 'BranchID' field.
      * 营业部编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearBranchID() {
      BranchID = null;
      fieldSetFlags()[58] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return The value.
      */
    public java.lang.String getInvestUnitID() {
      return InvestUnitID;
    }


    /**
      * Sets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @param value The value of 'InvestUnitID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setInvestUnitID(java.lang.String value) {
      validate(fields()[59], value);
      this.InvestUnitID = value;
      fieldSetFlags()[59] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestUnitID' field has been set.
      * 投资单元代码
      * @return True if the 'InvestUnitID' field has been set, false otherwise.
      */
    public boolean hasInvestUnitID() {
      return fieldSetFlags()[59];
    }


    /**
      * Clears the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearInvestUnitID() {
      InvestUnitID = null;
      fieldSetFlags()[59] = false;
      return this;
    }

    /**
      * Gets the value of the 'AccountID' field.
      * 资金账号
      * @return The value.
      */
    public java.lang.String getAccountID() {
      return AccountID;
    }


    /**
      * Sets the value of the 'AccountID' field.
      * 资金账号
      * @param value The value of 'AccountID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setAccountID(java.lang.String value) {
      validate(fields()[60], value);
      this.AccountID = value;
      fieldSetFlags()[60] = true;
      return this;
    }

    /**
      * Checks whether the 'AccountID' field has been set.
      * 资金账号
      * @return True if the 'AccountID' field has been set, false otherwise.
      */
    public boolean hasAccountID() {
      return fieldSetFlags()[60];
    }


    /**
      * Clears the value of the 'AccountID' field.
      * 资金账号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearAccountID() {
      AccountID = null;
      fieldSetFlags()[60] = false;
      return this;
    }

    /**
      * Gets the value of the 'CurrencyID' field.
      * 币种代码
      * @return The value.
      */
    public java.lang.String getCurrencyID() {
      return CurrencyID;
    }


    /**
      * Sets the value of the 'CurrencyID' field.
      * 币种代码
      * @param value The value of 'CurrencyID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setCurrencyID(java.lang.String value) {
      validate(fields()[61], value);
      this.CurrencyID = value;
      fieldSetFlags()[61] = true;
      return this;
    }

    /**
      * Checks whether the 'CurrencyID' field has been set.
      * 币种代码
      * @return True if the 'CurrencyID' field has been set, false otherwise.
      */
    public boolean hasCurrencyID() {
      return fieldSetFlags()[61];
    }


    /**
      * Clears the value of the 'CurrencyID' field.
      * 币种代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearCurrencyID() {
      CurrencyID = null;
      fieldSetFlags()[61] = false;
      return this;
    }

    /**
      * Gets the value of the 'IPAddress' field.
      * IP地址
      * @return The value.
      */
    public java.lang.String getIPAddress() {
      return IPAddress;
    }


    /**
      * Sets the value of the 'IPAddress' field.
      * IP地址
      * @param value The value of 'IPAddress'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setIPAddress(java.lang.String value) {
      validate(fields()[62], value);
      this.IPAddress = value;
      fieldSetFlags()[62] = true;
      return this;
    }

    /**
      * Checks whether the 'IPAddress' field has been set.
      * IP地址
      * @return True if the 'IPAddress' field has been set, false otherwise.
      */
    public boolean hasIPAddress() {
      return fieldSetFlags()[62];
    }


    /**
      * Clears the value of the 'IPAddress' field.
      * IP地址
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearIPAddress() {
      IPAddress = null;
      fieldSetFlags()[62] = false;
      return this;
    }

    /**
      * Gets the value of the 'MacAddress' field.
      * MAC地址
      * @return The value.
      */
    public java.lang.String getMacAddress() {
      return MacAddress;
    }


    /**
      * Sets the value of the 'MacAddress' field.
      * MAC地址
      * @param value The value of 'MacAddress'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder setMacAddress(java.lang.String value) {
      validate(fields()[63], value);
      this.MacAddress = value;
      fieldSetFlags()[63] = true;
      return this;
    }

    /**
      * Checks whether the 'MacAddress' field has been set.
      * MAC地址
      * @return True if the 'MacAddress' field has been set, false otherwise.
      */
    public boolean hasMacAddress() {
      return fieldSetFlags()[63];
    }


    /**
      * Clears the value of the 'MacAddress' field.
      * MAC地址
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcOrder.Builder clearMacAddress() {
      MacAddress = null;
      fieldSetFlags()[63] = false;
      return this;
    }

    @Override
    public FtdcOrder build() {
      try {
        FtdcOrder record = new FtdcOrder();
        record.IsLast = fieldSetFlags()[0] ? this.IsLast : (java.lang.Boolean) defaultValue(fields()[0]);
        record.BrokerID = fieldSetFlags()[1] ? this.BrokerID : (java.lang.String) defaultValue(fields()[1]);
        record.InvestorID = fieldSetFlags()[2] ? this.InvestorID : (java.lang.String) defaultValue(fields()[2]);
        record.InstrumentID = fieldSetFlags()[3] ? this.InstrumentID : (java.lang.String) defaultValue(fields()[3]);
        record.OrderRef = fieldSetFlags()[4] ? this.OrderRef : (java.lang.String) defaultValue(fields()[4]);
        record.UserID = fieldSetFlags()[5] ? this.UserID : (java.lang.String) defaultValue(fields()[5]);
        record.OrderPriceType = fieldSetFlags()[6] ? this.OrderPriceType : (java.lang.Integer) defaultValue(fields()[6]);
        record.Direction = fieldSetFlags()[7] ? this.Direction : (java.lang.Integer) defaultValue(fields()[7]);
        record.CombOffsetFlag = fieldSetFlags()[8] ? this.CombOffsetFlag : (java.lang.String) defaultValue(fields()[8]);
        record.CombHedgeFlag = fieldSetFlags()[9] ? this.CombHedgeFlag : (java.lang.String) defaultValue(fields()[9]);
        record.LimitPrice = fieldSetFlags()[10] ? this.LimitPrice : (java.lang.Double) defaultValue(fields()[10]);
        record.VolumeTotalOriginal = fieldSetFlags()[11] ? this.VolumeTotalOriginal : (java.lang.Integer) defaultValue(fields()[11]);
        record.TimeCondition = fieldSetFlags()[12] ? this.TimeCondition : (java.lang.Integer) defaultValue(fields()[12]);
        record.GTDDate = fieldSetFlags()[13] ? this.GTDDate : (java.lang.String) defaultValue(fields()[13]);
        record.VolumeCondition = fieldSetFlags()[14] ? this.VolumeCondition : (java.lang.Integer) defaultValue(fields()[14]);
        record.MinVolume = fieldSetFlags()[15] ? this.MinVolume : (java.lang.Integer) defaultValue(fields()[15]);
        record.ContingentCondition = fieldSetFlags()[16] ? this.ContingentCondition : (java.lang.Integer) defaultValue(fields()[16]);
        record.StopPrice = fieldSetFlags()[17] ? this.StopPrice : (java.lang.Double) defaultValue(fields()[17]);
        record.ForceCloseReason = fieldSetFlags()[18] ? this.ForceCloseReason : (java.lang.Integer) defaultValue(fields()[18]);
        record.IsAutoSuspend = fieldSetFlags()[19] ? this.IsAutoSuspend : (java.lang.Integer) defaultValue(fields()[19]);
        record.BusinessUnit = fieldSetFlags()[20] ? this.BusinessUnit : (java.lang.String) defaultValue(fields()[20]);
        record.RequestID = fieldSetFlags()[21] ? this.RequestID : (java.lang.Integer) defaultValue(fields()[21]);
        record.OrderLocalID = fieldSetFlags()[22] ? this.OrderLocalID : (java.lang.String) defaultValue(fields()[22]);
        record.ExchangeID = fieldSetFlags()[23] ? this.ExchangeID : (java.lang.String) defaultValue(fields()[23]);
        record.ParticipantID = fieldSetFlags()[24] ? this.ParticipantID : (java.lang.String) defaultValue(fields()[24]);
        record.ClientID = fieldSetFlags()[25] ? this.ClientID : (java.lang.String) defaultValue(fields()[25]);
        record.ExchangeInstID = fieldSetFlags()[26] ? this.ExchangeInstID : (java.lang.String) defaultValue(fields()[26]);
        record.TraderID = fieldSetFlags()[27] ? this.TraderID : (java.lang.String) defaultValue(fields()[27]);
        record.InstallID = fieldSetFlags()[28] ? this.InstallID : (java.lang.Integer) defaultValue(fields()[28]);
        record.OrderSubmitStatus = fieldSetFlags()[29] ? this.OrderSubmitStatus : (java.lang.Integer) defaultValue(fields()[29]);
        record.NotifySequence = fieldSetFlags()[30] ? this.NotifySequence : (java.lang.Integer) defaultValue(fields()[30]);
        record.TradingDay = fieldSetFlags()[31] ? this.TradingDay : (java.lang.String) defaultValue(fields()[31]);
        record.SettlementID = fieldSetFlags()[32] ? this.SettlementID : (java.lang.Integer) defaultValue(fields()[32]);
        record.OrderSysID = fieldSetFlags()[33] ? this.OrderSysID : (java.lang.String) defaultValue(fields()[33]);
        record.OrderSource = fieldSetFlags()[34] ? this.OrderSource : (java.lang.Integer) defaultValue(fields()[34]);
        record.OrderStatus = fieldSetFlags()[35] ? this.OrderStatus : (java.lang.Integer) defaultValue(fields()[35]);
        record.OrderType = fieldSetFlags()[36] ? this.OrderType : (java.lang.Integer) defaultValue(fields()[36]);
        record.VolumeTraded = fieldSetFlags()[37] ? this.VolumeTraded : (java.lang.Integer) defaultValue(fields()[37]);
        record.VolumeTotal = fieldSetFlags()[38] ? this.VolumeTotal : (java.lang.Integer) defaultValue(fields()[38]);
        record.InsertDate = fieldSetFlags()[39] ? this.InsertDate : (java.lang.String) defaultValue(fields()[39]);
        record.InsertTime = fieldSetFlags()[40] ? this.InsertTime : (java.lang.String) defaultValue(fields()[40]);
        record.ActiveTime = fieldSetFlags()[41] ? this.ActiveTime : (java.lang.String) defaultValue(fields()[41]);
        record.SuspendTime = fieldSetFlags()[42] ? this.SuspendTime : (java.lang.String) defaultValue(fields()[42]);
        record.UpdateTime = fieldSetFlags()[43] ? this.UpdateTime : (java.lang.String) defaultValue(fields()[43]);
        record.CancelTime = fieldSetFlags()[44] ? this.CancelTime : (java.lang.String) defaultValue(fields()[44]);
        record.ActiveTraderID = fieldSetFlags()[45] ? this.ActiveTraderID : (java.lang.String) defaultValue(fields()[45]);
        record.ClearingPartID = fieldSetFlags()[46] ? this.ClearingPartID : (java.lang.String) defaultValue(fields()[46]);
        record.SequenceNo = fieldSetFlags()[47] ? this.SequenceNo : (java.lang.Integer) defaultValue(fields()[47]);
        record.FrontID = fieldSetFlags()[48] ? this.FrontID : (java.lang.Integer) defaultValue(fields()[48]);
        record.SessionID = fieldSetFlags()[49] ? this.SessionID : (java.lang.Integer) defaultValue(fields()[49]);
        record.UserProductInfo = fieldSetFlags()[50] ? this.UserProductInfo : (java.lang.String) defaultValue(fields()[50]);
        record.StatusMsg = fieldSetFlags()[51] ? this.StatusMsg : (java.lang.String) defaultValue(fields()[51]);
        record.UserForceClose = fieldSetFlags()[52] ? this.UserForceClose : (java.lang.Integer) defaultValue(fields()[52]);
        record.ActiveUserID = fieldSetFlags()[53] ? this.ActiveUserID : (java.lang.String) defaultValue(fields()[53]);
        record.BrokerOrderSeq = fieldSetFlags()[54] ? this.BrokerOrderSeq : (java.lang.Integer) defaultValue(fields()[54]);
        record.RelativeOrderSysID = fieldSetFlags()[55] ? this.RelativeOrderSysID : (java.lang.String) defaultValue(fields()[55]);
        record.ZCETotalTradedVolume = fieldSetFlags()[56] ? this.ZCETotalTradedVolume : (java.lang.Integer) defaultValue(fields()[56]);
        record.IsSwapOrder = fieldSetFlags()[57] ? this.IsSwapOrder : (java.lang.Integer) defaultValue(fields()[57]);
        record.BranchID = fieldSetFlags()[58] ? this.BranchID : (java.lang.String) defaultValue(fields()[58]);
        record.InvestUnitID = fieldSetFlags()[59] ? this.InvestUnitID : (java.lang.String) defaultValue(fields()[59]);
        record.AccountID = fieldSetFlags()[60] ? this.AccountID : (java.lang.String) defaultValue(fields()[60]);
        record.CurrencyID = fieldSetFlags()[61] ? this.CurrencyID : (java.lang.String) defaultValue(fields()[61]);
        record.IPAddress = fieldSetFlags()[62] ? this.IPAddress : (java.lang.String) defaultValue(fields()[62]);
        record.MacAddress = fieldSetFlags()[63] ? this.MacAddress : (java.lang.String) defaultValue(fields()[63]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FtdcOrder>
    WRITER$ = (org.apache.avro.io.DatumWriter<FtdcOrder>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FtdcOrder>
    READER$ = (org.apache.avro.io.DatumReader<FtdcOrder>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeBoolean(this.IsLast);

    out.writeString(this.BrokerID);

    out.writeString(this.InvestorID);

    out.writeString(this.InstrumentID);

    out.writeString(this.OrderRef);

    out.writeString(this.UserID);

    out.writeInt(this.OrderPriceType);

    out.writeInt(this.Direction);

    out.writeString(this.CombOffsetFlag);

    out.writeString(this.CombHedgeFlag);

    out.writeDouble(this.LimitPrice);

    out.writeInt(this.VolumeTotalOriginal);

    out.writeInt(this.TimeCondition);

    out.writeString(this.GTDDate);

    out.writeInt(this.VolumeCondition);

    out.writeInt(this.MinVolume);

    out.writeInt(this.ContingentCondition);

    out.writeDouble(this.StopPrice);

    out.writeInt(this.ForceCloseReason);

    out.writeInt(this.IsAutoSuspend);

    out.writeString(this.BusinessUnit);

    out.writeInt(this.RequestID);

    out.writeString(this.OrderLocalID);

    out.writeString(this.ExchangeID);

    out.writeString(this.ParticipantID);

    out.writeString(this.ClientID);

    out.writeString(this.ExchangeInstID);

    out.writeString(this.TraderID);

    out.writeInt(this.InstallID);

    out.writeInt(this.OrderSubmitStatus);

    out.writeInt(this.NotifySequence);

    out.writeString(this.TradingDay);

    out.writeInt(this.SettlementID);

    out.writeString(this.OrderSysID);

    out.writeInt(this.OrderSource);

    out.writeInt(this.OrderStatus);

    out.writeInt(this.OrderType);

    out.writeInt(this.VolumeTraded);

    out.writeInt(this.VolumeTotal);

    out.writeString(this.InsertDate);

    out.writeString(this.InsertTime);

    out.writeString(this.ActiveTime);

    out.writeString(this.SuspendTime);

    out.writeString(this.UpdateTime);

    out.writeString(this.CancelTime);

    out.writeString(this.ActiveTraderID);

    out.writeString(this.ClearingPartID);

    out.writeInt(this.SequenceNo);

    out.writeInt(this.FrontID);

    out.writeInt(this.SessionID);

    out.writeString(this.UserProductInfo);

    out.writeString(this.StatusMsg);

    out.writeInt(this.UserForceClose);

    out.writeString(this.ActiveUserID);

    out.writeInt(this.BrokerOrderSeq);

    out.writeString(this.RelativeOrderSysID);

    out.writeInt(this.ZCETotalTradedVolume);

    out.writeInt(this.IsSwapOrder);

    out.writeString(this.BranchID);

    out.writeString(this.InvestUnitID);

    out.writeString(this.AccountID);

    out.writeString(this.CurrencyID);

    out.writeString(this.IPAddress);

    out.writeString(this.MacAddress);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.IsLast = in.readBoolean();

      this.BrokerID = in.readString();

      this.InvestorID = in.readString();

      this.InstrumentID = in.readString();

      this.OrderRef = in.readString();

      this.UserID = in.readString();

      this.OrderPriceType = in.readInt();

      this.Direction = in.readInt();

      this.CombOffsetFlag = in.readString();

      this.CombHedgeFlag = in.readString();

      this.LimitPrice = in.readDouble();

      this.VolumeTotalOriginal = in.readInt();

      this.TimeCondition = in.readInt();

      this.GTDDate = in.readString();

      this.VolumeCondition = in.readInt();

      this.MinVolume = in.readInt();

      this.ContingentCondition = in.readInt();

      this.StopPrice = in.readDouble();

      this.ForceCloseReason = in.readInt();

      this.IsAutoSuspend = in.readInt();

      this.BusinessUnit = in.readString();

      this.RequestID = in.readInt();

      this.OrderLocalID = in.readString();

      this.ExchangeID = in.readString();

      this.ParticipantID = in.readString();

      this.ClientID = in.readString();

      this.ExchangeInstID = in.readString();

      this.TraderID = in.readString();

      this.InstallID = in.readInt();

      this.OrderSubmitStatus = in.readInt();

      this.NotifySequence = in.readInt();

      this.TradingDay = in.readString();

      this.SettlementID = in.readInt();

      this.OrderSysID = in.readString();

      this.OrderSource = in.readInt();

      this.OrderStatus = in.readInt();

      this.OrderType = in.readInt();

      this.VolumeTraded = in.readInt();

      this.VolumeTotal = in.readInt();

      this.InsertDate = in.readString();

      this.InsertTime = in.readString();

      this.ActiveTime = in.readString();

      this.SuspendTime = in.readString();

      this.UpdateTime = in.readString();

      this.CancelTime = in.readString();

      this.ActiveTraderID = in.readString();

      this.ClearingPartID = in.readString();

      this.SequenceNo = in.readInt();

      this.FrontID = in.readInt();

      this.SessionID = in.readInt();

      this.UserProductInfo = in.readString();

      this.StatusMsg = in.readString();

      this.UserForceClose = in.readInt();

      this.ActiveUserID = in.readString();

      this.BrokerOrderSeq = in.readInt();

      this.RelativeOrderSysID = in.readString();

      this.ZCETotalTradedVolume = in.readInt();

      this.IsSwapOrder = in.readInt();

      this.BranchID = in.readString();

      this.InvestUnitID = in.readString();

      this.AccountID = in.readString();

      this.CurrencyID = in.readString();

      this.IPAddress = in.readString();

      this.MacAddress = in.readString();

    } else {
      for (int i = 0; i < 64; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.IsLast = in.readBoolean();
          break;

        case 1:
          this.BrokerID = in.readString();
          break;

        case 2:
          this.InvestorID = in.readString();
          break;

        case 3:
          this.InstrumentID = in.readString();
          break;

        case 4:
          this.OrderRef = in.readString();
          break;

        case 5:
          this.UserID = in.readString();
          break;

        case 6:
          this.OrderPriceType = in.readInt();
          break;

        case 7:
          this.Direction = in.readInt();
          break;

        case 8:
          this.CombOffsetFlag = in.readString();
          break;

        case 9:
          this.CombHedgeFlag = in.readString();
          break;

        case 10:
          this.LimitPrice = in.readDouble();
          break;

        case 11:
          this.VolumeTotalOriginal = in.readInt();
          break;

        case 12:
          this.TimeCondition = in.readInt();
          break;

        case 13:
          this.GTDDate = in.readString();
          break;

        case 14:
          this.VolumeCondition = in.readInt();
          break;

        case 15:
          this.MinVolume = in.readInt();
          break;

        case 16:
          this.ContingentCondition = in.readInt();
          break;

        case 17:
          this.StopPrice = in.readDouble();
          break;

        case 18:
          this.ForceCloseReason = in.readInt();
          break;

        case 19:
          this.IsAutoSuspend = in.readInt();
          break;

        case 20:
          this.BusinessUnit = in.readString();
          break;

        case 21:
          this.RequestID = in.readInt();
          break;

        case 22:
          this.OrderLocalID = in.readString();
          break;

        case 23:
          this.ExchangeID = in.readString();
          break;

        case 24:
          this.ParticipantID = in.readString();
          break;

        case 25:
          this.ClientID = in.readString();
          break;

        case 26:
          this.ExchangeInstID = in.readString();
          break;

        case 27:
          this.TraderID = in.readString();
          break;

        case 28:
          this.InstallID = in.readInt();
          break;

        case 29:
          this.OrderSubmitStatus = in.readInt();
          break;

        case 30:
          this.NotifySequence = in.readInt();
          break;

        case 31:
          this.TradingDay = in.readString();
          break;

        case 32:
          this.SettlementID = in.readInt();
          break;

        case 33:
          this.OrderSysID = in.readString();
          break;

        case 34:
          this.OrderSource = in.readInt();
          break;

        case 35:
          this.OrderStatus = in.readInt();
          break;

        case 36:
          this.OrderType = in.readInt();
          break;

        case 37:
          this.VolumeTraded = in.readInt();
          break;

        case 38:
          this.VolumeTotal = in.readInt();
          break;

        case 39:
          this.InsertDate = in.readString();
          break;

        case 40:
          this.InsertTime = in.readString();
          break;

        case 41:
          this.ActiveTime = in.readString();
          break;

        case 42:
          this.SuspendTime = in.readString();
          break;

        case 43:
          this.UpdateTime = in.readString();
          break;

        case 44:
          this.CancelTime = in.readString();
          break;

        case 45:
          this.ActiveTraderID = in.readString();
          break;

        case 46:
          this.ClearingPartID = in.readString();
          break;

        case 47:
          this.SequenceNo = in.readInt();
          break;

        case 48:
          this.FrontID = in.readInt();
          break;

        case 49:
          this.SessionID = in.readInt();
          break;

        case 50:
          this.UserProductInfo = in.readString();
          break;

        case 51:
          this.StatusMsg = in.readString();
          break;

        case 52:
          this.UserForceClose = in.readInt();
          break;

        case 53:
          this.ActiveUserID = in.readString();
          break;

        case 54:
          this.BrokerOrderSeq = in.readInt();
          break;

        case 55:
          this.RelativeOrderSysID = in.readString();
          break;

        case 56:
          this.ZCETotalTradedVolume = in.readInt();
          break;

        case 57:
          this.IsSwapOrder = in.readInt();
          break;

        case 58:
          this.BranchID = in.readString();
          break;

        case 59:
          this.InvestUnitID = in.readString();
          break;

        case 60:
          this.AccountID = in.readString();
          break;

        case 61:
          this.CurrencyID = in.readString();
          break;

        case 62:
          this.IPAddress = in.readString();
          break;

        case 63:
          this.MacAddress = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










