/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.adaptor.ctp.serializable.avro.shared;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** 心跳超时警告 */
@org.apache.avro.specific.AvroGenerated
public class HeartBeatWarning extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 4012816081062950932L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"HeartBeatWarning\",\"namespace\":\"io.rapid.adaptor.ctp.serializable.avro.shared\",\"doc\":\"心跳超时警告\",\"fields\":[{\"name\":\"Source\",\"type\":{\"type\":\"enum\",\"name\":\"EventSource\",\"doc\":\"事件来源\",\"symbols\":[\"MD\",\"TD\"]},\"doc\":\"事件来源\"},{\"name\":\"BrokerID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪公司代码\"},{\"name\":\"UserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户代码\"},{\"name\":\"TimeLapse\",\"type\":\"int\",\"doc\":\"距离上次接收报文的时间\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<HeartBeatWarning> ENCODER =
      new BinaryMessageEncoder<HeartBeatWarning>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<HeartBeatWarning> DECODER =
      new BinaryMessageDecoder<HeartBeatWarning>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<HeartBeatWarning> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<HeartBeatWarning> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<HeartBeatWarning> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<HeartBeatWarning>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this HeartBeatWarning to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a HeartBeatWarning from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a HeartBeatWarning instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static HeartBeatWarning fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** 事件来源 */
  public io.rapid.adaptor.ctp.serializable.avro.shared.EventSource Source;
  /** 经纪公司代码 */
  public java.lang.String BrokerID;
  /** 用户代码 */
  public java.lang.String UserID;
  /** 距离上次接收报文的时间 */
  public int TimeLapse;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public HeartBeatWarning() {}

  /**
   * All-args constructor.
   * @param Source 事件来源
   * @param BrokerID 经纪公司代码
   * @param UserID 用户代码
   * @param TimeLapse 距离上次接收报文的时间
   */
  public HeartBeatWarning(io.rapid.adaptor.ctp.serializable.avro.shared.EventSource Source, java.lang.String BrokerID, java.lang.String UserID, java.lang.Integer TimeLapse) {
    this.Source = Source;
    this.BrokerID = BrokerID;
    this.UserID = UserID;
    this.TimeLapse = TimeLapse;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return Source;
    case 1: return BrokerID;
    case 2: return UserID;
    case 3: return TimeLapse;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: Source = (io.rapid.adaptor.ctp.serializable.avro.shared.EventSource)value$; break;
    case 1: BrokerID = value$ != null ? value$.toString() : null; break;
    case 2: UserID = value$ != null ? value$.toString() : null; break;
    case 3: TimeLapse = (java.lang.Integer)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'Source' field.
   * @return 事件来源
   */
  public io.rapid.adaptor.ctp.serializable.avro.shared.EventSource getSource() {
    return Source;
  }


  /**
   * Sets the value of the 'Source' field.
   * 事件来源
   * @param value the value to set.
   */
  public HeartBeatWarning setSource(io.rapid.adaptor.ctp.serializable.avro.shared.EventSource value) {
    this.Source = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerID' field.
   * @return 经纪公司代码
   */
  public java.lang.String getBrokerID() {
    return BrokerID;
  }


  /**
   * Sets the value of the 'BrokerID' field.
   * 经纪公司代码
   * @param value the value to set.
   */
  public HeartBeatWarning setBrokerID(java.lang.String value) {
    this.BrokerID = value;
    return this;
  }

  /**
   * Gets the value of the 'UserID' field.
   * @return 用户代码
   */
  public java.lang.String getUserID() {
    return UserID;
  }


  /**
   * Sets the value of the 'UserID' field.
   * 用户代码
   * @param value the value to set.
   */
  public HeartBeatWarning setUserID(java.lang.String value) {
    this.UserID = value;
    return this;
  }

  /**
   * Gets the value of the 'TimeLapse' field.
   * @return 距离上次接收报文的时间
   */
  public int getTimeLapse() {
    return TimeLapse;
  }


  /**
   * Sets the value of the 'TimeLapse' field.
   * 距离上次接收报文的时间
   * @param value the value to set.
   */
  public HeartBeatWarning setTimeLapse(int value) {
    this.TimeLapse = value;
    return this;
  }

  /**
   * Creates a new HeartBeatWarning RecordBuilder.
   * @return A new HeartBeatWarning RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder newBuilder() {
    return new io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder();
  }

  /**
   * Creates a new HeartBeatWarning RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new HeartBeatWarning RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder(other);
    }
  }

  /**
   * Creates a new HeartBeatWarning RecordBuilder by copying an existing HeartBeatWarning instance.
   * @param other The existing instance to copy.
   * @return A new HeartBeatWarning RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder(other);
    }
  }

  /**
   * RecordBuilder for HeartBeatWarning instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<HeartBeatWarning>
    implements org.apache.avro.data.RecordBuilder<HeartBeatWarning> {

    /** 事件来源 */
    private io.rapid.adaptor.ctp.serializable.avro.shared.EventSource Source;
    /** 经纪公司代码 */
    private java.lang.String BrokerID;
    /** 用户代码 */
    private java.lang.String UserID;
    /** 距离上次接收报文的时间 */
    private int TimeLapse;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.Source)) {
        this.Source = data().deepCopy(fields()[0].schema(), other.Source);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[1].schema(), other.BrokerID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.UserID)) {
        this.UserID = data().deepCopy(fields()[2].schema(), other.UserID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.TimeLapse)) {
        this.TimeLapse = data().deepCopy(fields()[3].schema(), other.TimeLapse);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
    }

    /**
     * Creates a Builder by copying an existing HeartBeatWarning instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.Source)) {
        this.Source = data().deepCopy(fields()[0].schema(), other.Source);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[1].schema(), other.BrokerID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.UserID)) {
        this.UserID = data().deepCopy(fields()[2].schema(), other.UserID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.TimeLapse)) {
        this.TimeLapse = data().deepCopy(fields()[3].schema(), other.TimeLapse);
        fieldSetFlags()[3] = true;
      }
    }

    /**
      * Gets the value of the 'Source' field.
      * 事件来源
      * @return The value.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.EventSource getSource() {
      return Source;
    }


    /**
      * Sets the value of the 'Source' field.
      * 事件来源
      * @param value The value of 'Source'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder setSource(io.rapid.adaptor.ctp.serializable.avro.shared.EventSource value) {
      validate(fields()[0], value);
      this.Source = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'Source' field has been set.
      * 事件来源
      * @return True if the 'Source' field has been set, false otherwise.
      */
    public boolean hasSource() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'Source' field.
      * 事件来源
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder clearSource() {
      Source = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return The value.
      */
    public java.lang.String getBrokerID() {
      return BrokerID;
    }


    /**
      * Sets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @param value The value of 'BrokerID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder setBrokerID(java.lang.String value) {
      validate(fields()[1], value);
      this.BrokerID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerID' field has been set.
      * 经纪公司代码
      * @return True if the 'BrokerID' field has been set, false otherwise.
      */
    public boolean hasBrokerID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder clearBrokerID() {
      BrokerID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserID' field.
      * 用户代码
      * @return The value.
      */
    public java.lang.String getUserID() {
      return UserID;
    }


    /**
      * Sets the value of the 'UserID' field.
      * 用户代码
      * @param value The value of 'UserID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder setUserID(java.lang.String value) {
      validate(fields()[2], value);
      this.UserID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'UserID' field has been set.
      * 用户代码
      * @return True if the 'UserID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'UserID' field.
      * 用户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder clearUserID() {
      UserID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'TimeLapse' field.
      * 距离上次接收报文的时间
      * @return The value.
      */
    public int getTimeLapse() {
      return TimeLapse;
    }


    /**
      * Sets the value of the 'TimeLapse' field.
      * 距离上次接收报文的时间
      * @param value The value of 'TimeLapse'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder setTimeLapse(int value) {
      validate(fields()[3], value);
      this.TimeLapse = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'TimeLapse' field has been set.
      * 距离上次接收报文的时间
      * @return True if the 'TimeLapse' field has been set, false otherwise.
      */
    public boolean hasTimeLapse() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'TimeLapse' field.
      * 距离上次接收报文的时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.shared.HeartBeatWarning.Builder clearTimeLapse() {
      fieldSetFlags()[3] = false;
      return this;
    }

    @Override
    public HeartBeatWarning build() {
      try {
        HeartBeatWarning record = new HeartBeatWarning();
        record.Source = fieldSetFlags()[0] ? this.Source : (io.rapid.adaptor.ctp.serializable.avro.shared.EventSource) defaultValue(fields()[0]);
        record.BrokerID = fieldSetFlags()[1] ? this.BrokerID : (java.lang.String) defaultValue(fields()[1]);
        record.UserID = fieldSetFlags()[2] ? this.UserID : (java.lang.String) defaultValue(fields()[2]);
        record.TimeLapse = fieldSetFlags()[3] ? this.TimeLapse : (java.lang.Integer) defaultValue(fields()[3]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<HeartBeatWarning>
    WRITER$ = (org.apache.avro.io.DatumWriter<HeartBeatWarning>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<HeartBeatWarning>
    READER$ = (org.apache.avro.io.DatumReader<HeartBeatWarning>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeEnum(this.Source.ordinal());

    out.writeString(this.BrokerID);

    out.writeString(this.UserID);

    out.writeInt(this.TimeLapse);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.Source = io.rapid.adaptor.ctp.serializable.avro.shared.EventSource.values()[in.readEnum()];

      this.BrokerID = in.readString();

      this.UserID = in.readString();

      this.TimeLapse = in.readInt();

    } else {
      for (int i = 0; i < 4; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.Source = io.rapid.adaptor.ctp.serializable.avro.shared.EventSource.values()[in.readEnum()];
          break;

        case 1:
          this.BrokerID = in.readString();
          break;

        case 2:
          this.UserID = in.readString();
          break;

        case 3:
          this.TimeLapse = in.readInt();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










