/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.adaptor.ctp.serializable.avro.trader;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** FtdcTrade */
@org.apache.avro.specific.AvroGenerated
public class FtdcTrade extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 3268214718340949827L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FtdcTrade\",\"namespace\":\"io.rapid.adaptor.ctp.serializable.avro.trader\",\"doc\":\"FtdcTrade\",\"fields\":[{\"name\":\"BrokerID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪公司代码\"},{\"name\":\"InvestorID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资者代码\"},{\"name\":\"InstrumentID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"合约代码\"},{\"name\":\"OrderRef\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单引用\"},{\"name\":\"UserID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"用户代码\"},{\"name\":\"ExchangeID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所代码\"},{\"name\":\"TradeID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"成交编号\"},{\"name\":\"Direction\",\"type\":\"int\",\"doc\":\"买卖方向\"},{\"name\":\"OrderSysID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"报单编号\"},{\"name\":\"ParticipantID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"会员代码\"},{\"name\":\"ClientID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"客户代码\"},{\"name\":\"TradingRole\",\"type\":\"int\",\"doc\":\"交易角色\"},{\"name\":\"ExchangeInstID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"合约在交易所的代码\"},{\"name\":\"OffsetFlag\",\"type\":\"int\",\"doc\":\"开平标志\"},{\"name\":\"HedgeFlag\",\"type\":\"int\",\"doc\":\"投机套保标志\"},{\"name\":\"Price\",\"type\":\"double\",\"doc\":\"价格\"},{\"name\":\"Volume\",\"type\":\"int\",\"doc\":\"数量\"},{\"name\":\"TradeDate\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"成交日期\"},{\"name\":\"TradeTime\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"成交时间\"},{\"name\":\"TradeType\",\"type\":\"int\",\"doc\":\"成交类型\"},{\"name\":\"PriceSource\",\"type\":\"int\",\"doc\":\"成交价来源\"},{\"name\":\"TraderID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易所交易员代码\"},{\"name\":\"OrderLocalID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"本地报单编号\"},{\"name\":\"ClearingPartID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"结算会员编号\"},{\"name\":\"BusinessUnit\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"业务单元\"},{\"name\":\"SequenceNo\",\"type\":\"int\",\"doc\":\"序号\"},{\"name\":\"TradingDay\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易日\"},{\"name\":\"SettlementID\",\"type\":\"int\",\"doc\":\"结算编号\"},{\"name\":\"BrokerOrderSeq\",\"type\":\"int\",\"doc\":\"经纪公司报单编号\"},{\"name\":\"TradeSource\",\"type\":\"int\",\"doc\":\"成交来源\"},{\"name\":\"InvestUnitID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资单元代码\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FtdcTrade> ENCODER =
      new BinaryMessageEncoder<FtdcTrade>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FtdcTrade> DECODER =
      new BinaryMessageDecoder<FtdcTrade>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FtdcTrade> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FtdcTrade> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FtdcTrade> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FtdcTrade>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FtdcTrade to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FtdcTrade from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FtdcTrade instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FtdcTrade fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** 经纪公司代码 */
  public java.lang.String BrokerID;
  /** 投资者代码 */
  public java.lang.String InvestorID;
  /** 合约代码 */
  public java.lang.String InstrumentID;
  /** 报单引用 */
  public java.lang.String OrderRef;
  /** 用户代码 */
  public java.lang.String UserID;
  /** 交易所代码 */
  public java.lang.String ExchangeID;
  /** 成交编号 */
  public java.lang.String TradeID;
  /** 买卖方向 */
  public int Direction;
  /** 报单编号 */
  public java.lang.String OrderSysID;
  /** 会员代码 */
  public java.lang.String ParticipantID;
  /** 客户代码 */
  public java.lang.String ClientID;
  /** 交易角色 */
  public int TradingRole;
  /** 合约在交易所的代码 */
  public java.lang.String ExchangeInstID;
  /** 开平标志 */
  public int OffsetFlag;
  /** 投机套保标志 */
  public int HedgeFlag;
  /** 价格 */
  public double Price;
  /** 数量 */
  public int Volume;
  /** 成交日期 */
  public java.lang.String TradeDate;
  /** 成交时间 */
  public java.lang.String TradeTime;
  /** 成交类型 */
  public int TradeType;
  /** 成交价来源 */
  public int PriceSource;
  /** 交易所交易员代码 */
  public java.lang.String TraderID;
  /** 本地报单编号 */
  public java.lang.String OrderLocalID;
  /** 结算会员编号 */
  public java.lang.String ClearingPartID;
  /** 业务单元 */
  public java.lang.String BusinessUnit;
  /** 序号 */
  public int SequenceNo;
  /** 交易日 */
  public java.lang.String TradingDay;
  /** 结算编号 */
  public int SettlementID;
  /** 经纪公司报单编号 */
  public int BrokerOrderSeq;
  /** 成交来源 */
  public int TradeSource;
  /** 投资单元代码 */
  public java.lang.String InvestUnitID;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FtdcTrade() {}

  /**
   * All-args constructor.
   * @param BrokerID 经纪公司代码
   * @param InvestorID 投资者代码
   * @param InstrumentID 合约代码
   * @param OrderRef 报单引用
   * @param UserID 用户代码
   * @param ExchangeID 交易所代码
   * @param TradeID 成交编号
   * @param Direction 买卖方向
   * @param OrderSysID 报单编号
   * @param ParticipantID 会员代码
   * @param ClientID 客户代码
   * @param TradingRole 交易角色
   * @param ExchangeInstID 合约在交易所的代码
   * @param OffsetFlag 开平标志
   * @param HedgeFlag 投机套保标志
   * @param Price 价格
   * @param Volume 数量
   * @param TradeDate 成交日期
   * @param TradeTime 成交时间
   * @param TradeType 成交类型
   * @param PriceSource 成交价来源
   * @param TraderID 交易所交易员代码
   * @param OrderLocalID 本地报单编号
   * @param ClearingPartID 结算会员编号
   * @param BusinessUnit 业务单元
   * @param SequenceNo 序号
   * @param TradingDay 交易日
   * @param SettlementID 结算编号
   * @param BrokerOrderSeq 经纪公司报单编号
   * @param TradeSource 成交来源
   * @param InvestUnitID 投资单元代码
   */
  public FtdcTrade(java.lang.String BrokerID, java.lang.String InvestorID, java.lang.String InstrumentID, java.lang.String OrderRef, java.lang.String UserID, java.lang.String ExchangeID, java.lang.String TradeID, java.lang.Integer Direction, java.lang.String OrderSysID, java.lang.String ParticipantID, java.lang.String ClientID, java.lang.Integer TradingRole, java.lang.String ExchangeInstID, java.lang.Integer OffsetFlag, java.lang.Integer HedgeFlag, java.lang.Double Price, java.lang.Integer Volume, java.lang.String TradeDate, java.lang.String TradeTime, java.lang.Integer TradeType, java.lang.Integer PriceSource, java.lang.String TraderID, java.lang.String OrderLocalID, java.lang.String ClearingPartID, java.lang.String BusinessUnit, java.lang.Integer SequenceNo, java.lang.String TradingDay, java.lang.Integer SettlementID, java.lang.Integer BrokerOrderSeq, java.lang.Integer TradeSource, java.lang.String InvestUnitID) {
    this.BrokerID = BrokerID;
    this.InvestorID = InvestorID;
    this.InstrumentID = InstrumentID;
    this.OrderRef = OrderRef;
    this.UserID = UserID;
    this.ExchangeID = ExchangeID;
    this.TradeID = TradeID;
    this.Direction = Direction;
    this.OrderSysID = OrderSysID;
    this.ParticipantID = ParticipantID;
    this.ClientID = ClientID;
    this.TradingRole = TradingRole;
    this.ExchangeInstID = ExchangeInstID;
    this.OffsetFlag = OffsetFlag;
    this.HedgeFlag = HedgeFlag;
    this.Price = Price;
    this.Volume = Volume;
    this.TradeDate = TradeDate;
    this.TradeTime = TradeTime;
    this.TradeType = TradeType;
    this.PriceSource = PriceSource;
    this.TraderID = TraderID;
    this.OrderLocalID = OrderLocalID;
    this.ClearingPartID = ClearingPartID;
    this.BusinessUnit = BusinessUnit;
    this.SequenceNo = SequenceNo;
    this.TradingDay = TradingDay;
    this.SettlementID = SettlementID;
    this.BrokerOrderSeq = BrokerOrderSeq;
    this.TradeSource = TradeSource;
    this.InvestUnitID = InvestUnitID;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return BrokerID;
    case 1: return InvestorID;
    case 2: return InstrumentID;
    case 3: return OrderRef;
    case 4: return UserID;
    case 5: return ExchangeID;
    case 6: return TradeID;
    case 7: return Direction;
    case 8: return OrderSysID;
    case 9: return ParticipantID;
    case 10: return ClientID;
    case 11: return TradingRole;
    case 12: return ExchangeInstID;
    case 13: return OffsetFlag;
    case 14: return HedgeFlag;
    case 15: return Price;
    case 16: return Volume;
    case 17: return TradeDate;
    case 18: return TradeTime;
    case 19: return TradeType;
    case 20: return PriceSource;
    case 21: return TraderID;
    case 22: return OrderLocalID;
    case 23: return ClearingPartID;
    case 24: return BusinessUnit;
    case 25: return SequenceNo;
    case 26: return TradingDay;
    case 27: return SettlementID;
    case 28: return BrokerOrderSeq;
    case 29: return TradeSource;
    case 30: return InvestUnitID;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: BrokerID = value$ != null ? value$.toString() : null; break;
    case 1: InvestorID = value$ != null ? value$.toString() : null; break;
    case 2: InstrumentID = value$ != null ? value$.toString() : null; break;
    case 3: OrderRef = value$ != null ? value$.toString() : null; break;
    case 4: UserID = value$ != null ? value$.toString() : null; break;
    case 5: ExchangeID = value$ != null ? value$.toString() : null; break;
    case 6: TradeID = value$ != null ? value$.toString() : null; break;
    case 7: Direction = (java.lang.Integer)value$; break;
    case 8: OrderSysID = value$ != null ? value$.toString() : null; break;
    case 9: ParticipantID = value$ != null ? value$.toString() : null; break;
    case 10: ClientID = value$ != null ? value$.toString() : null; break;
    case 11: TradingRole = (java.lang.Integer)value$; break;
    case 12: ExchangeInstID = value$ != null ? value$.toString() : null; break;
    case 13: OffsetFlag = (java.lang.Integer)value$; break;
    case 14: HedgeFlag = (java.lang.Integer)value$; break;
    case 15: Price = (java.lang.Double)value$; break;
    case 16: Volume = (java.lang.Integer)value$; break;
    case 17: TradeDate = value$ != null ? value$.toString() : null; break;
    case 18: TradeTime = value$ != null ? value$.toString() : null; break;
    case 19: TradeType = (java.lang.Integer)value$; break;
    case 20: PriceSource = (java.lang.Integer)value$; break;
    case 21: TraderID = value$ != null ? value$.toString() : null; break;
    case 22: OrderLocalID = value$ != null ? value$.toString() : null; break;
    case 23: ClearingPartID = value$ != null ? value$.toString() : null; break;
    case 24: BusinessUnit = value$ != null ? value$.toString() : null; break;
    case 25: SequenceNo = (java.lang.Integer)value$; break;
    case 26: TradingDay = value$ != null ? value$.toString() : null; break;
    case 27: SettlementID = (java.lang.Integer)value$; break;
    case 28: BrokerOrderSeq = (java.lang.Integer)value$; break;
    case 29: TradeSource = (java.lang.Integer)value$; break;
    case 30: InvestUnitID = value$ != null ? value$.toString() : null; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'BrokerID' field.
   * @return 经纪公司代码
   */
  public java.lang.String getBrokerID() {
    return BrokerID;
  }


  /**
   * Sets the value of the 'BrokerID' field.
   * 经纪公司代码
   * @param value the value to set.
   */
  public FtdcTrade setBrokerID(java.lang.String value) {
    this.BrokerID = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestorID' field.
   * @return 投资者代码
   */
  public java.lang.String getInvestorID() {
    return InvestorID;
  }


  /**
   * Sets the value of the 'InvestorID' field.
   * 投资者代码
   * @param value the value to set.
   */
  public FtdcTrade setInvestorID(java.lang.String value) {
    this.InvestorID = value;
    return this;
  }

  /**
   * Gets the value of the 'InstrumentID' field.
   * @return 合约代码
   */
  public java.lang.String getInstrumentID() {
    return InstrumentID;
  }


  /**
   * Sets the value of the 'InstrumentID' field.
   * 合约代码
   * @param value the value to set.
   */
  public FtdcTrade setInstrumentID(java.lang.String value) {
    this.InstrumentID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderRef' field.
   * @return 报单引用
   */
  public java.lang.String getOrderRef() {
    return OrderRef;
  }


  /**
   * Sets the value of the 'OrderRef' field.
   * 报单引用
   * @param value the value to set.
   */
  public FtdcTrade setOrderRef(java.lang.String value) {
    this.OrderRef = value;
    return this;
  }

  /**
   * Gets the value of the 'UserID' field.
   * @return 用户代码
   */
  public java.lang.String getUserID() {
    return UserID;
  }


  /**
   * Sets the value of the 'UserID' field.
   * 用户代码
   * @param value the value to set.
   */
  public FtdcTrade setUserID(java.lang.String value) {
    this.UserID = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeID' field.
   * @return 交易所代码
   */
  public java.lang.String getExchangeID() {
    return ExchangeID;
  }


  /**
   * Sets the value of the 'ExchangeID' field.
   * 交易所代码
   * @param value the value to set.
   */
  public FtdcTrade setExchangeID(java.lang.String value) {
    this.ExchangeID = value;
    return this;
  }

  /**
   * Gets the value of the 'TradeID' field.
   * @return 成交编号
   */
  public java.lang.String getTradeID() {
    return TradeID;
  }


  /**
   * Sets the value of the 'TradeID' field.
   * 成交编号
   * @param value the value to set.
   */
  public FtdcTrade setTradeID(java.lang.String value) {
    this.TradeID = value;
    return this;
  }

  /**
   * Gets the value of the 'Direction' field.
   * @return 买卖方向
   */
  public int getDirection() {
    return Direction;
  }


  /**
   * Sets the value of the 'Direction' field.
   * 买卖方向
   * @param value the value to set.
   */
  public FtdcTrade setDirection(int value) {
    this.Direction = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderSysID' field.
   * @return 报单编号
   */
  public java.lang.String getOrderSysID() {
    return OrderSysID;
  }


  /**
   * Sets the value of the 'OrderSysID' field.
   * 报单编号
   * @param value the value to set.
   */
  public FtdcTrade setOrderSysID(java.lang.String value) {
    this.OrderSysID = value;
    return this;
  }

  /**
   * Gets the value of the 'ParticipantID' field.
   * @return 会员代码
   */
  public java.lang.String getParticipantID() {
    return ParticipantID;
  }


  /**
   * Sets the value of the 'ParticipantID' field.
   * 会员代码
   * @param value the value to set.
   */
  public FtdcTrade setParticipantID(java.lang.String value) {
    this.ParticipantID = value;
    return this;
  }

  /**
   * Gets the value of the 'ClientID' field.
   * @return 客户代码
   */
  public java.lang.String getClientID() {
    return ClientID;
  }


  /**
   * Sets the value of the 'ClientID' field.
   * 客户代码
   * @param value the value to set.
   */
  public FtdcTrade setClientID(java.lang.String value) {
    this.ClientID = value;
    return this;
  }

  /**
   * Gets the value of the 'TradingRole' field.
   * @return 交易角色
   */
  public int getTradingRole() {
    return TradingRole;
  }


  /**
   * Sets the value of the 'TradingRole' field.
   * 交易角色
   * @param value the value to set.
   */
  public FtdcTrade setTradingRole(int value) {
    this.TradingRole = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeInstID' field.
   * @return 合约在交易所的代码
   */
  public java.lang.String getExchangeInstID() {
    return ExchangeInstID;
  }


  /**
   * Sets the value of the 'ExchangeInstID' field.
   * 合约在交易所的代码
   * @param value the value to set.
   */
  public FtdcTrade setExchangeInstID(java.lang.String value) {
    this.ExchangeInstID = value;
    return this;
  }

  /**
   * Gets the value of the 'OffsetFlag' field.
   * @return 开平标志
   */
  public int getOffsetFlag() {
    return OffsetFlag;
  }


  /**
   * Sets the value of the 'OffsetFlag' field.
   * 开平标志
   * @param value the value to set.
   */
  public FtdcTrade setOffsetFlag(int value) {
    this.OffsetFlag = value;
    return this;
  }

  /**
   * Gets the value of the 'HedgeFlag' field.
   * @return 投机套保标志
   */
  public int getHedgeFlag() {
    return HedgeFlag;
  }


  /**
   * Sets the value of the 'HedgeFlag' field.
   * 投机套保标志
   * @param value the value to set.
   */
  public FtdcTrade setHedgeFlag(int value) {
    this.HedgeFlag = value;
    return this;
  }

  /**
   * Gets the value of the 'Price' field.
   * @return 价格
   */
  public double getPrice() {
    return Price;
  }


  /**
   * Sets the value of the 'Price' field.
   * 价格
   * @param value the value to set.
   */
  public FtdcTrade setPrice(double value) {
    this.Price = value;
    return this;
  }

  /**
   * Gets the value of the 'Volume' field.
   * @return 数量
   */
  public int getVolume() {
    return Volume;
  }


  /**
   * Sets the value of the 'Volume' field.
   * 数量
   * @param value the value to set.
   */
  public FtdcTrade setVolume(int value) {
    this.Volume = value;
    return this;
  }

  /**
   * Gets the value of the 'TradeDate' field.
   * @return 成交日期
   */
  public java.lang.String getTradeDate() {
    return TradeDate;
  }


  /**
   * Sets the value of the 'TradeDate' field.
   * 成交日期
   * @param value the value to set.
   */
  public FtdcTrade setTradeDate(java.lang.String value) {
    this.TradeDate = value;
    return this;
  }

  /**
   * Gets the value of the 'TradeTime' field.
   * @return 成交时间
   */
  public java.lang.String getTradeTime() {
    return TradeTime;
  }


  /**
   * Sets the value of the 'TradeTime' field.
   * 成交时间
   * @param value the value to set.
   */
  public FtdcTrade setTradeTime(java.lang.String value) {
    this.TradeTime = value;
    return this;
  }

  /**
   * Gets the value of the 'TradeType' field.
   * @return 成交类型
   */
  public int getTradeType() {
    return TradeType;
  }


  /**
   * Sets the value of the 'TradeType' field.
   * 成交类型
   * @param value the value to set.
   */
  public FtdcTrade setTradeType(int value) {
    this.TradeType = value;
    return this;
  }

  /**
   * Gets the value of the 'PriceSource' field.
   * @return 成交价来源
   */
  public int getPriceSource() {
    return PriceSource;
  }


  /**
   * Sets the value of the 'PriceSource' field.
   * 成交价来源
   * @param value the value to set.
   */
  public FtdcTrade setPriceSource(int value) {
    this.PriceSource = value;
    return this;
  }

  /**
   * Gets the value of the 'TraderID' field.
   * @return 交易所交易员代码
   */
  public java.lang.String getTraderID() {
    return TraderID;
  }


  /**
   * Sets the value of the 'TraderID' field.
   * 交易所交易员代码
   * @param value the value to set.
   */
  public FtdcTrade setTraderID(java.lang.String value) {
    this.TraderID = value;
    return this;
  }

  /**
   * Gets the value of the 'OrderLocalID' field.
   * @return 本地报单编号
   */
  public java.lang.String getOrderLocalID() {
    return OrderLocalID;
  }


  /**
   * Sets the value of the 'OrderLocalID' field.
   * 本地报单编号
   * @param value the value to set.
   */
  public FtdcTrade setOrderLocalID(java.lang.String value) {
    this.OrderLocalID = value;
    return this;
  }

  /**
   * Gets the value of the 'ClearingPartID' field.
   * @return 结算会员编号
   */
  public java.lang.String getClearingPartID() {
    return ClearingPartID;
  }


  /**
   * Sets the value of the 'ClearingPartID' field.
   * 结算会员编号
   * @param value the value to set.
   */
  public FtdcTrade setClearingPartID(java.lang.String value) {
    this.ClearingPartID = value;
    return this;
  }

  /**
   * Gets the value of the 'BusinessUnit' field.
   * @return 业务单元
   */
  public java.lang.String getBusinessUnit() {
    return BusinessUnit;
  }


  /**
   * Sets the value of the 'BusinessUnit' field.
   * 业务单元
   * @param value the value to set.
   */
  public FtdcTrade setBusinessUnit(java.lang.String value) {
    this.BusinessUnit = value;
    return this;
  }

  /**
   * Gets the value of the 'SequenceNo' field.
   * @return 序号
   */
  public int getSequenceNo() {
    return SequenceNo;
  }


  /**
   * Sets the value of the 'SequenceNo' field.
   * 序号
   * @param value the value to set.
   */
  public FtdcTrade setSequenceNo(int value) {
    this.SequenceNo = value;
    return this;
  }

  /**
   * Gets the value of the 'TradingDay' field.
   * @return 交易日
   */
  public java.lang.String getTradingDay() {
    return TradingDay;
  }


  /**
   * Sets the value of the 'TradingDay' field.
   * 交易日
   * @param value the value to set.
   */
  public FtdcTrade setTradingDay(java.lang.String value) {
    this.TradingDay = value;
    return this;
  }

  /**
   * Gets the value of the 'SettlementID' field.
   * @return 结算编号
   */
  public int getSettlementID() {
    return SettlementID;
  }


  /**
   * Sets the value of the 'SettlementID' field.
   * 结算编号
   * @param value the value to set.
   */
  public FtdcTrade setSettlementID(int value) {
    this.SettlementID = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerOrderSeq' field.
   * @return 经纪公司报单编号
   */
  public int getBrokerOrderSeq() {
    return BrokerOrderSeq;
  }


  /**
   * Sets the value of the 'BrokerOrderSeq' field.
   * 经纪公司报单编号
   * @param value the value to set.
   */
  public FtdcTrade setBrokerOrderSeq(int value) {
    this.BrokerOrderSeq = value;
    return this;
  }

  /**
   * Gets the value of the 'TradeSource' field.
   * @return 成交来源
   */
  public int getTradeSource() {
    return TradeSource;
  }


  /**
   * Sets the value of the 'TradeSource' field.
   * 成交来源
   * @param value the value to set.
   */
  public FtdcTrade setTradeSource(int value) {
    this.TradeSource = value;
    return this;
  }

  /**
   * Gets the value of the 'InvestUnitID' field.
   * @return 投资单元代码
   */
  public java.lang.String getInvestUnitID() {
    return InvestUnitID;
  }


  /**
   * Sets the value of the 'InvestUnitID' field.
   * 投资单元代码
   * @param value the value to set.
   */
  public FtdcTrade setInvestUnitID(java.lang.String value) {
    this.InvestUnitID = value;
    return this;
  }

  /**
   * Creates a new FtdcTrade RecordBuilder.
   * @return A new FtdcTrade RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder newBuilder() {
    return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder();
  }

  /**
   * Creates a new FtdcTrade RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FtdcTrade RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder(other);
    }
  }

  /**
   * Creates a new FtdcTrade RecordBuilder by copying an existing FtdcTrade instance.
   * @param other The existing instance to copy.
   * @return A new FtdcTrade RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder(other);
    }
  }

  /**
   * RecordBuilder for FtdcTrade instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FtdcTrade>
    implements org.apache.avro.data.RecordBuilder<FtdcTrade> {

    /** 经纪公司代码 */
    private java.lang.String BrokerID;
    /** 投资者代码 */
    private java.lang.String InvestorID;
    /** 合约代码 */
    private java.lang.String InstrumentID;
    /** 报单引用 */
    private java.lang.String OrderRef;
    /** 用户代码 */
    private java.lang.String UserID;
    /** 交易所代码 */
    private java.lang.String ExchangeID;
    /** 成交编号 */
    private java.lang.String TradeID;
    /** 买卖方向 */
    private int Direction;
    /** 报单编号 */
    private java.lang.String OrderSysID;
    /** 会员代码 */
    private java.lang.String ParticipantID;
    /** 客户代码 */
    private java.lang.String ClientID;
    /** 交易角色 */
    private int TradingRole;
    /** 合约在交易所的代码 */
    private java.lang.String ExchangeInstID;
    /** 开平标志 */
    private int OffsetFlag;
    /** 投机套保标志 */
    private int HedgeFlag;
    /** 价格 */
    private double Price;
    /** 数量 */
    private int Volume;
    /** 成交日期 */
    private java.lang.String TradeDate;
    /** 成交时间 */
    private java.lang.String TradeTime;
    /** 成交类型 */
    private int TradeType;
    /** 成交价来源 */
    private int PriceSource;
    /** 交易所交易员代码 */
    private java.lang.String TraderID;
    /** 本地报单编号 */
    private java.lang.String OrderLocalID;
    /** 结算会员编号 */
    private java.lang.String ClearingPartID;
    /** 业务单元 */
    private java.lang.String BusinessUnit;
    /** 序号 */
    private int SequenceNo;
    /** 交易日 */
    private java.lang.String TradingDay;
    /** 结算编号 */
    private int SettlementID;
    /** 经纪公司报单编号 */
    private int BrokerOrderSeq;
    /** 成交来源 */
    private int TradeSource;
    /** 投资单元代码 */
    private java.lang.String InvestUnitID;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[0].schema(), other.BrokerID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[1].schema(), other.InvestorID);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[2].schema(), other.InstrumentID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[3].schema(), other.OrderRef);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.UserID)) {
        this.UserID = data().deepCopy(fields()[4].schema(), other.UserID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[5].schema(), other.ExchangeID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.TradeID)) {
        this.TradeID = data().deepCopy(fields()[6].schema(), other.TradeID);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.Direction)) {
        this.Direction = data().deepCopy(fields()[7].schema(), other.Direction);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[8].schema(), other.OrderSysID);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.ParticipantID)) {
        this.ParticipantID = data().deepCopy(fields()[9].schema(), other.ParticipantID);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.ClientID)) {
        this.ClientID = data().deepCopy(fields()[10].schema(), other.ClientID);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.TradingRole)) {
        this.TradingRole = data().deepCopy(fields()[11].schema(), other.TradingRole);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.ExchangeInstID)) {
        this.ExchangeInstID = data().deepCopy(fields()[12].schema(), other.ExchangeInstID);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.OffsetFlag)) {
        this.OffsetFlag = data().deepCopy(fields()[13].schema(), other.OffsetFlag);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.HedgeFlag)) {
        this.HedgeFlag = data().deepCopy(fields()[14].schema(), other.HedgeFlag);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.Price)) {
        this.Price = data().deepCopy(fields()[15].schema(), other.Price);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.Volume)) {
        this.Volume = data().deepCopy(fields()[16].schema(), other.Volume);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.TradeDate)) {
        this.TradeDate = data().deepCopy(fields()[17].schema(), other.TradeDate);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.TradeTime)) {
        this.TradeTime = data().deepCopy(fields()[18].schema(), other.TradeTime);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.TradeType)) {
        this.TradeType = data().deepCopy(fields()[19].schema(), other.TradeType);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.PriceSource)) {
        this.PriceSource = data().deepCopy(fields()[20].schema(), other.PriceSource);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.TraderID)) {
        this.TraderID = data().deepCopy(fields()[21].schema(), other.TraderID);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.OrderLocalID)) {
        this.OrderLocalID = data().deepCopy(fields()[22].schema(), other.OrderLocalID);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.ClearingPartID)) {
        this.ClearingPartID = data().deepCopy(fields()[23].schema(), other.ClearingPartID);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.BusinessUnit)) {
        this.BusinessUnit = data().deepCopy(fields()[24].schema(), other.BusinessUnit);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.SequenceNo)) {
        this.SequenceNo = data().deepCopy(fields()[25].schema(), other.SequenceNo);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[26].schema(), other.TradingDay);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[27].schema(), other.SettlementID);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.BrokerOrderSeq)) {
        this.BrokerOrderSeq = data().deepCopy(fields()[28].schema(), other.BrokerOrderSeq);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.TradeSource)) {
        this.TradeSource = data().deepCopy(fields()[29].schema(), other.TradeSource);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[30].schema(), other.InvestUnitID);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
    }

    /**
     * Creates a Builder by copying an existing FtdcTrade instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[0].schema(), other.BrokerID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.InvestorID)) {
        this.InvestorID = data().deepCopy(fields()[1].schema(), other.InvestorID);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.InstrumentID)) {
        this.InstrumentID = data().deepCopy(fields()[2].schema(), other.InstrumentID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.OrderRef)) {
        this.OrderRef = data().deepCopy(fields()[3].schema(), other.OrderRef);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.UserID)) {
        this.UserID = data().deepCopy(fields()[4].schema(), other.UserID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.ExchangeID)) {
        this.ExchangeID = data().deepCopy(fields()[5].schema(), other.ExchangeID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.TradeID)) {
        this.TradeID = data().deepCopy(fields()[6].schema(), other.TradeID);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.Direction)) {
        this.Direction = data().deepCopy(fields()[7].schema(), other.Direction);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.OrderSysID)) {
        this.OrderSysID = data().deepCopy(fields()[8].schema(), other.OrderSysID);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.ParticipantID)) {
        this.ParticipantID = data().deepCopy(fields()[9].schema(), other.ParticipantID);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.ClientID)) {
        this.ClientID = data().deepCopy(fields()[10].schema(), other.ClientID);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.TradingRole)) {
        this.TradingRole = data().deepCopy(fields()[11].schema(), other.TradingRole);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.ExchangeInstID)) {
        this.ExchangeInstID = data().deepCopy(fields()[12].schema(), other.ExchangeInstID);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.OffsetFlag)) {
        this.OffsetFlag = data().deepCopy(fields()[13].schema(), other.OffsetFlag);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.HedgeFlag)) {
        this.HedgeFlag = data().deepCopy(fields()[14].schema(), other.HedgeFlag);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.Price)) {
        this.Price = data().deepCopy(fields()[15].schema(), other.Price);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.Volume)) {
        this.Volume = data().deepCopy(fields()[16].schema(), other.Volume);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.TradeDate)) {
        this.TradeDate = data().deepCopy(fields()[17].schema(), other.TradeDate);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.TradeTime)) {
        this.TradeTime = data().deepCopy(fields()[18].schema(), other.TradeTime);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.TradeType)) {
        this.TradeType = data().deepCopy(fields()[19].schema(), other.TradeType);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.PriceSource)) {
        this.PriceSource = data().deepCopy(fields()[20].schema(), other.PriceSource);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.TraderID)) {
        this.TraderID = data().deepCopy(fields()[21].schema(), other.TraderID);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.OrderLocalID)) {
        this.OrderLocalID = data().deepCopy(fields()[22].schema(), other.OrderLocalID);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.ClearingPartID)) {
        this.ClearingPartID = data().deepCopy(fields()[23].schema(), other.ClearingPartID);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.BusinessUnit)) {
        this.BusinessUnit = data().deepCopy(fields()[24].schema(), other.BusinessUnit);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.SequenceNo)) {
        this.SequenceNo = data().deepCopy(fields()[25].schema(), other.SequenceNo);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[26].schema(), other.TradingDay);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[27].schema(), other.SettlementID);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.BrokerOrderSeq)) {
        this.BrokerOrderSeq = data().deepCopy(fields()[28].schema(), other.BrokerOrderSeq);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.TradeSource)) {
        this.TradeSource = data().deepCopy(fields()[29].schema(), other.TradeSource);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.InvestUnitID)) {
        this.InvestUnitID = data().deepCopy(fields()[30].schema(), other.InvestUnitID);
        fieldSetFlags()[30] = true;
      }
    }

    /**
      * Gets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return The value.
      */
    public java.lang.String getBrokerID() {
      return BrokerID;
    }


    /**
      * Sets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @param value The value of 'BrokerID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setBrokerID(java.lang.String value) {
      validate(fields()[0], value);
      this.BrokerID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerID' field has been set.
      * 经纪公司代码
      * @return True if the 'BrokerID' field has been set, false otherwise.
      */
    public boolean hasBrokerID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearBrokerID() {
      BrokerID = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestorID' field.
      * 投资者代码
      * @return The value.
      */
    public java.lang.String getInvestorID() {
      return InvestorID;
    }


    /**
      * Sets the value of the 'InvestorID' field.
      * 投资者代码
      * @param value The value of 'InvestorID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setInvestorID(java.lang.String value) {
      validate(fields()[1], value);
      this.InvestorID = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestorID' field has been set.
      * 投资者代码
      * @return True if the 'InvestorID' field has been set, false otherwise.
      */
    public boolean hasInvestorID() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'InvestorID' field.
      * 投资者代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearInvestorID() {
      InvestorID = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'InstrumentID' field.
      * 合约代码
      * @return The value.
      */
    public java.lang.String getInstrumentID() {
      return InstrumentID;
    }


    /**
      * Sets the value of the 'InstrumentID' field.
      * 合约代码
      * @param value The value of 'InstrumentID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setInstrumentID(java.lang.String value) {
      validate(fields()[2], value);
      this.InstrumentID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'InstrumentID' field has been set.
      * 合约代码
      * @return True if the 'InstrumentID' field has been set, false otherwise.
      */
    public boolean hasInstrumentID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'InstrumentID' field.
      * 合约代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearInstrumentID() {
      InstrumentID = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderRef' field.
      * 报单引用
      * @return The value.
      */
    public java.lang.String getOrderRef() {
      return OrderRef;
    }


    /**
      * Sets the value of the 'OrderRef' field.
      * 报单引用
      * @param value The value of 'OrderRef'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setOrderRef(java.lang.String value) {
      validate(fields()[3], value);
      this.OrderRef = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderRef' field has been set.
      * 报单引用
      * @return True if the 'OrderRef' field has been set, false otherwise.
      */
    public boolean hasOrderRef() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'OrderRef' field.
      * 报单引用
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearOrderRef() {
      OrderRef = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'UserID' field.
      * 用户代码
      * @return The value.
      */
    public java.lang.String getUserID() {
      return UserID;
    }


    /**
      * Sets the value of the 'UserID' field.
      * 用户代码
      * @param value The value of 'UserID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setUserID(java.lang.String value) {
      validate(fields()[4], value);
      this.UserID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'UserID' field has been set.
      * 用户代码
      * @return True if the 'UserID' field has been set, false otherwise.
      */
    public boolean hasUserID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'UserID' field.
      * 用户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearUserID() {
      UserID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeID' field.
      * 交易所代码
      * @return The value.
      */
    public java.lang.String getExchangeID() {
      return ExchangeID;
    }


    /**
      * Sets the value of the 'ExchangeID' field.
      * 交易所代码
      * @param value The value of 'ExchangeID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setExchangeID(java.lang.String value) {
      validate(fields()[5], value);
      this.ExchangeID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeID' field has been set.
      * 交易所代码
      * @return True if the 'ExchangeID' field has been set, false otherwise.
      */
    public boolean hasExchangeID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'ExchangeID' field.
      * 交易所代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearExchangeID() {
      ExchangeID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeID' field.
      * 成交编号
      * @return The value.
      */
    public java.lang.String getTradeID() {
      return TradeID;
    }


    /**
      * Sets the value of the 'TradeID' field.
      * 成交编号
      * @param value The value of 'TradeID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradeID(java.lang.String value) {
      validate(fields()[6], value);
      this.TradeID = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeID' field has been set.
      * 成交编号
      * @return True if the 'TradeID' field has been set, false otherwise.
      */
    public boolean hasTradeID() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'TradeID' field.
      * 成交编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradeID() {
      TradeID = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'Direction' field.
      * 买卖方向
      * @return The value.
      */
    public int getDirection() {
      return Direction;
    }


    /**
      * Sets the value of the 'Direction' field.
      * 买卖方向
      * @param value The value of 'Direction'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setDirection(int value) {
      validate(fields()[7], value);
      this.Direction = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'Direction' field has been set.
      * 买卖方向
      * @return True if the 'Direction' field has been set, false otherwise.
      */
    public boolean hasDirection() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'Direction' field.
      * 买卖方向
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearDirection() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderSysID' field.
      * 报单编号
      * @return The value.
      */
    public java.lang.String getOrderSysID() {
      return OrderSysID;
    }


    /**
      * Sets the value of the 'OrderSysID' field.
      * 报单编号
      * @param value The value of 'OrderSysID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setOrderSysID(java.lang.String value) {
      validate(fields()[8], value);
      this.OrderSysID = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderSysID' field has been set.
      * 报单编号
      * @return True if the 'OrderSysID' field has been set, false otherwise.
      */
    public boolean hasOrderSysID() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'OrderSysID' field.
      * 报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearOrderSysID() {
      OrderSysID = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'ParticipantID' field.
      * 会员代码
      * @return The value.
      */
    public java.lang.String getParticipantID() {
      return ParticipantID;
    }


    /**
      * Sets the value of the 'ParticipantID' field.
      * 会员代码
      * @param value The value of 'ParticipantID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setParticipantID(java.lang.String value) {
      validate(fields()[9], value);
      this.ParticipantID = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'ParticipantID' field has been set.
      * 会员代码
      * @return True if the 'ParticipantID' field has been set, false otherwise.
      */
    public boolean hasParticipantID() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'ParticipantID' field.
      * 会员代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearParticipantID() {
      ParticipantID = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClientID' field.
      * 客户代码
      * @return The value.
      */
    public java.lang.String getClientID() {
      return ClientID;
    }


    /**
      * Sets the value of the 'ClientID' field.
      * 客户代码
      * @param value The value of 'ClientID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setClientID(java.lang.String value) {
      validate(fields()[10], value);
      this.ClientID = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'ClientID' field has been set.
      * 客户代码
      * @return True if the 'ClientID' field has been set, false otherwise.
      */
    public boolean hasClientID() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'ClientID' field.
      * 客户代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearClientID() {
      ClientID = null;
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradingRole' field.
      * 交易角色
      * @return The value.
      */
    public int getTradingRole() {
      return TradingRole;
    }


    /**
      * Sets the value of the 'TradingRole' field.
      * 交易角色
      * @param value The value of 'TradingRole'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradingRole(int value) {
      validate(fields()[11], value);
      this.TradingRole = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'TradingRole' field has been set.
      * 交易角色
      * @return True if the 'TradingRole' field has been set, false otherwise.
      */
    public boolean hasTradingRole() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'TradingRole' field.
      * 交易角色
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradingRole() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @return The value.
      */
    public java.lang.String getExchangeInstID() {
      return ExchangeInstID;
    }


    /**
      * Sets the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @param value The value of 'ExchangeInstID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setExchangeInstID(java.lang.String value) {
      validate(fields()[12], value);
      this.ExchangeInstID = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeInstID' field has been set.
      * 合约在交易所的代码
      * @return True if the 'ExchangeInstID' field has been set, false otherwise.
      */
    public boolean hasExchangeInstID() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'ExchangeInstID' field.
      * 合约在交易所的代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearExchangeInstID() {
      ExchangeInstID = null;
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'OffsetFlag' field.
      * 开平标志
      * @return The value.
      */
    public int getOffsetFlag() {
      return OffsetFlag;
    }


    /**
      * Sets the value of the 'OffsetFlag' field.
      * 开平标志
      * @param value The value of 'OffsetFlag'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setOffsetFlag(int value) {
      validate(fields()[13], value);
      this.OffsetFlag = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'OffsetFlag' field has been set.
      * 开平标志
      * @return True if the 'OffsetFlag' field has been set, false otherwise.
      */
    public boolean hasOffsetFlag() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'OffsetFlag' field.
      * 开平标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearOffsetFlag() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'HedgeFlag' field.
      * 投机套保标志
      * @return The value.
      */
    public int getHedgeFlag() {
      return HedgeFlag;
    }


    /**
      * Sets the value of the 'HedgeFlag' field.
      * 投机套保标志
      * @param value The value of 'HedgeFlag'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setHedgeFlag(int value) {
      validate(fields()[14], value);
      this.HedgeFlag = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'HedgeFlag' field has been set.
      * 投机套保标志
      * @return True if the 'HedgeFlag' field has been set, false otherwise.
      */
    public boolean hasHedgeFlag() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'HedgeFlag' field.
      * 投机套保标志
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearHedgeFlag() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'Price' field.
      * 价格
      * @return The value.
      */
    public double getPrice() {
      return Price;
    }


    /**
      * Sets the value of the 'Price' field.
      * 价格
      * @param value The value of 'Price'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setPrice(double value) {
      validate(fields()[15], value);
      this.Price = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'Price' field has been set.
      * 价格
      * @return True if the 'Price' field has been set, false otherwise.
      */
    public boolean hasPrice() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'Price' field.
      * 价格
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearPrice() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'Volume' field.
      * 数量
      * @return The value.
      */
    public int getVolume() {
      return Volume;
    }


    /**
      * Sets the value of the 'Volume' field.
      * 数量
      * @param value The value of 'Volume'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setVolume(int value) {
      validate(fields()[16], value);
      this.Volume = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'Volume' field has been set.
      * 数量
      * @return True if the 'Volume' field has been set, false otherwise.
      */
    public boolean hasVolume() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'Volume' field.
      * 数量
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearVolume() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeDate' field.
      * 成交日期
      * @return The value.
      */
    public java.lang.String getTradeDate() {
      return TradeDate;
    }


    /**
      * Sets the value of the 'TradeDate' field.
      * 成交日期
      * @param value The value of 'TradeDate'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradeDate(java.lang.String value) {
      validate(fields()[17], value);
      this.TradeDate = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeDate' field has been set.
      * 成交日期
      * @return True if the 'TradeDate' field has been set, false otherwise.
      */
    public boolean hasTradeDate() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'TradeDate' field.
      * 成交日期
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradeDate() {
      TradeDate = null;
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeTime' field.
      * 成交时间
      * @return The value.
      */
    public java.lang.String getTradeTime() {
      return TradeTime;
    }


    /**
      * Sets the value of the 'TradeTime' field.
      * 成交时间
      * @param value The value of 'TradeTime'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradeTime(java.lang.String value) {
      validate(fields()[18], value);
      this.TradeTime = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeTime' field has been set.
      * 成交时间
      * @return True if the 'TradeTime' field has been set, false otherwise.
      */
    public boolean hasTradeTime() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'TradeTime' field.
      * 成交时间
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradeTime() {
      TradeTime = null;
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeType' field.
      * 成交类型
      * @return The value.
      */
    public int getTradeType() {
      return TradeType;
    }


    /**
      * Sets the value of the 'TradeType' field.
      * 成交类型
      * @param value The value of 'TradeType'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradeType(int value) {
      validate(fields()[19], value);
      this.TradeType = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeType' field has been set.
      * 成交类型
      * @return True if the 'TradeType' field has been set, false otherwise.
      */
    public boolean hasTradeType() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'TradeType' field.
      * 成交类型
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradeType() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'PriceSource' field.
      * 成交价来源
      * @return The value.
      */
    public int getPriceSource() {
      return PriceSource;
    }


    /**
      * Sets the value of the 'PriceSource' field.
      * 成交价来源
      * @param value The value of 'PriceSource'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setPriceSource(int value) {
      validate(fields()[20], value);
      this.PriceSource = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'PriceSource' field has been set.
      * 成交价来源
      * @return True if the 'PriceSource' field has been set, false otherwise.
      */
    public boolean hasPriceSource() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'PriceSource' field.
      * 成交价来源
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearPriceSource() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'TraderID' field.
      * 交易所交易员代码
      * @return The value.
      */
    public java.lang.String getTraderID() {
      return TraderID;
    }


    /**
      * Sets the value of the 'TraderID' field.
      * 交易所交易员代码
      * @param value The value of 'TraderID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTraderID(java.lang.String value) {
      validate(fields()[21], value);
      this.TraderID = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'TraderID' field has been set.
      * 交易所交易员代码
      * @return True if the 'TraderID' field has been set, false otherwise.
      */
    public boolean hasTraderID() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'TraderID' field.
      * 交易所交易员代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTraderID() {
      TraderID = null;
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @return The value.
      */
    public java.lang.String getOrderLocalID() {
      return OrderLocalID;
    }


    /**
      * Sets the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @param value The value of 'OrderLocalID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setOrderLocalID(java.lang.String value) {
      validate(fields()[22], value);
      this.OrderLocalID = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'OrderLocalID' field has been set.
      * 本地报单编号
      * @return True if the 'OrderLocalID' field has been set, false otherwise.
      */
    public boolean hasOrderLocalID() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'OrderLocalID' field.
      * 本地报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearOrderLocalID() {
      OrderLocalID = null;
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @return The value.
      */
    public java.lang.String getClearingPartID() {
      return ClearingPartID;
    }


    /**
      * Sets the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @param value The value of 'ClearingPartID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setClearingPartID(java.lang.String value) {
      validate(fields()[23], value);
      this.ClearingPartID = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'ClearingPartID' field has been set.
      * 结算会员编号
      * @return True if the 'ClearingPartID' field has been set, false otherwise.
      */
    public boolean hasClearingPartID() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'ClearingPartID' field.
      * 结算会员编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearClearingPartID() {
      ClearingPartID = null;
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'BusinessUnit' field.
      * 业务单元
      * @return The value.
      */
    public java.lang.String getBusinessUnit() {
      return BusinessUnit;
    }


    /**
      * Sets the value of the 'BusinessUnit' field.
      * 业务单元
      * @param value The value of 'BusinessUnit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setBusinessUnit(java.lang.String value) {
      validate(fields()[24], value);
      this.BusinessUnit = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'BusinessUnit' field has been set.
      * 业务单元
      * @return True if the 'BusinessUnit' field has been set, false otherwise.
      */
    public boolean hasBusinessUnit() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'BusinessUnit' field.
      * 业务单元
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearBusinessUnit() {
      BusinessUnit = null;
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'SequenceNo' field.
      * 序号
      * @return The value.
      */
    public int getSequenceNo() {
      return SequenceNo;
    }


    /**
      * Sets the value of the 'SequenceNo' field.
      * 序号
      * @param value The value of 'SequenceNo'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setSequenceNo(int value) {
      validate(fields()[25], value);
      this.SequenceNo = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'SequenceNo' field has been set.
      * 序号
      * @return True if the 'SequenceNo' field has been set, false otherwise.
      */
    public boolean hasSequenceNo() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'SequenceNo' field.
      * 序号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearSequenceNo() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradingDay' field.
      * 交易日
      * @return The value.
      */
    public java.lang.String getTradingDay() {
      return TradingDay;
    }


    /**
      * Sets the value of the 'TradingDay' field.
      * 交易日
      * @param value The value of 'TradingDay'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradingDay(java.lang.String value) {
      validate(fields()[26], value);
      this.TradingDay = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'TradingDay' field has been set.
      * 交易日
      * @return True if the 'TradingDay' field has been set, false otherwise.
      */
    public boolean hasTradingDay() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'TradingDay' field.
      * 交易日
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradingDay() {
      TradingDay = null;
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'SettlementID' field.
      * 结算编号
      * @return The value.
      */
    public int getSettlementID() {
      return SettlementID;
    }


    /**
      * Sets the value of the 'SettlementID' field.
      * 结算编号
      * @param value The value of 'SettlementID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setSettlementID(int value) {
      validate(fields()[27], value);
      this.SettlementID = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'SettlementID' field has been set.
      * 结算编号
      * @return True if the 'SettlementID' field has been set, false otherwise.
      */
    public boolean hasSettlementID() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'SettlementID' field.
      * 结算编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearSettlementID() {
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @return The value.
      */
    public int getBrokerOrderSeq() {
      return BrokerOrderSeq;
    }


    /**
      * Sets the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @param value The value of 'BrokerOrderSeq'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setBrokerOrderSeq(int value) {
      validate(fields()[28], value);
      this.BrokerOrderSeq = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerOrderSeq' field has been set.
      * 经纪公司报单编号
      * @return True if the 'BrokerOrderSeq' field has been set, false otherwise.
      */
    public boolean hasBrokerOrderSeq() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'BrokerOrderSeq' field.
      * 经纪公司报单编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearBrokerOrderSeq() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradeSource' field.
      * 成交来源
      * @return The value.
      */
    public int getTradeSource() {
      return TradeSource;
    }


    /**
      * Sets the value of the 'TradeSource' field.
      * 成交来源
      * @param value The value of 'TradeSource'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setTradeSource(int value) {
      validate(fields()[29], value);
      this.TradeSource = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'TradeSource' field has been set.
      * 成交来源
      * @return True if the 'TradeSource' field has been set, false otherwise.
      */
    public boolean hasTradeSource() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'TradeSource' field.
      * 成交来源
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearTradeSource() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return The value.
      */
    public java.lang.String getInvestUnitID() {
      return InvestUnitID;
    }


    /**
      * Sets the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @param value The value of 'InvestUnitID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder setInvestUnitID(java.lang.String value) {
      validate(fields()[30], value);
      this.InvestUnitID = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'InvestUnitID' field has been set.
      * 投资单元代码
      * @return True if the 'InvestUnitID' field has been set, false otherwise.
      */
    public boolean hasInvestUnitID() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'InvestUnitID' field.
      * 投资单元代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTrade.Builder clearInvestUnitID() {
      InvestUnitID = null;
      fieldSetFlags()[30] = false;
      return this;
    }

    @Override
    public FtdcTrade build() {
      try {
        FtdcTrade record = new FtdcTrade();
        record.BrokerID = fieldSetFlags()[0] ? this.BrokerID : (java.lang.String) defaultValue(fields()[0]);
        record.InvestorID = fieldSetFlags()[1] ? this.InvestorID : (java.lang.String) defaultValue(fields()[1]);
        record.InstrumentID = fieldSetFlags()[2] ? this.InstrumentID : (java.lang.String) defaultValue(fields()[2]);
        record.OrderRef = fieldSetFlags()[3] ? this.OrderRef : (java.lang.String) defaultValue(fields()[3]);
        record.UserID = fieldSetFlags()[4] ? this.UserID : (java.lang.String) defaultValue(fields()[4]);
        record.ExchangeID = fieldSetFlags()[5] ? this.ExchangeID : (java.lang.String) defaultValue(fields()[5]);
        record.TradeID = fieldSetFlags()[6] ? this.TradeID : (java.lang.String) defaultValue(fields()[6]);
        record.Direction = fieldSetFlags()[7] ? this.Direction : (java.lang.Integer) defaultValue(fields()[7]);
        record.OrderSysID = fieldSetFlags()[8] ? this.OrderSysID : (java.lang.String) defaultValue(fields()[8]);
        record.ParticipantID = fieldSetFlags()[9] ? this.ParticipantID : (java.lang.String) defaultValue(fields()[9]);
        record.ClientID = fieldSetFlags()[10] ? this.ClientID : (java.lang.String) defaultValue(fields()[10]);
        record.TradingRole = fieldSetFlags()[11] ? this.TradingRole : (java.lang.Integer) defaultValue(fields()[11]);
        record.ExchangeInstID = fieldSetFlags()[12] ? this.ExchangeInstID : (java.lang.String) defaultValue(fields()[12]);
        record.OffsetFlag = fieldSetFlags()[13] ? this.OffsetFlag : (java.lang.Integer) defaultValue(fields()[13]);
        record.HedgeFlag = fieldSetFlags()[14] ? this.HedgeFlag : (java.lang.Integer) defaultValue(fields()[14]);
        record.Price = fieldSetFlags()[15] ? this.Price : (java.lang.Double) defaultValue(fields()[15]);
        record.Volume = fieldSetFlags()[16] ? this.Volume : (java.lang.Integer) defaultValue(fields()[16]);
        record.TradeDate = fieldSetFlags()[17] ? this.TradeDate : (java.lang.String) defaultValue(fields()[17]);
        record.TradeTime = fieldSetFlags()[18] ? this.TradeTime : (java.lang.String) defaultValue(fields()[18]);
        record.TradeType = fieldSetFlags()[19] ? this.TradeType : (java.lang.Integer) defaultValue(fields()[19]);
        record.PriceSource = fieldSetFlags()[20] ? this.PriceSource : (java.lang.Integer) defaultValue(fields()[20]);
        record.TraderID = fieldSetFlags()[21] ? this.TraderID : (java.lang.String) defaultValue(fields()[21]);
        record.OrderLocalID = fieldSetFlags()[22] ? this.OrderLocalID : (java.lang.String) defaultValue(fields()[22]);
        record.ClearingPartID = fieldSetFlags()[23] ? this.ClearingPartID : (java.lang.String) defaultValue(fields()[23]);
        record.BusinessUnit = fieldSetFlags()[24] ? this.BusinessUnit : (java.lang.String) defaultValue(fields()[24]);
        record.SequenceNo = fieldSetFlags()[25] ? this.SequenceNo : (java.lang.Integer) defaultValue(fields()[25]);
        record.TradingDay = fieldSetFlags()[26] ? this.TradingDay : (java.lang.String) defaultValue(fields()[26]);
        record.SettlementID = fieldSetFlags()[27] ? this.SettlementID : (java.lang.Integer) defaultValue(fields()[27]);
        record.BrokerOrderSeq = fieldSetFlags()[28] ? this.BrokerOrderSeq : (java.lang.Integer) defaultValue(fields()[28]);
        record.TradeSource = fieldSetFlags()[29] ? this.TradeSource : (java.lang.Integer) defaultValue(fields()[29]);
        record.InvestUnitID = fieldSetFlags()[30] ? this.InvestUnitID : (java.lang.String) defaultValue(fields()[30]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FtdcTrade>
    WRITER$ = (org.apache.avro.io.DatumWriter<FtdcTrade>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FtdcTrade>
    READER$ = (org.apache.avro.io.DatumReader<FtdcTrade>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeString(this.BrokerID);

    out.writeString(this.InvestorID);

    out.writeString(this.InstrumentID);

    out.writeString(this.OrderRef);

    out.writeString(this.UserID);

    out.writeString(this.ExchangeID);

    out.writeString(this.TradeID);

    out.writeInt(this.Direction);

    out.writeString(this.OrderSysID);

    out.writeString(this.ParticipantID);

    out.writeString(this.ClientID);

    out.writeInt(this.TradingRole);

    out.writeString(this.ExchangeInstID);

    out.writeInt(this.OffsetFlag);

    out.writeInt(this.HedgeFlag);

    out.writeDouble(this.Price);

    out.writeInt(this.Volume);

    out.writeString(this.TradeDate);

    out.writeString(this.TradeTime);

    out.writeInt(this.TradeType);

    out.writeInt(this.PriceSource);

    out.writeString(this.TraderID);

    out.writeString(this.OrderLocalID);

    out.writeString(this.ClearingPartID);

    out.writeString(this.BusinessUnit);

    out.writeInt(this.SequenceNo);

    out.writeString(this.TradingDay);

    out.writeInt(this.SettlementID);

    out.writeInt(this.BrokerOrderSeq);

    out.writeInt(this.TradeSource);

    out.writeString(this.InvestUnitID);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.BrokerID = in.readString();

      this.InvestorID = in.readString();

      this.InstrumentID = in.readString();

      this.OrderRef = in.readString();

      this.UserID = in.readString();

      this.ExchangeID = in.readString();

      this.TradeID = in.readString();

      this.Direction = in.readInt();

      this.OrderSysID = in.readString();

      this.ParticipantID = in.readString();

      this.ClientID = in.readString();

      this.TradingRole = in.readInt();

      this.ExchangeInstID = in.readString();

      this.OffsetFlag = in.readInt();

      this.HedgeFlag = in.readInt();

      this.Price = in.readDouble();

      this.Volume = in.readInt();

      this.TradeDate = in.readString();

      this.TradeTime = in.readString();

      this.TradeType = in.readInt();

      this.PriceSource = in.readInt();

      this.TraderID = in.readString();

      this.OrderLocalID = in.readString();

      this.ClearingPartID = in.readString();

      this.BusinessUnit = in.readString();

      this.SequenceNo = in.readInt();

      this.TradingDay = in.readString();

      this.SettlementID = in.readInt();

      this.BrokerOrderSeq = in.readInt();

      this.TradeSource = in.readInt();

      this.InvestUnitID = in.readString();

    } else {
      for (int i = 0; i < 31; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.BrokerID = in.readString();
          break;

        case 1:
          this.InvestorID = in.readString();
          break;

        case 2:
          this.InstrumentID = in.readString();
          break;

        case 3:
          this.OrderRef = in.readString();
          break;

        case 4:
          this.UserID = in.readString();
          break;

        case 5:
          this.ExchangeID = in.readString();
          break;

        case 6:
          this.TradeID = in.readString();
          break;

        case 7:
          this.Direction = in.readInt();
          break;

        case 8:
          this.OrderSysID = in.readString();
          break;

        case 9:
          this.ParticipantID = in.readString();
          break;

        case 10:
          this.ClientID = in.readString();
          break;

        case 11:
          this.TradingRole = in.readInt();
          break;

        case 12:
          this.ExchangeInstID = in.readString();
          break;

        case 13:
          this.OffsetFlag = in.readInt();
          break;

        case 14:
          this.HedgeFlag = in.readInt();
          break;

        case 15:
          this.Price = in.readDouble();
          break;

        case 16:
          this.Volume = in.readInt();
          break;

        case 17:
          this.TradeDate = in.readString();
          break;

        case 18:
          this.TradeTime = in.readString();
          break;

        case 19:
          this.TradeType = in.readInt();
          break;

        case 20:
          this.PriceSource = in.readInt();
          break;

        case 21:
          this.TraderID = in.readString();
          break;

        case 22:
          this.OrderLocalID = in.readString();
          break;

        case 23:
          this.ClearingPartID = in.readString();
          break;

        case 24:
          this.BusinessUnit = in.readString();
          break;

        case 25:
          this.SequenceNo = in.readInt();
          break;

        case 26:
          this.TradingDay = in.readString();
          break;

        case 27:
          this.SettlementID = in.readInt();
          break;

        case 28:
          this.BrokerOrderSeq = in.readInt();
          break;

        case 29:
          this.TradeSource = in.readInt();
          break;

        case 30:
          this.InvestUnitID = in.readString();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










