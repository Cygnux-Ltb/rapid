/**
 * Autogenerated by Avro
 *
 * DO NOT EDIT DIRECTLY
 */
package io.rapid.adaptor.ctp.serializable.avro.trader;

import org.apache.avro.specific.SpecificData;
import org.apache.avro.message.BinaryMessageEncoder;
import org.apache.avro.message.BinaryMessageDecoder;
import org.apache.avro.message.SchemaStore;

/** FtdcTradingAccount */
@org.apache.avro.specific.AvroGenerated
public class FtdcTradingAccount extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  private static final long serialVersionUID = 6112134415838992563L;


  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"FtdcTradingAccount\",\"namespace\":\"io.rapid.adaptor.ctp.serializable.avro.trader\",\"doc\":\"FtdcTradingAccount\",\"fields\":[{\"name\":\"ErrorID\",\"type\":\"int\",\"doc\":\"FTDC响应信息 - 错误代码\"},{\"name\":\"ErrorMsg\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"FTDC响应信息 - 错误信息\"},{\"name\":\"RequestID\",\"type\":\"int\",\"doc\":\"请求ID\"},{\"name\":\"IsLast\",\"type\":\"boolean\",\"doc\":\"是否最后一条信息\"},{\"name\":\"BrokerID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"经纪公司代码\"},{\"name\":\"AccountID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"投资者账号\"},{\"name\":\"PreMortgage\",\"type\":\"double\",\"doc\":\"上次质押金额\"},{\"name\":\"PreCredit\",\"type\":\"double\",\"doc\":\"上次信用额度\"},{\"name\":\"PreDeposit\",\"type\":\"double\",\"doc\":\"上次存款额\"},{\"name\":\"PreBalance\",\"type\":\"double\",\"doc\":\"上次结算准备金\"},{\"name\":\"PreMargin\",\"type\":\"double\",\"doc\":\"上次占用的保证金\"},{\"name\":\"InterestBase\",\"type\":\"double\",\"doc\":\"利息基数\"},{\"name\":\"Interest\",\"type\":\"double\",\"doc\":\"利息收入\"},{\"name\":\"Deposit\",\"type\":\"double\",\"doc\":\"入金金额\"},{\"name\":\"Withdraw\",\"type\":\"double\",\"doc\":\"出金金额\"},{\"name\":\"FrozenMargin\",\"type\":\"double\",\"doc\":\"冻结的保证金\"},{\"name\":\"FrozenCash\",\"type\":\"double\",\"doc\":\"冻结的资金\"},{\"name\":\"FrozenCommission\",\"type\":\"double\",\"doc\":\"冻结的手续费\"},{\"name\":\"CurrMargin\",\"type\":\"double\",\"doc\":\"当前保证金总额\"},{\"name\":\"CashIn\",\"type\":\"double\",\"doc\":\"资金差额\"},{\"name\":\"Commission\",\"type\":\"double\",\"doc\":\"手续费\"},{\"name\":\"CloseProfit\",\"type\":\"double\",\"doc\":\"平仓盈亏\"},{\"name\":\"PositionProfit\",\"type\":\"double\",\"doc\":\"持仓盈亏\"},{\"name\":\"Balance\",\"type\":\"double\",\"doc\":\"期货结算准备金\"},{\"name\":\"Available\",\"type\":\"double\",\"doc\":\"可用资金\"},{\"name\":\"WithdrawQuota\",\"type\":\"double\",\"doc\":\"可取资金\"},{\"name\":\"Reserve\",\"type\":\"double\",\"doc\":\"基本准备金\"},{\"name\":\"TradingDay\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"交易日\"},{\"name\":\"SettlementID\",\"type\":\"int\",\"doc\":\"结算编号\"},{\"name\":\"Credit\",\"type\":\"double\",\"doc\":\"信用额度\"},{\"name\":\"Mortgage\",\"type\":\"double\",\"doc\":\"质押金额\"},{\"name\":\"ExchangeMargin\",\"type\":\"double\",\"doc\":\"交易所保证金\"},{\"name\":\"DeliveryMargin\",\"type\":\"double\",\"doc\":\"投资者交割保证金\"},{\"name\":\"ExchangeDeliveryMargin\",\"type\":\"double\",\"doc\":\"交易所交割保证金\"},{\"name\":\"ReserveBalance\",\"type\":\"double\",\"doc\":\"保底期货结算准备金\"},{\"name\":\"CurrencyID\",\"type\":{\"type\":\"string\",\"avro.java.string\":\"String\"},\"doc\":\"币种代码\"},{\"name\":\"PreFundMortgageIn\",\"type\":\"double\",\"doc\":\"上次货币质入金额\"},{\"name\":\"PreFundMortgageOut\",\"type\":\"double\",\"doc\":\"上次货币质出金额\"},{\"name\":\"FundMortgageIn\",\"type\":\"double\",\"doc\":\"货币质入金额\"},{\"name\":\"FundMortgageOut\",\"type\":\"double\",\"doc\":\"货币质出金额\"},{\"name\":\"FundMortgageAvailable\",\"type\":\"double\",\"doc\":\"货币质押余额\"},{\"name\":\"MortgageableFund\",\"type\":\"double\",\"doc\":\"可质押货币金额\"},{\"name\":\"SpecProductMargin\",\"type\":\"double\",\"doc\":\"特殊产品占用保证金\"},{\"name\":\"SpecProductFrozenMargin\",\"type\":\"double\",\"doc\":\"特殊产品冻结保证金\"},{\"name\":\"SpecProductCommission\",\"type\":\"double\",\"doc\":\"特殊产品手续费\"},{\"name\":\"SpecProductFrozenCommission\",\"type\":\"double\",\"doc\":\"特殊产品冻结手续费\"},{\"name\":\"SpecProductPositionProfit\",\"type\":\"double\",\"doc\":\"特殊产品持仓盈亏\"},{\"name\":\"SpecProductCloseProfit\",\"type\":\"double\",\"doc\":\"特殊产品平仓盈亏\"},{\"name\":\"SpecProductPositionProfitByAlg\",\"type\":\"double\",\"doc\":\"根据持仓盈亏算法计算的特殊产品持仓盈亏\"},{\"name\":\"SpecProductExchangeMargin\",\"type\":\"double\",\"doc\":\"特殊产品交易所保证金\"},{\"name\":\"BizType\",\"type\":\"int\",\"doc\":\"业务类型\"},{\"name\":\"FrozenSwap\",\"type\":\"double\",\"doc\":\"延时换汇冻结金额\"},{\"name\":\"RemainSwap\",\"type\":\"double\",\"doc\":\"剩余换汇额度\"}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }

  private static final SpecificData MODEL$ = new SpecificData();

  private static final BinaryMessageEncoder<FtdcTradingAccount> ENCODER =
      new BinaryMessageEncoder<FtdcTradingAccount>(MODEL$, SCHEMA$);

  private static final BinaryMessageDecoder<FtdcTradingAccount> DECODER =
      new BinaryMessageDecoder<FtdcTradingAccount>(MODEL$, SCHEMA$);

  /**
   * Return the BinaryMessageEncoder instance used by this class.
   * @return the message encoder used by this class
   */
  public static BinaryMessageEncoder<FtdcTradingAccount> getEncoder() {
    return ENCODER;
  }

  /**
   * Return the BinaryMessageDecoder instance used by this class.
   * @return the message decoder used by this class
   */
  public static BinaryMessageDecoder<FtdcTradingAccount> getDecoder() {
    return DECODER;
  }

  /**
   * Create a new BinaryMessageDecoder instance for this class that uses the specified {@link SchemaStore}.
   * @param resolver a {@link SchemaStore} used to find schemas by fingerprint
   * @return a BinaryMessageDecoder instance for this class backed by the given SchemaStore
   */
  public static BinaryMessageDecoder<FtdcTradingAccount> createDecoder(SchemaStore resolver) {
    return new BinaryMessageDecoder<FtdcTradingAccount>(MODEL$, SCHEMA$, resolver);
  }

  /**
   * Serializes this FtdcTradingAccount to a ByteBuffer.
   * @return a buffer holding the serialized data for this instance
   * @throws java.io.IOException if this instance could not be serialized
   */
  public java.nio.ByteBuffer toByteBuffer() throws java.io.IOException {
    return ENCODER.encode(this);
  }

  /**
   * Deserializes a FtdcTradingAccount from a ByteBuffer.
   * @param b a byte buffer holding serialized data for an instance of this class
   * @return a FtdcTradingAccount instance decoded from the given buffer
   * @throws java.io.IOException if the given bytes could not be deserialized into an instance of this class
   */
  public static FtdcTradingAccount fromByteBuffer(
      java.nio.ByteBuffer b) throws java.io.IOException {
    return DECODER.decode(b);
  }

  /** FTDC响应信息 - 错误代码 */
  public int ErrorID;
  /** FTDC响应信息 - 错误信息 */
  public java.lang.String ErrorMsg;
  /** 请求ID */
  public int RequestID;
  /** 是否最后一条信息 */
  public boolean IsLast;
  /** 经纪公司代码 */
  public java.lang.String BrokerID;
  /** 投资者账号 */
  public java.lang.String AccountID;
  /** 上次质押金额 */
  public double PreMortgage;
  /** 上次信用额度 */
  public double PreCredit;
  /** 上次存款额 */
  public double PreDeposit;
  /** 上次结算准备金 */
  public double PreBalance;
  /** 上次占用的保证金 */
  public double PreMargin;
  /** 利息基数 */
  public double InterestBase;
  /** 利息收入 */
  public double Interest;
  /** 入金金额 */
  public double Deposit;
  /** 出金金额 */
  public double Withdraw;
  /** 冻结的保证金 */
  public double FrozenMargin;
  /** 冻结的资金 */
  public double FrozenCash;
  /** 冻结的手续费 */
  public double FrozenCommission;
  /** 当前保证金总额 */
  public double CurrMargin;
  /** 资金差额 */
  public double CashIn;
  /** 手续费 */
  public double Commission;
  /** 平仓盈亏 */
  public double CloseProfit;
  /** 持仓盈亏 */
  public double PositionProfit;
  /** 期货结算准备金 */
  public double Balance;
  /** 可用资金 */
  public double Available;
  /** 可取资金 */
  public double WithdrawQuota;
  /** 基本准备金 */
  public double Reserve;
  /** 交易日 */
  public java.lang.String TradingDay;
  /** 结算编号 */
  public int SettlementID;
  /** 信用额度 */
  public double Credit;
  /** 质押金额 */
  public double Mortgage;
  /** 交易所保证金 */
  public double ExchangeMargin;
  /** 投资者交割保证金 */
  public double DeliveryMargin;
  /** 交易所交割保证金 */
  public double ExchangeDeliveryMargin;
  /** 保底期货结算准备金 */
  public double ReserveBalance;
  /** 币种代码 */
  public java.lang.String CurrencyID;
  /** 上次货币质入金额 */
  public double PreFundMortgageIn;
  /** 上次货币质出金额 */
  public double PreFundMortgageOut;
  /** 货币质入金额 */
  public double FundMortgageIn;
  /** 货币质出金额 */
  public double FundMortgageOut;
  /** 货币质押余额 */
  public double FundMortgageAvailable;
  /** 可质押货币金额 */
  public double MortgageableFund;
  /** 特殊产品占用保证金 */
  public double SpecProductMargin;
  /** 特殊产品冻结保证金 */
  public double SpecProductFrozenMargin;
  /** 特殊产品手续费 */
  public double SpecProductCommission;
  /** 特殊产品冻结手续费 */
  public double SpecProductFrozenCommission;
  /** 特殊产品持仓盈亏 */
  public double SpecProductPositionProfit;
  /** 特殊产品平仓盈亏 */
  public double SpecProductCloseProfit;
  /** 根据持仓盈亏算法计算的特殊产品持仓盈亏 */
  public double SpecProductPositionProfitByAlg;
  /** 特殊产品交易所保证金 */
  public double SpecProductExchangeMargin;
  /** 业务类型 */
  public int BizType;
  /** 延时换汇冻结金额 */
  public double FrozenSwap;
  /** 剩余换汇额度 */
  public double RemainSwap;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>.
   */
  public FtdcTradingAccount() {}

  /**
   * All-args constructor.
   * @param ErrorID FTDC响应信息 - 错误代码
   * @param ErrorMsg FTDC响应信息 - 错误信息
   * @param RequestID 请求ID
   * @param IsLast 是否最后一条信息
   * @param BrokerID 经纪公司代码
   * @param AccountID 投资者账号
   * @param PreMortgage 上次质押金额
   * @param PreCredit 上次信用额度
   * @param PreDeposit 上次存款额
   * @param PreBalance 上次结算准备金
   * @param PreMargin 上次占用的保证金
   * @param InterestBase 利息基数
   * @param Interest 利息收入
   * @param Deposit 入金金额
   * @param Withdraw 出金金额
   * @param FrozenMargin 冻结的保证金
   * @param FrozenCash 冻结的资金
   * @param FrozenCommission 冻结的手续费
   * @param CurrMargin 当前保证金总额
   * @param CashIn 资金差额
   * @param Commission 手续费
   * @param CloseProfit 平仓盈亏
   * @param PositionProfit 持仓盈亏
   * @param Balance 期货结算准备金
   * @param Available 可用资金
   * @param WithdrawQuota 可取资金
   * @param Reserve 基本准备金
   * @param TradingDay 交易日
   * @param SettlementID 结算编号
   * @param Credit 信用额度
   * @param Mortgage 质押金额
   * @param ExchangeMargin 交易所保证金
   * @param DeliveryMargin 投资者交割保证金
   * @param ExchangeDeliveryMargin 交易所交割保证金
   * @param ReserveBalance 保底期货结算准备金
   * @param CurrencyID 币种代码
   * @param PreFundMortgageIn 上次货币质入金额
   * @param PreFundMortgageOut 上次货币质出金额
   * @param FundMortgageIn 货币质入金额
   * @param FundMortgageOut 货币质出金额
   * @param FundMortgageAvailable 货币质押余额
   * @param MortgageableFund 可质押货币金额
   * @param SpecProductMargin 特殊产品占用保证金
   * @param SpecProductFrozenMargin 特殊产品冻结保证金
   * @param SpecProductCommission 特殊产品手续费
   * @param SpecProductFrozenCommission 特殊产品冻结手续费
   * @param SpecProductPositionProfit 特殊产品持仓盈亏
   * @param SpecProductCloseProfit 特殊产品平仓盈亏
   * @param SpecProductPositionProfitByAlg 根据持仓盈亏算法计算的特殊产品持仓盈亏
   * @param SpecProductExchangeMargin 特殊产品交易所保证金
   * @param BizType 业务类型
   * @param FrozenSwap 延时换汇冻结金额
   * @param RemainSwap 剩余换汇额度
   */
  public FtdcTradingAccount(java.lang.Integer ErrorID, java.lang.String ErrorMsg, java.lang.Integer RequestID, java.lang.Boolean IsLast, java.lang.String BrokerID, java.lang.String AccountID, java.lang.Double PreMortgage, java.lang.Double PreCredit, java.lang.Double PreDeposit, java.lang.Double PreBalance, java.lang.Double PreMargin, java.lang.Double InterestBase, java.lang.Double Interest, java.lang.Double Deposit, java.lang.Double Withdraw, java.lang.Double FrozenMargin, java.lang.Double FrozenCash, java.lang.Double FrozenCommission, java.lang.Double CurrMargin, java.lang.Double CashIn, java.lang.Double Commission, java.lang.Double CloseProfit, java.lang.Double PositionProfit, java.lang.Double Balance, java.lang.Double Available, java.lang.Double WithdrawQuota, java.lang.Double Reserve, java.lang.String TradingDay, java.lang.Integer SettlementID, java.lang.Double Credit, java.lang.Double Mortgage, java.lang.Double ExchangeMargin, java.lang.Double DeliveryMargin, java.lang.Double ExchangeDeliveryMargin, java.lang.Double ReserveBalance, java.lang.String CurrencyID, java.lang.Double PreFundMortgageIn, java.lang.Double PreFundMortgageOut, java.lang.Double FundMortgageIn, java.lang.Double FundMortgageOut, java.lang.Double FundMortgageAvailable, java.lang.Double MortgageableFund, java.lang.Double SpecProductMargin, java.lang.Double SpecProductFrozenMargin, java.lang.Double SpecProductCommission, java.lang.Double SpecProductFrozenCommission, java.lang.Double SpecProductPositionProfit, java.lang.Double SpecProductCloseProfit, java.lang.Double SpecProductPositionProfitByAlg, java.lang.Double SpecProductExchangeMargin, java.lang.Integer BizType, java.lang.Double FrozenSwap, java.lang.Double RemainSwap) {
    this.ErrorID = ErrorID;
    this.ErrorMsg = ErrorMsg;
    this.RequestID = RequestID;
    this.IsLast = IsLast;
    this.BrokerID = BrokerID;
    this.AccountID = AccountID;
    this.PreMortgage = PreMortgage;
    this.PreCredit = PreCredit;
    this.PreDeposit = PreDeposit;
    this.PreBalance = PreBalance;
    this.PreMargin = PreMargin;
    this.InterestBase = InterestBase;
    this.Interest = Interest;
    this.Deposit = Deposit;
    this.Withdraw = Withdraw;
    this.FrozenMargin = FrozenMargin;
    this.FrozenCash = FrozenCash;
    this.FrozenCommission = FrozenCommission;
    this.CurrMargin = CurrMargin;
    this.CashIn = CashIn;
    this.Commission = Commission;
    this.CloseProfit = CloseProfit;
    this.PositionProfit = PositionProfit;
    this.Balance = Balance;
    this.Available = Available;
    this.WithdrawQuota = WithdrawQuota;
    this.Reserve = Reserve;
    this.TradingDay = TradingDay;
    this.SettlementID = SettlementID;
    this.Credit = Credit;
    this.Mortgage = Mortgage;
    this.ExchangeMargin = ExchangeMargin;
    this.DeliveryMargin = DeliveryMargin;
    this.ExchangeDeliveryMargin = ExchangeDeliveryMargin;
    this.ReserveBalance = ReserveBalance;
    this.CurrencyID = CurrencyID;
    this.PreFundMortgageIn = PreFundMortgageIn;
    this.PreFundMortgageOut = PreFundMortgageOut;
    this.FundMortgageIn = FundMortgageIn;
    this.FundMortgageOut = FundMortgageOut;
    this.FundMortgageAvailable = FundMortgageAvailable;
    this.MortgageableFund = MortgageableFund;
    this.SpecProductMargin = SpecProductMargin;
    this.SpecProductFrozenMargin = SpecProductFrozenMargin;
    this.SpecProductCommission = SpecProductCommission;
    this.SpecProductFrozenCommission = SpecProductFrozenCommission;
    this.SpecProductPositionProfit = SpecProductPositionProfit;
    this.SpecProductCloseProfit = SpecProductCloseProfit;
    this.SpecProductPositionProfitByAlg = SpecProductPositionProfitByAlg;
    this.SpecProductExchangeMargin = SpecProductExchangeMargin;
    this.BizType = BizType;
    this.FrozenSwap = FrozenSwap;
    this.RemainSwap = RemainSwap;
  }

  public org.apache.avro.specific.SpecificData getSpecificData() { return MODEL$; }
  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call.
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ErrorID;
    case 1: return ErrorMsg;
    case 2: return RequestID;
    case 3: return IsLast;
    case 4: return BrokerID;
    case 5: return AccountID;
    case 6: return PreMortgage;
    case 7: return PreCredit;
    case 8: return PreDeposit;
    case 9: return PreBalance;
    case 10: return PreMargin;
    case 11: return InterestBase;
    case 12: return Interest;
    case 13: return Deposit;
    case 14: return Withdraw;
    case 15: return FrozenMargin;
    case 16: return FrozenCash;
    case 17: return FrozenCommission;
    case 18: return CurrMargin;
    case 19: return CashIn;
    case 20: return Commission;
    case 21: return CloseProfit;
    case 22: return PositionProfit;
    case 23: return Balance;
    case 24: return Available;
    case 25: return WithdrawQuota;
    case 26: return Reserve;
    case 27: return TradingDay;
    case 28: return SettlementID;
    case 29: return Credit;
    case 30: return Mortgage;
    case 31: return ExchangeMargin;
    case 32: return DeliveryMargin;
    case 33: return ExchangeDeliveryMargin;
    case 34: return ReserveBalance;
    case 35: return CurrencyID;
    case 36: return PreFundMortgageIn;
    case 37: return PreFundMortgageOut;
    case 38: return FundMortgageIn;
    case 39: return FundMortgageOut;
    case 40: return FundMortgageAvailable;
    case 41: return MortgageableFund;
    case 42: return SpecProductMargin;
    case 43: return SpecProductFrozenMargin;
    case 44: return SpecProductCommission;
    case 45: return SpecProductFrozenCommission;
    case 46: return SpecProductPositionProfit;
    case 47: return SpecProductCloseProfit;
    case 48: return SpecProductPositionProfitByAlg;
    case 49: return SpecProductExchangeMargin;
    case 50: return BizType;
    case 51: return FrozenSwap;
    case 52: return RemainSwap;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  // Used by DatumReader.  Applications should not call.
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ErrorID = (java.lang.Integer)value$; break;
    case 1: ErrorMsg = value$ != null ? value$.toString() : null; break;
    case 2: RequestID = (java.lang.Integer)value$; break;
    case 3: IsLast = (java.lang.Boolean)value$; break;
    case 4: BrokerID = value$ != null ? value$.toString() : null; break;
    case 5: AccountID = value$ != null ? value$.toString() : null; break;
    case 6: PreMortgage = (java.lang.Double)value$; break;
    case 7: PreCredit = (java.lang.Double)value$; break;
    case 8: PreDeposit = (java.lang.Double)value$; break;
    case 9: PreBalance = (java.lang.Double)value$; break;
    case 10: PreMargin = (java.lang.Double)value$; break;
    case 11: InterestBase = (java.lang.Double)value$; break;
    case 12: Interest = (java.lang.Double)value$; break;
    case 13: Deposit = (java.lang.Double)value$; break;
    case 14: Withdraw = (java.lang.Double)value$; break;
    case 15: FrozenMargin = (java.lang.Double)value$; break;
    case 16: FrozenCash = (java.lang.Double)value$; break;
    case 17: FrozenCommission = (java.lang.Double)value$; break;
    case 18: CurrMargin = (java.lang.Double)value$; break;
    case 19: CashIn = (java.lang.Double)value$; break;
    case 20: Commission = (java.lang.Double)value$; break;
    case 21: CloseProfit = (java.lang.Double)value$; break;
    case 22: PositionProfit = (java.lang.Double)value$; break;
    case 23: Balance = (java.lang.Double)value$; break;
    case 24: Available = (java.lang.Double)value$; break;
    case 25: WithdrawQuota = (java.lang.Double)value$; break;
    case 26: Reserve = (java.lang.Double)value$; break;
    case 27: TradingDay = value$ != null ? value$.toString() : null; break;
    case 28: SettlementID = (java.lang.Integer)value$; break;
    case 29: Credit = (java.lang.Double)value$; break;
    case 30: Mortgage = (java.lang.Double)value$; break;
    case 31: ExchangeMargin = (java.lang.Double)value$; break;
    case 32: DeliveryMargin = (java.lang.Double)value$; break;
    case 33: ExchangeDeliveryMargin = (java.lang.Double)value$; break;
    case 34: ReserveBalance = (java.lang.Double)value$; break;
    case 35: CurrencyID = value$ != null ? value$.toString() : null; break;
    case 36: PreFundMortgageIn = (java.lang.Double)value$; break;
    case 37: PreFundMortgageOut = (java.lang.Double)value$; break;
    case 38: FundMortgageIn = (java.lang.Double)value$; break;
    case 39: FundMortgageOut = (java.lang.Double)value$; break;
    case 40: FundMortgageAvailable = (java.lang.Double)value$; break;
    case 41: MortgageableFund = (java.lang.Double)value$; break;
    case 42: SpecProductMargin = (java.lang.Double)value$; break;
    case 43: SpecProductFrozenMargin = (java.lang.Double)value$; break;
    case 44: SpecProductCommission = (java.lang.Double)value$; break;
    case 45: SpecProductFrozenCommission = (java.lang.Double)value$; break;
    case 46: SpecProductPositionProfit = (java.lang.Double)value$; break;
    case 47: SpecProductCloseProfit = (java.lang.Double)value$; break;
    case 48: SpecProductPositionProfitByAlg = (java.lang.Double)value$; break;
    case 49: SpecProductExchangeMargin = (java.lang.Double)value$; break;
    case 50: BizType = (java.lang.Integer)value$; break;
    case 51: FrozenSwap = (java.lang.Double)value$; break;
    case 52: RemainSwap = (java.lang.Double)value$; break;
    default: throw new IndexOutOfBoundsException("Invalid index: " + field$);
    }
  }

  /**
   * Gets the value of the 'ErrorID' field.
   * @return FTDC响应信息 - 错误代码
   */
  public int getErrorID() {
    return ErrorID;
  }


  /**
   * Sets the value of the 'ErrorID' field.
   * FTDC响应信息 - 错误代码
   * @param value the value to set.
   */
  public FtdcTradingAccount setErrorID(int value) {
    this.ErrorID = value;
    return this;
  }

  /**
   * Gets the value of the 'ErrorMsg' field.
   * @return FTDC响应信息 - 错误信息
   */
  public java.lang.String getErrorMsg() {
    return ErrorMsg;
  }


  /**
   * Sets the value of the 'ErrorMsg' field.
   * FTDC响应信息 - 错误信息
   * @param value the value to set.
   */
  public FtdcTradingAccount setErrorMsg(java.lang.String value) {
    this.ErrorMsg = value;
    return this;
  }

  /**
   * Gets the value of the 'RequestID' field.
   * @return 请求ID
   */
  public int getRequestID() {
    return RequestID;
  }


  /**
   * Sets the value of the 'RequestID' field.
   * 请求ID
   * @param value the value to set.
   */
  public FtdcTradingAccount setRequestID(int value) {
    this.RequestID = value;
    return this;
  }

  /**
   * Gets the value of the 'IsLast' field.
   * @return 是否最后一条信息
   */
  public boolean getIsLast() {
    return IsLast;
  }


  /**
   * Sets the value of the 'IsLast' field.
   * 是否最后一条信息
   * @param value the value to set.
   */
  public FtdcTradingAccount setIsLast(boolean value) {
    this.IsLast = value;
    return this;
  }

  /**
   * Gets the value of the 'BrokerID' field.
   * @return 经纪公司代码
   */
  public java.lang.String getBrokerID() {
    return BrokerID;
  }


  /**
   * Sets the value of the 'BrokerID' field.
   * 经纪公司代码
   * @param value the value to set.
   */
  public FtdcTradingAccount setBrokerID(java.lang.String value) {
    this.BrokerID = value;
    return this;
  }

  /**
   * Gets the value of the 'AccountID' field.
   * @return 投资者账号
   */
  public java.lang.String getAccountID() {
    return AccountID;
  }


  /**
   * Sets the value of the 'AccountID' field.
   * 投资者账号
   * @param value the value to set.
   */
  public FtdcTradingAccount setAccountID(java.lang.String value) {
    this.AccountID = value;
    return this;
  }

  /**
   * Gets the value of the 'PreMortgage' field.
   * @return 上次质押金额
   */
  public double getPreMortgage() {
    return PreMortgage;
  }


  /**
   * Sets the value of the 'PreMortgage' field.
   * 上次质押金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreMortgage(double value) {
    this.PreMortgage = value;
    return this;
  }

  /**
   * Gets the value of the 'PreCredit' field.
   * @return 上次信用额度
   */
  public double getPreCredit() {
    return PreCredit;
  }


  /**
   * Sets the value of the 'PreCredit' field.
   * 上次信用额度
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreCredit(double value) {
    this.PreCredit = value;
    return this;
  }

  /**
   * Gets the value of the 'PreDeposit' field.
   * @return 上次存款额
   */
  public double getPreDeposit() {
    return PreDeposit;
  }


  /**
   * Sets the value of the 'PreDeposit' field.
   * 上次存款额
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreDeposit(double value) {
    this.PreDeposit = value;
    return this;
  }

  /**
   * Gets the value of the 'PreBalance' field.
   * @return 上次结算准备金
   */
  public double getPreBalance() {
    return PreBalance;
  }


  /**
   * Sets the value of the 'PreBalance' field.
   * 上次结算准备金
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreBalance(double value) {
    this.PreBalance = value;
    return this;
  }

  /**
   * Gets the value of the 'PreMargin' field.
   * @return 上次占用的保证金
   */
  public double getPreMargin() {
    return PreMargin;
  }


  /**
   * Sets the value of the 'PreMargin' field.
   * 上次占用的保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreMargin(double value) {
    this.PreMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'InterestBase' field.
   * @return 利息基数
   */
  public double getInterestBase() {
    return InterestBase;
  }


  /**
   * Sets the value of the 'InterestBase' field.
   * 利息基数
   * @param value the value to set.
   */
  public FtdcTradingAccount setInterestBase(double value) {
    this.InterestBase = value;
    return this;
  }

  /**
   * Gets the value of the 'Interest' field.
   * @return 利息收入
   */
  public double getInterest() {
    return Interest;
  }


  /**
   * Sets the value of the 'Interest' field.
   * 利息收入
   * @param value the value to set.
   */
  public FtdcTradingAccount setInterest(double value) {
    this.Interest = value;
    return this;
  }

  /**
   * Gets the value of the 'Deposit' field.
   * @return 入金金额
   */
  public double getDeposit() {
    return Deposit;
  }


  /**
   * Sets the value of the 'Deposit' field.
   * 入金金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setDeposit(double value) {
    this.Deposit = value;
    return this;
  }

  /**
   * Gets the value of the 'Withdraw' field.
   * @return 出金金额
   */
  public double getWithdraw() {
    return Withdraw;
  }


  /**
   * Sets the value of the 'Withdraw' field.
   * 出金金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setWithdraw(double value) {
    this.Withdraw = value;
    return this;
  }

  /**
   * Gets the value of the 'FrozenMargin' field.
   * @return 冻结的保证金
   */
  public double getFrozenMargin() {
    return FrozenMargin;
  }


  /**
   * Sets the value of the 'FrozenMargin' field.
   * 冻结的保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setFrozenMargin(double value) {
    this.FrozenMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'FrozenCash' field.
   * @return 冻结的资金
   */
  public double getFrozenCash() {
    return FrozenCash;
  }


  /**
   * Sets the value of the 'FrozenCash' field.
   * 冻结的资金
   * @param value the value to set.
   */
  public FtdcTradingAccount setFrozenCash(double value) {
    this.FrozenCash = value;
    return this;
  }

  /**
   * Gets the value of the 'FrozenCommission' field.
   * @return 冻结的手续费
   */
  public double getFrozenCommission() {
    return FrozenCommission;
  }


  /**
   * Sets the value of the 'FrozenCommission' field.
   * 冻结的手续费
   * @param value the value to set.
   */
  public FtdcTradingAccount setFrozenCommission(double value) {
    this.FrozenCommission = value;
    return this;
  }

  /**
   * Gets the value of the 'CurrMargin' field.
   * @return 当前保证金总额
   */
  public double getCurrMargin() {
    return CurrMargin;
  }


  /**
   * Sets the value of the 'CurrMargin' field.
   * 当前保证金总额
   * @param value the value to set.
   */
  public FtdcTradingAccount setCurrMargin(double value) {
    this.CurrMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'CashIn' field.
   * @return 资金差额
   */
  public double getCashIn() {
    return CashIn;
  }


  /**
   * Sets the value of the 'CashIn' field.
   * 资金差额
   * @param value the value to set.
   */
  public FtdcTradingAccount setCashIn(double value) {
    this.CashIn = value;
    return this;
  }

  /**
   * Gets the value of the 'Commission' field.
   * @return 手续费
   */
  public double getCommission() {
    return Commission;
  }


  /**
   * Sets the value of the 'Commission' field.
   * 手续费
   * @param value the value to set.
   */
  public FtdcTradingAccount setCommission(double value) {
    this.Commission = value;
    return this;
  }

  /**
   * Gets the value of the 'CloseProfit' field.
   * @return 平仓盈亏
   */
  public double getCloseProfit() {
    return CloseProfit;
  }


  /**
   * Sets the value of the 'CloseProfit' field.
   * 平仓盈亏
   * @param value the value to set.
   */
  public FtdcTradingAccount setCloseProfit(double value) {
    this.CloseProfit = value;
    return this;
  }

  /**
   * Gets the value of the 'PositionProfit' field.
   * @return 持仓盈亏
   */
  public double getPositionProfit() {
    return PositionProfit;
  }


  /**
   * Sets the value of the 'PositionProfit' field.
   * 持仓盈亏
   * @param value the value to set.
   */
  public FtdcTradingAccount setPositionProfit(double value) {
    this.PositionProfit = value;
    return this;
  }

  /**
   * Gets the value of the 'Balance' field.
   * @return 期货结算准备金
   */
  public double getBalance() {
    return Balance;
  }


  /**
   * Sets the value of the 'Balance' field.
   * 期货结算准备金
   * @param value the value to set.
   */
  public FtdcTradingAccount setBalance(double value) {
    this.Balance = value;
    return this;
  }

  /**
   * Gets the value of the 'Available' field.
   * @return 可用资金
   */
  public double getAvailable() {
    return Available;
  }


  /**
   * Sets the value of the 'Available' field.
   * 可用资金
   * @param value the value to set.
   */
  public FtdcTradingAccount setAvailable(double value) {
    this.Available = value;
    return this;
  }

  /**
   * Gets the value of the 'WithdrawQuota' field.
   * @return 可取资金
   */
  public double getWithdrawQuota() {
    return WithdrawQuota;
  }


  /**
   * Sets the value of the 'WithdrawQuota' field.
   * 可取资金
   * @param value the value to set.
   */
  public FtdcTradingAccount setWithdrawQuota(double value) {
    this.WithdrawQuota = value;
    return this;
  }

  /**
   * Gets the value of the 'Reserve' field.
   * @return 基本准备金
   */
  public double getReserve() {
    return Reserve;
  }


  /**
   * Sets the value of the 'Reserve' field.
   * 基本准备金
   * @param value the value to set.
   */
  public FtdcTradingAccount setReserve(double value) {
    this.Reserve = value;
    return this;
  }

  /**
   * Gets the value of the 'TradingDay' field.
   * @return 交易日
   */
  public java.lang.String getTradingDay() {
    return TradingDay;
  }


  /**
   * Sets the value of the 'TradingDay' field.
   * 交易日
   * @param value the value to set.
   */
  public FtdcTradingAccount setTradingDay(java.lang.String value) {
    this.TradingDay = value;
    return this;
  }

  /**
   * Gets the value of the 'SettlementID' field.
   * @return 结算编号
   */
  public int getSettlementID() {
    return SettlementID;
  }


  /**
   * Sets the value of the 'SettlementID' field.
   * 结算编号
   * @param value the value to set.
   */
  public FtdcTradingAccount setSettlementID(int value) {
    this.SettlementID = value;
    return this;
  }

  /**
   * Gets the value of the 'Credit' field.
   * @return 信用额度
   */
  public double getCredit() {
    return Credit;
  }


  /**
   * Sets the value of the 'Credit' field.
   * 信用额度
   * @param value the value to set.
   */
  public FtdcTradingAccount setCredit(double value) {
    this.Credit = value;
    return this;
  }

  /**
   * Gets the value of the 'Mortgage' field.
   * @return 质押金额
   */
  public double getMortgage() {
    return Mortgage;
  }


  /**
   * Sets the value of the 'Mortgage' field.
   * 质押金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setMortgage(double value) {
    this.Mortgage = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeMargin' field.
   * @return 交易所保证金
   */
  public double getExchangeMargin() {
    return ExchangeMargin;
  }


  /**
   * Sets the value of the 'ExchangeMargin' field.
   * 交易所保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setExchangeMargin(double value) {
    this.ExchangeMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'DeliveryMargin' field.
   * @return 投资者交割保证金
   */
  public double getDeliveryMargin() {
    return DeliveryMargin;
  }


  /**
   * Sets the value of the 'DeliveryMargin' field.
   * 投资者交割保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setDeliveryMargin(double value) {
    this.DeliveryMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'ExchangeDeliveryMargin' field.
   * @return 交易所交割保证金
   */
  public double getExchangeDeliveryMargin() {
    return ExchangeDeliveryMargin;
  }


  /**
   * Sets the value of the 'ExchangeDeliveryMargin' field.
   * 交易所交割保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setExchangeDeliveryMargin(double value) {
    this.ExchangeDeliveryMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'ReserveBalance' field.
   * @return 保底期货结算准备金
   */
  public double getReserveBalance() {
    return ReserveBalance;
  }


  /**
   * Sets the value of the 'ReserveBalance' field.
   * 保底期货结算准备金
   * @param value the value to set.
   */
  public FtdcTradingAccount setReserveBalance(double value) {
    this.ReserveBalance = value;
    return this;
  }

  /**
   * Gets the value of the 'CurrencyID' field.
   * @return 币种代码
   */
  public java.lang.String getCurrencyID() {
    return CurrencyID;
  }


  /**
   * Sets the value of the 'CurrencyID' field.
   * 币种代码
   * @param value the value to set.
   */
  public FtdcTradingAccount setCurrencyID(java.lang.String value) {
    this.CurrencyID = value;
    return this;
  }

  /**
   * Gets the value of the 'PreFundMortgageIn' field.
   * @return 上次货币质入金额
   */
  public double getPreFundMortgageIn() {
    return PreFundMortgageIn;
  }


  /**
   * Sets the value of the 'PreFundMortgageIn' field.
   * 上次货币质入金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreFundMortgageIn(double value) {
    this.PreFundMortgageIn = value;
    return this;
  }

  /**
   * Gets the value of the 'PreFundMortgageOut' field.
   * @return 上次货币质出金额
   */
  public double getPreFundMortgageOut() {
    return PreFundMortgageOut;
  }


  /**
   * Sets the value of the 'PreFundMortgageOut' field.
   * 上次货币质出金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setPreFundMortgageOut(double value) {
    this.PreFundMortgageOut = value;
    return this;
  }

  /**
   * Gets the value of the 'FundMortgageIn' field.
   * @return 货币质入金额
   */
  public double getFundMortgageIn() {
    return FundMortgageIn;
  }


  /**
   * Sets the value of the 'FundMortgageIn' field.
   * 货币质入金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setFundMortgageIn(double value) {
    this.FundMortgageIn = value;
    return this;
  }

  /**
   * Gets the value of the 'FundMortgageOut' field.
   * @return 货币质出金额
   */
  public double getFundMortgageOut() {
    return FundMortgageOut;
  }


  /**
   * Sets the value of the 'FundMortgageOut' field.
   * 货币质出金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setFundMortgageOut(double value) {
    this.FundMortgageOut = value;
    return this;
  }

  /**
   * Gets the value of the 'FundMortgageAvailable' field.
   * @return 货币质押余额
   */
  public double getFundMortgageAvailable() {
    return FundMortgageAvailable;
  }


  /**
   * Sets the value of the 'FundMortgageAvailable' field.
   * 货币质押余额
   * @param value the value to set.
   */
  public FtdcTradingAccount setFundMortgageAvailable(double value) {
    this.FundMortgageAvailable = value;
    return this;
  }

  /**
   * Gets the value of the 'MortgageableFund' field.
   * @return 可质押货币金额
   */
  public double getMortgageableFund() {
    return MortgageableFund;
  }


  /**
   * Sets the value of the 'MortgageableFund' field.
   * 可质押货币金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setMortgageableFund(double value) {
    this.MortgageableFund = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductMargin' field.
   * @return 特殊产品占用保证金
   */
  public double getSpecProductMargin() {
    return SpecProductMargin;
  }


  /**
   * Sets the value of the 'SpecProductMargin' field.
   * 特殊产品占用保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductMargin(double value) {
    this.SpecProductMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductFrozenMargin' field.
   * @return 特殊产品冻结保证金
   */
  public double getSpecProductFrozenMargin() {
    return SpecProductFrozenMargin;
  }


  /**
   * Sets the value of the 'SpecProductFrozenMargin' field.
   * 特殊产品冻结保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductFrozenMargin(double value) {
    this.SpecProductFrozenMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductCommission' field.
   * @return 特殊产品手续费
   */
  public double getSpecProductCommission() {
    return SpecProductCommission;
  }


  /**
   * Sets the value of the 'SpecProductCommission' field.
   * 特殊产品手续费
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductCommission(double value) {
    this.SpecProductCommission = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductFrozenCommission' field.
   * @return 特殊产品冻结手续费
   */
  public double getSpecProductFrozenCommission() {
    return SpecProductFrozenCommission;
  }


  /**
   * Sets the value of the 'SpecProductFrozenCommission' field.
   * 特殊产品冻结手续费
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductFrozenCommission(double value) {
    this.SpecProductFrozenCommission = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductPositionProfit' field.
   * @return 特殊产品持仓盈亏
   */
  public double getSpecProductPositionProfit() {
    return SpecProductPositionProfit;
  }


  /**
   * Sets the value of the 'SpecProductPositionProfit' field.
   * 特殊产品持仓盈亏
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductPositionProfit(double value) {
    this.SpecProductPositionProfit = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductCloseProfit' field.
   * @return 特殊产品平仓盈亏
   */
  public double getSpecProductCloseProfit() {
    return SpecProductCloseProfit;
  }


  /**
   * Sets the value of the 'SpecProductCloseProfit' field.
   * 特殊产品平仓盈亏
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductCloseProfit(double value) {
    this.SpecProductCloseProfit = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductPositionProfitByAlg' field.
   * @return 根据持仓盈亏算法计算的特殊产品持仓盈亏
   */
  public double getSpecProductPositionProfitByAlg() {
    return SpecProductPositionProfitByAlg;
  }


  /**
   * Sets the value of the 'SpecProductPositionProfitByAlg' field.
   * 根据持仓盈亏算法计算的特殊产品持仓盈亏
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductPositionProfitByAlg(double value) {
    this.SpecProductPositionProfitByAlg = value;
    return this;
  }

  /**
   * Gets the value of the 'SpecProductExchangeMargin' field.
   * @return 特殊产品交易所保证金
   */
  public double getSpecProductExchangeMargin() {
    return SpecProductExchangeMargin;
  }


  /**
   * Sets the value of the 'SpecProductExchangeMargin' field.
   * 特殊产品交易所保证金
   * @param value the value to set.
   */
  public FtdcTradingAccount setSpecProductExchangeMargin(double value) {
    this.SpecProductExchangeMargin = value;
    return this;
  }

  /**
   * Gets the value of the 'BizType' field.
   * @return 业务类型
   */
  public int getBizType() {
    return BizType;
  }


  /**
   * Sets the value of the 'BizType' field.
   * 业务类型
   * @param value the value to set.
   */
  public FtdcTradingAccount setBizType(int value) {
    this.BizType = value;
    return this;
  }

  /**
   * Gets the value of the 'FrozenSwap' field.
   * @return 延时换汇冻结金额
   */
  public double getFrozenSwap() {
    return FrozenSwap;
  }


  /**
   * Sets the value of the 'FrozenSwap' field.
   * 延时换汇冻结金额
   * @param value the value to set.
   */
  public FtdcTradingAccount setFrozenSwap(double value) {
    this.FrozenSwap = value;
    return this;
  }

  /**
   * Gets the value of the 'RemainSwap' field.
   * @return 剩余换汇额度
   */
  public double getRemainSwap() {
    return RemainSwap;
  }


  /**
   * Sets the value of the 'RemainSwap' field.
   * 剩余换汇额度
   * @param value the value to set.
   */
  public FtdcTradingAccount setRemainSwap(double value) {
    this.RemainSwap = value;
    return this;
  }

  /**
   * Creates a new FtdcTradingAccount RecordBuilder.
   * @return A new FtdcTradingAccount RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder newBuilder() {
    return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder();
  }

  /**
   * Creates a new FtdcTradingAccount RecordBuilder by copying an existing Builder.
   * @param other The existing builder to copy.
   * @return A new FtdcTradingAccount RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder(other);
    }
  }

  /**
   * Creates a new FtdcTradingAccount RecordBuilder by copying an existing FtdcTradingAccount instance.
   * @param other The existing instance to copy.
   * @return A new FtdcTradingAccount RecordBuilder
   */
  public static io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder newBuilder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount other) {
    if (other == null) {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder();
    } else {
      return new io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder(other);
    }
  }

  /**
   * RecordBuilder for FtdcTradingAccount instances.
   */
  @org.apache.avro.specific.AvroGenerated
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<FtdcTradingAccount>
    implements org.apache.avro.data.RecordBuilder<FtdcTradingAccount> {

    /** FTDC响应信息 - 错误代码 */
    private int ErrorID;
    /** FTDC响应信息 - 错误信息 */
    private java.lang.String ErrorMsg;
    /** 请求ID */
    private int RequestID;
    /** 是否最后一条信息 */
    private boolean IsLast;
    /** 经纪公司代码 */
    private java.lang.String BrokerID;
    /** 投资者账号 */
    private java.lang.String AccountID;
    /** 上次质押金额 */
    private double PreMortgage;
    /** 上次信用额度 */
    private double PreCredit;
    /** 上次存款额 */
    private double PreDeposit;
    /** 上次结算准备金 */
    private double PreBalance;
    /** 上次占用的保证金 */
    private double PreMargin;
    /** 利息基数 */
    private double InterestBase;
    /** 利息收入 */
    private double Interest;
    /** 入金金额 */
    private double Deposit;
    /** 出金金额 */
    private double Withdraw;
    /** 冻结的保证金 */
    private double FrozenMargin;
    /** 冻结的资金 */
    private double FrozenCash;
    /** 冻结的手续费 */
    private double FrozenCommission;
    /** 当前保证金总额 */
    private double CurrMargin;
    /** 资金差额 */
    private double CashIn;
    /** 手续费 */
    private double Commission;
    /** 平仓盈亏 */
    private double CloseProfit;
    /** 持仓盈亏 */
    private double PositionProfit;
    /** 期货结算准备金 */
    private double Balance;
    /** 可用资金 */
    private double Available;
    /** 可取资金 */
    private double WithdrawQuota;
    /** 基本准备金 */
    private double Reserve;
    /** 交易日 */
    private java.lang.String TradingDay;
    /** 结算编号 */
    private int SettlementID;
    /** 信用额度 */
    private double Credit;
    /** 质押金额 */
    private double Mortgage;
    /** 交易所保证金 */
    private double ExchangeMargin;
    /** 投资者交割保证金 */
    private double DeliveryMargin;
    /** 交易所交割保证金 */
    private double ExchangeDeliveryMargin;
    /** 保底期货结算准备金 */
    private double ReserveBalance;
    /** 币种代码 */
    private java.lang.String CurrencyID;
    /** 上次货币质入金额 */
    private double PreFundMortgageIn;
    /** 上次货币质出金额 */
    private double PreFundMortgageOut;
    /** 货币质入金额 */
    private double FundMortgageIn;
    /** 货币质出金额 */
    private double FundMortgageOut;
    /** 货币质押余额 */
    private double FundMortgageAvailable;
    /** 可质押货币金额 */
    private double MortgageableFund;
    /** 特殊产品占用保证金 */
    private double SpecProductMargin;
    /** 特殊产品冻结保证金 */
    private double SpecProductFrozenMargin;
    /** 特殊产品手续费 */
    private double SpecProductCommission;
    /** 特殊产品冻结手续费 */
    private double SpecProductFrozenCommission;
    /** 特殊产品持仓盈亏 */
    private double SpecProductPositionProfit;
    /** 特殊产品平仓盈亏 */
    private double SpecProductCloseProfit;
    /** 根据持仓盈亏算法计算的特殊产品持仓盈亏 */
    private double SpecProductPositionProfitByAlg;
    /** 特殊产品交易所保证金 */
    private double SpecProductExchangeMargin;
    /** 业务类型 */
    private int BizType;
    /** 延时换汇冻结金额 */
    private double FrozenSwap;
    /** 剩余换汇额度 */
    private double RemainSwap;

    /** Creates a new Builder */
    private Builder() {
      super(SCHEMA$, MODEL$);
    }

    /**
     * Creates a Builder by copying an existing Builder.
     * @param other The existing Builder to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ErrorID)) {
        this.ErrorID = data().deepCopy(fields()[0].schema(), other.ErrorID);
        fieldSetFlags()[0] = other.fieldSetFlags()[0];
      }
      if (isValidValue(fields()[1], other.ErrorMsg)) {
        this.ErrorMsg = data().deepCopy(fields()[1].schema(), other.ErrorMsg);
        fieldSetFlags()[1] = other.fieldSetFlags()[1];
      }
      if (isValidValue(fields()[2], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[2].schema(), other.RequestID);
        fieldSetFlags()[2] = other.fieldSetFlags()[2];
      }
      if (isValidValue(fields()[3], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[3].schema(), other.IsLast);
        fieldSetFlags()[3] = other.fieldSetFlags()[3];
      }
      if (isValidValue(fields()[4], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[4].schema(), other.BrokerID);
        fieldSetFlags()[4] = other.fieldSetFlags()[4];
      }
      if (isValidValue(fields()[5], other.AccountID)) {
        this.AccountID = data().deepCopy(fields()[5].schema(), other.AccountID);
        fieldSetFlags()[5] = other.fieldSetFlags()[5];
      }
      if (isValidValue(fields()[6], other.PreMortgage)) {
        this.PreMortgage = data().deepCopy(fields()[6].schema(), other.PreMortgage);
        fieldSetFlags()[6] = other.fieldSetFlags()[6];
      }
      if (isValidValue(fields()[7], other.PreCredit)) {
        this.PreCredit = data().deepCopy(fields()[7].schema(), other.PreCredit);
        fieldSetFlags()[7] = other.fieldSetFlags()[7];
      }
      if (isValidValue(fields()[8], other.PreDeposit)) {
        this.PreDeposit = data().deepCopy(fields()[8].schema(), other.PreDeposit);
        fieldSetFlags()[8] = other.fieldSetFlags()[8];
      }
      if (isValidValue(fields()[9], other.PreBalance)) {
        this.PreBalance = data().deepCopy(fields()[9].schema(), other.PreBalance);
        fieldSetFlags()[9] = other.fieldSetFlags()[9];
      }
      if (isValidValue(fields()[10], other.PreMargin)) {
        this.PreMargin = data().deepCopy(fields()[10].schema(), other.PreMargin);
        fieldSetFlags()[10] = other.fieldSetFlags()[10];
      }
      if (isValidValue(fields()[11], other.InterestBase)) {
        this.InterestBase = data().deepCopy(fields()[11].schema(), other.InterestBase);
        fieldSetFlags()[11] = other.fieldSetFlags()[11];
      }
      if (isValidValue(fields()[12], other.Interest)) {
        this.Interest = data().deepCopy(fields()[12].schema(), other.Interest);
        fieldSetFlags()[12] = other.fieldSetFlags()[12];
      }
      if (isValidValue(fields()[13], other.Deposit)) {
        this.Deposit = data().deepCopy(fields()[13].schema(), other.Deposit);
        fieldSetFlags()[13] = other.fieldSetFlags()[13];
      }
      if (isValidValue(fields()[14], other.Withdraw)) {
        this.Withdraw = data().deepCopy(fields()[14].schema(), other.Withdraw);
        fieldSetFlags()[14] = other.fieldSetFlags()[14];
      }
      if (isValidValue(fields()[15], other.FrozenMargin)) {
        this.FrozenMargin = data().deepCopy(fields()[15].schema(), other.FrozenMargin);
        fieldSetFlags()[15] = other.fieldSetFlags()[15];
      }
      if (isValidValue(fields()[16], other.FrozenCash)) {
        this.FrozenCash = data().deepCopy(fields()[16].schema(), other.FrozenCash);
        fieldSetFlags()[16] = other.fieldSetFlags()[16];
      }
      if (isValidValue(fields()[17], other.FrozenCommission)) {
        this.FrozenCommission = data().deepCopy(fields()[17].schema(), other.FrozenCommission);
        fieldSetFlags()[17] = other.fieldSetFlags()[17];
      }
      if (isValidValue(fields()[18], other.CurrMargin)) {
        this.CurrMargin = data().deepCopy(fields()[18].schema(), other.CurrMargin);
        fieldSetFlags()[18] = other.fieldSetFlags()[18];
      }
      if (isValidValue(fields()[19], other.CashIn)) {
        this.CashIn = data().deepCopy(fields()[19].schema(), other.CashIn);
        fieldSetFlags()[19] = other.fieldSetFlags()[19];
      }
      if (isValidValue(fields()[20], other.Commission)) {
        this.Commission = data().deepCopy(fields()[20].schema(), other.Commission);
        fieldSetFlags()[20] = other.fieldSetFlags()[20];
      }
      if (isValidValue(fields()[21], other.CloseProfit)) {
        this.CloseProfit = data().deepCopy(fields()[21].schema(), other.CloseProfit);
        fieldSetFlags()[21] = other.fieldSetFlags()[21];
      }
      if (isValidValue(fields()[22], other.PositionProfit)) {
        this.PositionProfit = data().deepCopy(fields()[22].schema(), other.PositionProfit);
        fieldSetFlags()[22] = other.fieldSetFlags()[22];
      }
      if (isValidValue(fields()[23], other.Balance)) {
        this.Balance = data().deepCopy(fields()[23].schema(), other.Balance);
        fieldSetFlags()[23] = other.fieldSetFlags()[23];
      }
      if (isValidValue(fields()[24], other.Available)) {
        this.Available = data().deepCopy(fields()[24].schema(), other.Available);
        fieldSetFlags()[24] = other.fieldSetFlags()[24];
      }
      if (isValidValue(fields()[25], other.WithdrawQuota)) {
        this.WithdrawQuota = data().deepCopy(fields()[25].schema(), other.WithdrawQuota);
        fieldSetFlags()[25] = other.fieldSetFlags()[25];
      }
      if (isValidValue(fields()[26], other.Reserve)) {
        this.Reserve = data().deepCopy(fields()[26].schema(), other.Reserve);
        fieldSetFlags()[26] = other.fieldSetFlags()[26];
      }
      if (isValidValue(fields()[27], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[27].schema(), other.TradingDay);
        fieldSetFlags()[27] = other.fieldSetFlags()[27];
      }
      if (isValidValue(fields()[28], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[28].schema(), other.SettlementID);
        fieldSetFlags()[28] = other.fieldSetFlags()[28];
      }
      if (isValidValue(fields()[29], other.Credit)) {
        this.Credit = data().deepCopy(fields()[29].schema(), other.Credit);
        fieldSetFlags()[29] = other.fieldSetFlags()[29];
      }
      if (isValidValue(fields()[30], other.Mortgage)) {
        this.Mortgage = data().deepCopy(fields()[30].schema(), other.Mortgage);
        fieldSetFlags()[30] = other.fieldSetFlags()[30];
      }
      if (isValidValue(fields()[31], other.ExchangeMargin)) {
        this.ExchangeMargin = data().deepCopy(fields()[31].schema(), other.ExchangeMargin);
        fieldSetFlags()[31] = other.fieldSetFlags()[31];
      }
      if (isValidValue(fields()[32], other.DeliveryMargin)) {
        this.DeliveryMargin = data().deepCopy(fields()[32].schema(), other.DeliveryMargin);
        fieldSetFlags()[32] = other.fieldSetFlags()[32];
      }
      if (isValidValue(fields()[33], other.ExchangeDeliveryMargin)) {
        this.ExchangeDeliveryMargin = data().deepCopy(fields()[33].schema(), other.ExchangeDeliveryMargin);
        fieldSetFlags()[33] = other.fieldSetFlags()[33];
      }
      if (isValidValue(fields()[34], other.ReserveBalance)) {
        this.ReserveBalance = data().deepCopy(fields()[34].schema(), other.ReserveBalance);
        fieldSetFlags()[34] = other.fieldSetFlags()[34];
      }
      if (isValidValue(fields()[35], other.CurrencyID)) {
        this.CurrencyID = data().deepCopy(fields()[35].schema(), other.CurrencyID);
        fieldSetFlags()[35] = other.fieldSetFlags()[35];
      }
      if (isValidValue(fields()[36], other.PreFundMortgageIn)) {
        this.PreFundMortgageIn = data().deepCopy(fields()[36].schema(), other.PreFundMortgageIn);
        fieldSetFlags()[36] = other.fieldSetFlags()[36];
      }
      if (isValidValue(fields()[37], other.PreFundMortgageOut)) {
        this.PreFundMortgageOut = data().deepCopy(fields()[37].schema(), other.PreFundMortgageOut);
        fieldSetFlags()[37] = other.fieldSetFlags()[37];
      }
      if (isValidValue(fields()[38], other.FundMortgageIn)) {
        this.FundMortgageIn = data().deepCopy(fields()[38].schema(), other.FundMortgageIn);
        fieldSetFlags()[38] = other.fieldSetFlags()[38];
      }
      if (isValidValue(fields()[39], other.FundMortgageOut)) {
        this.FundMortgageOut = data().deepCopy(fields()[39].schema(), other.FundMortgageOut);
        fieldSetFlags()[39] = other.fieldSetFlags()[39];
      }
      if (isValidValue(fields()[40], other.FundMortgageAvailable)) {
        this.FundMortgageAvailable = data().deepCopy(fields()[40].schema(), other.FundMortgageAvailable);
        fieldSetFlags()[40] = other.fieldSetFlags()[40];
      }
      if (isValidValue(fields()[41], other.MortgageableFund)) {
        this.MortgageableFund = data().deepCopy(fields()[41].schema(), other.MortgageableFund);
        fieldSetFlags()[41] = other.fieldSetFlags()[41];
      }
      if (isValidValue(fields()[42], other.SpecProductMargin)) {
        this.SpecProductMargin = data().deepCopy(fields()[42].schema(), other.SpecProductMargin);
        fieldSetFlags()[42] = other.fieldSetFlags()[42];
      }
      if (isValidValue(fields()[43], other.SpecProductFrozenMargin)) {
        this.SpecProductFrozenMargin = data().deepCopy(fields()[43].schema(), other.SpecProductFrozenMargin);
        fieldSetFlags()[43] = other.fieldSetFlags()[43];
      }
      if (isValidValue(fields()[44], other.SpecProductCommission)) {
        this.SpecProductCommission = data().deepCopy(fields()[44].schema(), other.SpecProductCommission);
        fieldSetFlags()[44] = other.fieldSetFlags()[44];
      }
      if (isValidValue(fields()[45], other.SpecProductFrozenCommission)) {
        this.SpecProductFrozenCommission = data().deepCopy(fields()[45].schema(), other.SpecProductFrozenCommission);
        fieldSetFlags()[45] = other.fieldSetFlags()[45];
      }
      if (isValidValue(fields()[46], other.SpecProductPositionProfit)) {
        this.SpecProductPositionProfit = data().deepCopy(fields()[46].schema(), other.SpecProductPositionProfit);
        fieldSetFlags()[46] = other.fieldSetFlags()[46];
      }
      if (isValidValue(fields()[47], other.SpecProductCloseProfit)) {
        this.SpecProductCloseProfit = data().deepCopy(fields()[47].schema(), other.SpecProductCloseProfit);
        fieldSetFlags()[47] = other.fieldSetFlags()[47];
      }
      if (isValidValue(fields()[48], other.SpecProductPositionProfitByAlg)) {
        this.SpecProductPositionProfitByAlg = data().deepCopy(fields()[48].schema(), other.SpecProductPositionProfitByAlg);
        fieldSetFlags()[48] = other.fieldSetFlags()[48];
      }
      if (isValidValue(fields()[49], other.SpecProductExchangeMargin)) {
        this.SpecProductExchangeMargin = data().deepCopy(fields()[49].schema(), other.SpecProductExchangeMargin);
        fieldSetFlags()[49] = other.fieldSetFlags()[49];
      }
      if (isValidValue(fields()[50], other.BizType)) {
        this.BizType = data().deepCopy(fields()[50].schema(), other.BizType);
        fieldSetFlags()[50] = other.fieldSetFlags()[50];
      }
      if (isValidValue(fields()[51], other.FrozenSwap)) {
        this.FrozenSwap = data().deepCopy(fields()[51].schema(), other.FrozenSwap);
        fieldSetFlags()[51] = other.fieldSetFlags()[51];
      }
      if (isValidValue(fields()[52], other.RemainSwap)) {
        this.RemainSwap = data().deepCopy(fields()[52].schema(), other.RemainSwap);
        fieldSetFlags()[52] = other.fieldSetFlags()[52];
      }
    }

    /**
     * Creates a Builder by copying an existing FtdcTradingAccount instance
     * @param other The existing instance to copy.
     */
    private Builder(io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount other) {
      super(SCHEMA$, MODEL$);
      if (isValidValue(fields()[0], other.ErrorID)) {
        this.ErrorID = data().deepCopy(fields()[0].schema(), other.ErrorID);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.ErrorMsg)) {
        this.ErrorMsg = data().deepCopy(fields()[1].schema(), other.ErrorMsg);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.RequestID)) {
        this.RequestID = data().deepCopy(fields()[2].schema(), other.RequestID);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.IsLast)) {
        this.IsLast = data().deepCopy(fields()[3].schema(), other.IsLast);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.BrokerID)) {
        this.BrokerID = data().deepCopy(fields()[4].schema(), other.BrokerID);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.AccountID)) {
        this.AccountID = data().deepCopy(fields()[5].schema(), other.AccountID);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.PreMortgage)) {
        this.PreMortgage = data().deepCopy(fields()[6].schema(), other.PreMortgage);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.PreCredit)) {
        this.PreCredit = data().deepCopy(fields()[7].schema(), other.PreCredit);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.PreDeposit)) {
        this.PreDeposit = data().deepCopy(fields()[8].schema(), other.PreDeposit);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.PreBalance)) {
        this.PreBalance = data().deepCopy(fields()[9].schema(), other.PreBalance);
        fieldSetFlags()[9] = true;
      }
      if (isValidValue(fields()[10], other.PreMargin)) {
        this.PreMargin = data().deepCopy(fields()[10].schema(), other.PreMargin);
        fieldSetFlags()[10] = true;
      }
      if (isValidValue(fields()[11], other.InterestBase)) {
        this.InterestBase = data().deepCopy(fields()[11].schema(), other.InterestBase);
        fieldSetFlags()[11] = true;
      }
      if (isValidValue(fields()[12], other.Interest)) {
        this.Interest = data().deepCopy(fields()[12].schema(), other.Interest);
        fieldSetFlags()[12] = true;
      }
      if (isValidValue(fields()[13], other.Deposit)) {
        this.Deposit = data().deepCopy(fields()[13].schema(), other.Deposit);
        fieldSetFlags()[13] = true;
      }
      if (isValidValue(fields()[14], other.Withdraw)) {
        this.Withdraw = data().deepCopy(fields()[14].schema(), other.Withdraw);
        fieldSetFlags()[14] = true;
      }
      if (isValidValue(fields()[15], other.FrozenMargin)) {
        this.FrozenMargin = data().deepCopy(fields()[15].schema(), other.FrozenMargin);
        fieldSetFlags()[15] = true;
      }
      if (isValidValue(fields()[16], other.FrozenCash)) {
        this.FrozenCash = data().deepCopy(fields()[16].schema(), other.FrozenCash);
        fieldSetFlags()[16] = true;
      }
      if (isValidValue(fields()[17], other.FrozenCommission)) {
        this.FrozenCommission = data().deepCopy(fields()[17].schema(), other.FrozenCommission);
        fieldSetFlags()[17] = true;
      }
      if (isValidValue(fields()[18], other.CurrMargin)) {
        this.CurrMargin = data().deepCopy(fields()[18].schema(), other.CurrMargin);
        fieldSetFlags()[18] = true;
      }
      if (isValidValue(fields()[19], other.CashIn)) {
        this.CashIn = data().deepCopy(fields()[19].schema(), other.CashIn);
        fieldSetFlags()[19] = true;
      }
      if (isValidValue(fields()[20], other.Commission)) {
        this.Commission = data().deepCopy(fields()[20].schema(), other.Commission);
        fieldSetFlags()[20] = true;
      }
      if (isValidValue(fields()[21], other.CloseProfit)) {
        this.CloseProfit = data().deepCopy(fields()[21].schema(), other.CloseProfit);
        fieldSetFlags()[21] = true;
      }
      if (isValidValue(fields()[22], other.PositionProfit)) {
        this.PositionProfit = data().deepCopy(fields()[22].schema(), other.PositionProfit);
        fieldSetFlags()[22] = true;
      }
      if (isValidValue(fields()[23], other.Balance)) {
        this.Balance = data().deepCopy(fields()[23].schema(), other.Balance);
        fieldSetFlags()[23] = true;
      }
      if (isValidValue(fields()[24], other.Available)) {
        this.Available = data().deepCopy(fields()[24].schema(), other.Available);
        fieldSetFlags()[24] = true;
      }
      if (isValidValue(fields()[25], other.WithdrawQuota)) {
        this.WithdrawQuota = data().deepCopy(fields()[25].schema(), other.WithdrawQuota);
        fieldSetFlags()[25] = true;
      }
      if (isValidValue(fields()[26], other.Reserve)) {
        this.Reserve = data().deepCopy(fields()[26].schema(), other.Reserve);
        fieldSetFlags()[26] = true;
      }
      if (isValidValue(fields()[27], other.TradingDay)) {
        this.TradingDay = data().deepCopy(fields()[27].schema(), other.TradingDay);
        fieldSetFlags()[27] = true;
      }
      if (isValidValue(fields()[28], other.SettlementID)) {
        this.SettlementID = data().deepCopy(fields()[28].schema(), other.SettlementID);
        fieldSetFlags()[28] = true;
      }
      if (isValidValue(fields()[29], other.Credit)) {
        this.Credit = data().deepCopy(fields()[29].schema(), other.Credit);
        fieldSetFlags()[29] = true;
      }
      if (isValidValue(fields()[30], other.Mortgage)) {
        this.Mortgage = data().deepCopy(fields()[30].schema(), other.Mortgage);
        fieldSetFlags()[30] = true;
      }
      if (isValidValue(fields()[31], other.ExchangeMargin)) {
        this.ExchangeMargin = data().deepCopy(fields()[31].schema(), other.ExchangeMargin);
        fieldSetFlags()[31] = true;
      }
      if (isValidValue(fields()[32], other.DeliveryMargin)) {
        this.DeliveryMargin = data().deepCopy(fields()[32].schema(), other.DeliveryMargin);
        fieldSetFlags()[32] = true;
      }
      if (isValidValue(fields()[33], other.ExchangeDeliveryMargin)) {
        this.ExchangeDeliveryMargin = data().deepCopy(fields()[33].schema(), other.ExchangeDeliveryMargin);
        fieldSetFlags()[33] = true;
      }
      if (isValidValue(fields()[34], other.ReserveBalance)) {
        this.ReserveBalance = data().deepCopy(fields()[34].schema(), other.ReserveBalance);
        fieldSetFlags()[34] = true;
      }
      if (isValidValue(fields()[35], other.CurrencyID)) {
        this.CurrencyID = data().deepCopy(fields()[35].schema(), other.CurrencyID);
        fieldSetFlags()[35] = true;
      }
      if (isValidValue(fields()[36], other.PreFundMortgageIn)) {
        this.PreFundMortgageIn = data().deepCopy(fields()[36].schema(), other.PreFundMortgageIn);
        fieldSetFlags()[36] = true;
      }
      if (isValidValue(fields()[37], other.PreFundMortgageOut)) {
        this.PreFundMortgageOut = data().deepCopy(fields()[37].schema(), other.PreFundMortgageOut);
        fieldSetFlags()[37] = true;
      }
      if (isValidValue(fields()[38], other.FundMortgageIn)) {
        this.FundMortgageIn = data().deepCopy(fields()[38].schema(), other.FundMortgageIn);
        fieldSetFlags()[38] = true;
      }
      if (isValidValue(fields()[39], other.FundMortgageOut)) {
        this.FundMortgageOut = data().deepCopy(fields()[39].schema(), other.FundMortgageOut);
        fieldSetFlags()[39] = true;
      }
      if (isValidValue(fields()[40], other.FundMortgageAvailable)) {
        this.FundMortgageAvailable = data().deepCopy(fields()[40].schema(), other.FundMortgageAvailable);
        fieldSetFlags()[40] = true;
      }
      if (isValidValue(fields()[41], other.MortgageableFund)) {
        this.MortgageableFund = data().deepCopy(fields()[41].schema(), other.MortgageableFund);
        fieldSetFlags()[41] = true;
      }
      if (isValidValue(fields()[42], other.SpecProductMargin)) {
        this.SpecProductMargin = data().deepCopy(fields()[42].schema(), other.SpecProductMargin);
        fieldSetFlags()[42] = true;
      }
      if (isValidValue(fields()[43], other.SpecProductFrozenMargin)) {
        this.SpecProductFrozenMargin = data().deepCopy(fields()[43].schema(), other.SpecProductFrozenMargin);
        fieldSetFlags()[43] = true;
      }
      if (isValidValue(fields()[44], other.SpecProductCommission)) {
        this.SpecProductCommission = data().deepCopy(fields()[44].schema(), other.SpecProductCommission);
        fieldSetFlags()[44] = true;
      }
      if (isValidValue(fields()[45], other.SpecProductFrozenCommission)) {
        this.SpecProductFrozenCommission = data().deepCopy(fields()[45].schema(), other.SpecProductFrozenCommission);
        fieldSetFlags()[45] = true;
      }
      if (isValidValue(fields()[46], other.SpecProductPositionProfit)) {
        this.SpecProductPositionProfit = data().deepCopy(fields()[46].schema(), other.SpecProductPositionProfit);
        fieldSetFlags()[46] = true;
      }
      if (isValidValue(fields()[47], other.SpecProductCloseProfit)) {
        this.SpecProductCloseProfit = data().deepCopy(fields()[47].schema(), other.SpecProductCloseProfit);
        fieldSetFlags()[47] = true;
      }
      if (isValidValue(fields()[48], other.SpecProductPositionProfitByAlg)) {
        this.SpecProductPositionProfitByAlg = data().deepCopy(fields()[48].schema(), other.SpecProductPositionProfitByAlg);
        fieldSetFlags()[48] = true;
      }
      if (isValidValue(fields()[49], other.SpecProductExchangeMargin)) {
        this.SpecProductExchangeMargin = data().deepCopy(fields()[49].schema(), other.SpecProductExchangeMargin);
        fieldSetFlags()[49] = true;
      }
      if (isValidValue(fields()[50], other.BizType)) {
        this.BizType = data().deepCopy(fields()[50].schema(), other.BizType);
        fieldSetFlags()[50] = true;
      }
      if (isValidValue(fields()[51], other.FrozenSwap)) {
        this.FrozenSwap = data().deepCopy(fields()[51].schema(), other.FrozenSwap);
        fieldSetFlags()[51] = true;
      }
      if (isValidValue(fields()[52], other.RemainSwap)) {
        this.RemainSwap = data().deepCopy(fields()[52].schema(), other.RemainSwap);
        fieldSetFlags()[52] = true;
      }
    }

    /**
      * Gets the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @return The value.
      */
    public int getErrorID() {
      return ErrorID;
    }


    /**
      * Sets the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @param value The value of 'ErrorID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setErrorID(int value) {
      validate(fields()[0], value);
      this.ErrorID = value;
      fieldSetFlags()[0] = true;
      return this;
    }

    /**
      * Checks whether the 'ErrorID' field has been set.
      * FTDC响应信息 - 错误代码
      * @return True if the 'ErrorID' field has been set, false otherwise.
      */
    public boolean hasErrorID() {
      return fieldSetFlags()[0];
    }


    /**
      * Clears the value of the 'ErrorID' field.
      * FTDC响应信息 - 错误代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearErrorID() {
      fieldSetFlags()[0] = false;
      return this;
    }

    /**
      * Gets the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @return The value.
      */
    public java.lang.String getErrorMsg() {
      return ErrorMsg;
    }


    /**
      * Sets the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @param value The value of 'ErrorMsg'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setErrorMsg(java.lang.String value) {
      validate(fields()[1], value);
      this.ErrorMsg = value;
      fieldSetFlags()[1] = true;
      return this;
    }

    /**
      * Checks whether the 'ErrorMsg' field has been set.
      * FTDC响应信息 - 错误信息
      * @return True if the 'ErrorMsg' field has been set, false otherwise.
      */
    public boolean hasErrorMsg() {
      return fieldSetFlags()[1];
    }


    /**
      * Clears the value of the 'ErrorMsg' field.
      * FTDC响应信息 - 错误信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearErrorMsg() {
      ErrorMsg = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /**
      * Gets the value of the 'RequestID' field.
      * 请求ID
      * @return The value.
      */
    public int getRequestID() {
      return RequestID;
    }


    /**
      * Sets the value of the 'RequestID' field.
      * 请求ID
      * @param value The value of 'RequestID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setRequestID(int value) {
      validate(fields()[2], value);
      this.RequestID = value;
      fieldSetFlags()[2] = true;
      return this;
    }

    /**
      * Checks whether the 'RequestID' field has been set.
      * 请求ID
      * @return True if the 'RequestID' field has been set, false otherwise.
      */
    public boolean hasRequestID() {
      return fieldSetFlags()[2];
    }


    /**
      * Clears the value of the 'RequestID' field.
      * 请求ID
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearRequestID() {
      fieldSetFlags()[2] = false;
      return this;
    }

    /**
      * Gets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return The value.
      */
    public boolean getIsLast() {
      return IsLast;
    }


    /**
      * Sets the value of the 'IsLast' field.
      * 是否最后一条信息
      * @param value The value of 'IsLast'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setIsLast(boolean value) {
      validate(fields()[3], value);
      this.IsLast = value;
      fieldSetFlags()[3] = true;
      return this;
    }

    /**
      * Checks whether the 'IsLast' field has been set.
      * 是否最后一条信息
      * @return True if the 'IsLast' field has been set, false otherwise.
      */
    public boolean hasIsLast() {
      return fieldSetFlags()[3];
    }


    /**
      * Clears the value of the 'IsLast' field.
      * 是否最后一条信息
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearIsLast() {
      fieldSetFlags()[3] = false;
      return this;
    }

    /**
      * Gets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return The value.
      */
    public java.lang.String getBrokerID() {
      return BrokerID;
    }


    /**
      * Sets the value of the 'BrokerID' field.
      * 经纪公司代码
      * @param value The value of 'BrokerID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setBrokerID(java.lang.String value) {
      validate(fields()[4], value);
      this.BrokerID = value;
      fieldSetFlags()[4] = true;
      return this;
    }

    /**
      * Checks whether the 'BrokerID' field has been set.
      * 经纪公司代码
      * @return True if the 'BrokerID' field has been set, false otherwise.
      */
    public boolean hasBrokerID() {
      return fieldSetFlags()[4];
    }


    /**
      * Clears the value of the 'BrokerID' field.
      * 经纪公司代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearBrokerID() {
      BrokerID = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /**
      * Gets the value of the 'AccountID' field.
      * 投资者账号
      * @return The value.
      */
    public java.lang.String getAccountID() {
      return AccountID;
    }


    /**
      * Sets the value of the 'AccountID' field.
      * 投资者账号
      * @param value The value of 'AccountID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setAccountID(java.lang.String value) {
      validate(fields()[5], value);
      this.AccountID = value;
      fieldSetFlags()[5] = true;
      return this;
    }

    /**
      * Checks whether the 'AccountID' field has been set.
      * 投资者账号
      * @return True if the 'AccountID' field has been set, false otherwise.
      */
    public boolean hasAccountID() {
      return fieldSetFlags()[5];
    }


    /**
      * Clears the value of the 'AccountID' field.
      * 投资者账号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearAccountID() {
      AccountID = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreMortgage' field.
      * 上次质押金额
      * @return The value.
      */
    public double getPreMortgage() {
      return PreMortgage;
    }


    /**
      * Sets the value of the 'PreMortgage' field.
      * 上次质押金额
      * @param value The value of 'PreMortgage'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreMortgage(double value) {
      validate(fields()[6], value);
      this.PreMortgage = value;
      fieldSetFlags()[6] = true;
      return this;
    }

    /**
      * Checks whether the 'PreMortgage' field has been set.
      * 上次质押金额
      * @return True if the 'PreMortgage' field has been set, false otherwise.
      */
    public boolean hasPreMortgage() {
      return fieldSetFlags()[6];
    }


    /**
      * Clears the value of the 'PreMortgage' field.
      * 上次质押金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreMortgage() {
      fieldSetFlags()[6] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreCredit' field.
      * 上次信用额度
      * @return The value.
      */
    public double getPreCredit() {
      return PreCredit;
    }


    /**
      * Sets the value of the 'PreCredit' field.
      * 上次信用额度
      * @param value The value of 'PreCredit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreCredit(double value) {
      validate(fields()[7], value);
      this.PreCredit = value;
      fieldSetFlags()[7] = true;
      return this;
    }

    /**
      * Checks whether the 'PreCredit' field has been set.
      * 上次信用额度
      * @return True if the 'PreCredit' field has been set, false otherwise.
      */
    public boolean hasPreCredit() {
      return fieldSetFlags()[7];
    }


    /**
      * Clears the value of the 'PreCredit' field.
      * 上次信用额度
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreCredit() {
      fieldSetFlags()[7] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreDeposit' field.
      * 上次存款额
      * @return The value.
      */
    public double getPreDeposit() {
      return PreDeposit;
    }


    /**
      * Sets the value of the 'PreDeposit' field.
      * 上次存款额
      * @param value The value of 'PreDeposit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreDeposit(double value) {
      validate(fields()[8], value);
      this.PreDeposit = value;
      fieldSetFlags()[8] = true;
      return this;
    }

    /**
      * Checks whether the 'PreDeposit' field has been set.
      * 上次存款额
      * @return True if the 'PreDeposit' field has been set, false otherwise.
      */
    public boolean hasPreDeposit() {
      return fieldSetFlags()[8];
    }


    /**
      * Clears the value of the 'PreDeposit' field.
      * 上次存款额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreDeposit() {
      fieldSetFlags()[8] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreBalance' field.
      * 上次结算准备金
      * @return The value.
      */
    public double getPreBalance() {
      return PreBalance;
    }


    /**
      * Sets the value of the 'PreBalance' field.
      * 上次结算准备金
      * @param value The value of 'PreBalance'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreBalance(double value) {
      validate(fields()[9], value);
      this.PreBalance = value;
      fieldSetFlags()[9] = true;
      return this;
    }

    /**
      * Checks whether the 'PreBalance' field has been set.
      * 上次结算准备金
      * @return True if the 'PreBalance' field has been set, false otherwise.
      */
    public boolean hasPreBalance() {
      return fieldSetFlags()[9];
    }


    /**
      * Clears the value of the 'PreBalance' field.
      * 上次结算准备金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreBalance() {
      fieldSetFlags()[9] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreMargin' field.
      * 上次占用的保证金
      * @return The value.
      */
    public double getPreMargin() {
      return PreMargin;
    }


    /**
      * Sets the value of the 'PreMargin' field.
      * 上次占用的保证金
      * @param value The value of 'PreMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreMargin(double value) {
      validate(fields()[10], value);
      this.PreMargin = value;
      fieldSetFlags()[10] = true;
      return this;
    }

    /**
      * Checks whether the 'PreMargin' field has been set.
      * 上次占用的保证金
      * @return True if the 'PreMargin' field has been set, false otherwise.
      */
    public boolean hasPreMargin() {
      return fieldSetFlags()[10];
    }


    /**
      * Clears the value of the 'PreMargin' field.
      * 上次占用的保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreMargin() {
      fieldSetFlags()[10] = false;
      return this;
    }

    /**
      * Gets the value of the 'InterestBase' field.
      * 利息基数
      * @return The value.
      */
    public double getInterestBase() {
      return InterestBase;
    }


    /**
      * Sets the value of the 'InterestBase' field.
      * 利息基数
      * @param value The value of 'InterestBase'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setInterestBase(double value) {
      validate(fields()[11], value);
      this.InterestBase = value;
      fieldSetFlags()[11] = true;
      return this;
    }

    /**
      * Checks whether the 'InterestBase' field has been set.
      * 利息基数
      * @return True if the 'InterestBase' field has been set, false otherwise.
      */
    public boolean hasInterestBase() {
      return fieldSetFlags()[11];
    }


    /**
      * Clears the value of the 'InterestBase' field.
      * 利息基数
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearInterestBase() {
      fieldSetFlags()[11] = false;
      return this;
    }

    /**
      * Gets the value of the 'Interest' field.
      * 利息收入
      * @return The value.
      */
    public double getInterest() {
      return Interest;
    }


    /**
      * Sets the value of the 'Interest' field.
      * 利息收入
      * @param value The value of 'Interest'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setInterest(double value) {
      validate(fields()[12], value);
      this.Interest = value;
      fieldSetFlags()[12] = true;
      return this;
    }

    /**
      * Checks whether the 'Interest' field has been set.
      * 利息收入
      * @return True if the 'Interest' field has been set, false otherwise.
      */
    public boolean hasInterest() {
      return fieldSetFlags()[12];
    }


    /**
      * Clears the value of the 'Interest' field.
      * 利息收入
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearInterest() {
      fieldSetFlags()[12] = false;
      return this;
    }

    /**
      * Gets the value of the 'Deposit' field.
      * 入金金额
      * @return The value.
      */
    public double getDeposit() {
      return Deposit;
    }


    /**
      * Sets the value of the 'Deposit' field.
      * 入金金额
      * @param value The value of 'Deposit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setDeposit(double value) {
      validate(fields()[13], value);
      this.Deposit = value;
      fieldSetFlags()[13] = true;
      return this;
    }

    /**
      * Checks whether the 'Deposit' field has been set.
      * 入金金额
      * @return True if the 'Deposit' field has been set, false otherwise.
      */
    public boolean hasDeposit() {
      return fieldSetFlags()[13];
    }


    /**
      * Clears the value of the 'Deposit' field.
      * 入金金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearDeposit() {
      fieldSetFlags()[13] = false;
      return this;
    }

    /**
      * Gets the value of the 'Withdraw' field.
      * 出金金额
      * @return The value.
      */
    public double getWithdraw() {
      return Withdraw;
    }


    /**
      * Sets the value of the 'Withdraw' field.
      * 出金金额
      * @param value The value of 'Withdraw'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setWithdraw(double value) {
      validate(fields()[14], value);
      this.Withdraw = value;
      fieldSetFlags()[14] = true;
      return this;
    }

    /**
      * Checks whether the 'Withdraw' field has been set.
      * 出金金额
      * @return True if the 'Withdraw' field has been set, false otherwise.
      */
    public boolean hasWithdraw() {
      return fieldSetFlags()[14];
    }


    /**
      * Clears the value of the 'Withdraw' field.
      * 出金金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearWithdraw() {
      fieldSetFlags()[14] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrozenMargin' field.
      * 冻结的保证金
      * @return The value.
      */
    public double getFrozenMargin() {
      return FrozenMargin;
    }


    /**
      * Sets the value of the 'FrozenMargin' field.
      * 冻结的保证金
      * @param value The value of 'FrozenMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFrozenMargin(double value) {
      validate(fields()[15], value);
      this.FrozenMargin = value;
      fieldSetFlags()[15] = true;
      return this;
    }

    /**
      * Checks whether the 'FrozenMargin' field has been set.
      * 冻结的保证金
      * @return True if the 'FrozenMargin' field has been set, false otherwise.
      */
    public boolean hasFrozenMargin() {
      return fieldSetFlags()[15];
    }


    /**
      * Clears the value of the 'FrozenMargin' field.
      * 冻结的保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFrozenMargin() {
      fieldSetFlags()[15] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrozenCash' field.
      * 冻结的资金
      * @return The value.
      */
    public double getFrozenCash() {
      return FrozenCash;
    }


    /**
      * Sets the value of the 'FrozenCash' field.
      * 冻结的资金
      * @param value The value of 'FrozenCash'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFrozenCash(double value) {
      validate(fields()[16], value);
      this.FrozenCash = value;
      fieldSetFlags()[16] = true;
      return this;
    }

    /**
      * Checks whether the 'FrozenCash' field has been set.
      * 冻结的资金
      * @return True if the 'FrozenCash' field has been set, false otherwise.
      */
    public boolean hasFrozenCash() {
      return fieldSetFlags()[16];
    }


    /**
      * Clears the value of the 'FrozenCash' field.
      * 冻结的资金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFrozenCash() {
      fieldSetFlags()[16] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrozenCommission' field.
      * 冻结的手续费
      * @return The value.
      */
    public double getFrozenCommission() {
      return FrozenCommission;
    }


    /**
      * Sets the value of the 'FrozenCommission' field.
      * 冻结的手续费
      * @param value The value of 'FrozenCommission'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFrozenCommission(double value) {
      validate(fields()[17], value);
      this.FrozenCommission = value;
      fieldSetFlags()[17] = true;
      return this;
    }

    /**
      * Checks whether the 'FrozenCommission' field has been set.
      * 冻结的手续费
      * @return True if the 'FrozenCommission' field has been set, false otherwise.
      */
    public boolean hasFrozenCommission() {
      return fieldSetFlags()[17];
    }


    /**
      * Clears the value of the 'FrozenCommission' field.
      * 冻结的手续费
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFrozenCommission() {
      fieldSetFlags()[17] = false;
      return this;
    }

    /**
      * Gets the value of the 'CurrMargin' field.
      * 当前保证金总额
      * @return The value.
      */
    public double getCurrMargin() {
      return CurrMargin;
    }


    /**
      * Sets the value of the 'CurrMargin' field.
      * 当前保证金总额
      * @param value The value of 'CurrMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCurrMargin(double value) {
      validate(fields()[18], value);
      this.CurrMargin = value;
      fieldSetFlags()[18] = true;
      return this;
    }

    /**
      * Checks whether the 'CurrMargin' field has been set.
      * 当前保证金总额
      * @return True if the 'CurrMargin' field has been set, false otherwise.
      */
    public boolean hasCurrMargin() {
      return fieldSetFlags()[18];
    }


    /**
      * Clears the value of the 'CurrMargin' field.
      * 当前保证金总额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCurrMargin() {
      fieldSetFlags()[18] = false;
      return this;
    }

    /**
      * Gets the value of the 'CashIn' field.
      * 资金差额
      * @return The value.
      */
    public double getCashIn() {
      return CashIn;
    }


    /**
      * Sets the value of the 'CashIn' field.
      * 资金差额
      * @param value The value of 'CashIn'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCashIn(double value) {
      validate(fields()[19], value);
      this.CashIn = value;
      fieldSetFlags()[19] = true;
      return this;
    }

    /**
      * Checks whether the 'CashIn' field has been set.
      * 资金差额
      * @return True if the 'CashIn' field has been set, false otherwise.
      */
    public boolean hasCashIn() {
      return fieldSetFlags()[19];
    }


    /**
      * Clears the value of the 'CashIn' field.
      * 资金差额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCashIn() {
      fieldSetFlags()[19] = false;
      return this;
    }

    /**
      * Gets the value of the 'Commission' field.
      * 手续费
      * @return The value.
      */
    public double getCommission() {
      return Commission;
    }


    /**
      * Sets the value of the 'Commission' field.
      * 手续费
      * @param value The value of 'Commission'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCommission(double value) {
      validate(fields()[20], value);
      this.Commission = value;
      fieldSetFlags()[20] = true;
      return this;
    }

    /**
      * Checks whether the 'Commission' field has been set.
      * 手续费
      * @return True if the 'Commission' field has been set, false otherwise.
      */
    public boolean hasCommission() {
      return fieldSetFlags()[20];
    }


    /**
      * Clears the value of the 'Commission' field.
      * 手续费
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCommission() {
      fieldSetFlags()[20] = false;
      return this;
    }

    /**
      * Gets the value of the 'CloseProfit' field.
      * 平仓盈亏
      * @return The value.
      */
    public double getCloseProfit() {
      return CloseProfit;
    }


    /**
      * Sets the value of the 'CloseProfit' field.
      * 平仓盈亏
      * @param value The value of 'CloseProfit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCloseProfit(double value) {
      validate(fields()[21], value);
      this.CloseProfit = value;
      fieldSetFlags()[21] = true;
      return this;
    }

    /**
      * Checks whether the 'CloseProfit' field has been set.
      * 平仓盈亏
      * @return True if the 'CloseProfit' field has been set, false otherwise.
      */
    public boolean hasCloseProfit() {
      return fieldSetFlags()[21];
    }


    /**
      * Clears the value of the 'CloseProfit' field.
      * 平仓盈亏
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCloseProfit() {
      fieldSetFlags()[21] = false;
      return this;
    }

    /**
      * Gets the value of the 'PositionProfit' field.
      * 持仓盈亏
      * @return The value.
      */
    public double getPositionProfit() {
      return PositionProfit;
    }


    /**
      * Sets the value of the 'PositionProfit' field.
      * 持仓盈亏
      * @param value The value of 'PositionProfit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPositionProfit(double value) {
      validate(fields()[22], value);
      this.PositionProfit = value;
      fieldSetFlags()[22] = true;
      return this;
    }

    /**
      * Checks whether the 'PositionProfit' field has been set.
      * 持仓盈亏
      * @return True if the 'PositionProfit' field has been set, false otherwise.
      */
    public boolean hasPositionProfit() {
      return fieldSetFlags()[22];
    }


    /**
      * Clears the value of the 'PositionProfit' field.
      * 持仓盈亏
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPositionProfit() {
      fieldSetFlags()[22] = false;
      return this;
    }

    /**
      * Gets the value of the 'Balance' field.
      * 期货结算准备金
      * @return The value.
      */
    public double getBalance() {
      return Balance;
    }


    /**
      * Sets the value of the 'Balance' field.
      * 期货结算准备金
      * @param value The value of 'Balance'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setBalance(double value) {
      validate(fields()[23], value);
      this.Balance = value;
      fieldSetFlags()[23] = true;
      return this;
    }

    /**
      * Checks whether the 'Balance' field has been set.
      * 期货结算准备金
      * @return True if the 'Balance' field has been set, false otherwise.
      */
    public boolean hasBalance() {
      return fieldSetFlags()[23];
    }


    /**
      * Clears the value of the 'Balance' field.
      * 期货结算准备金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearBalance() {
      fieldSetFlags()[23] = false;
      return this;
    }

    /**
      * Gets the value of the 'Available' field.
      * 可用资金
      * @return The value.
      */
    public double getAvailable() {
      return Available;
    }


    /**
      * Sets the value of the 'Available' field.
      * 可用资金
      * @param value The value of 'Available'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setAvailable(double value) {
      validate(fields()[24], value);
      this.Available = value;
      fieldSetFlags()[24] = true;
      return this;
    }

    /**
      * Checks whether the 'Available' field has been set.
      * 可用资金
      * @return True if the 'Available' field has been set, false otherwise.
      */
    public boolean hasAvailable() {
      return fieldSetFlags()[24];
    }


    /**
      * Clears the value of the 'Available' field.
      * 可用资金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearAvailable() {
      fieldSetFlags()[24] = false;
      return this;
    }

    /**
      * Gets the value of the 'WithdrawQuota' field.
      * 可取资金
      * @return The value.
      */
    public double getWithdrawQuota() {
      return WithdrawQuota;
    }


    /**
      * Sets the value of the 'WithdrawQuota' field.
      * 可取资金
      * @param value The value of 'WithdrawQuota'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setWithdrawQuota(double value) {
      validate(fields()[25], value);
      this.WithdrawQuota = value;
      fieldSetFlags()[25] = true;
      return this;
    }

    /**
      * Checks whether the 'WithdrawQuota' field has been set.
      * 可取资金
      * @return True if the 'WithdrawQuota' field has been set, false otherwise.
      */
    public boolean hasWithdrawQuota() {
      return fieldSetFlags()[25];
    }


    /**
      * Clears the value of the 'WithdrawQuota' field.
      * 可取资金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearWithdrawQuota() {
      fieldSetFlags()[25] = false;
      return this;
    }

    /**
      * Gets the value of the 'Reserve' field.
      * 基本准备金
      * @return The value.
      */
    public double getReserve() {
      return Reserve;
    }


    /**
      * Sets the value of the 'Reserve' field.
      * 基本准备金
      * @param value The value of 'Reserve'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setReserve(double value) {
      validate(fields()[26], value);
      this.Reserve = value;
      fieldSetFlags()[26] = true;
      return this;
    }

    /**
      * Checks whether the 'Reserve' field has been set.
      * 基本准备金
      * @return True if the 'Reserve' field has been set, false otherwise.
      */
    public boolean hasReserve() {
      return fieldSetFlags()[26];
    }


    /**
      * Clears the value of the 'Reserve' field.
      * 基本准备金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearReserve() {
      fieldSetFlags()[26] = false;
      return this;
    }

    /**
      * Gets the value of the 'TradingDay' field.
      * 交易日
      * @return The value.
      */
    public java.lang.String getTradingDay() {
      return TradingDay;
    }


    /**
      * Sets the value of the 'TradingDay' field.
      * 交易日
      * @param value The value of 'TradingDay'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setTradingDay(java.lang.String value) {
      validate(fields()[27], value);
      this.TradingDay = value;
      fieldSetFlags()[27] = true;
      return this;
    }

    /**
      * Checks whether the 'TradingDay' field has been set.
      * 交易日
      * @return True if the 'TradingDay' field has been set, false otherwise.
      */
    public boolean hasTradingDay() {
      return fieldSetFlags()[27];
    }


    /**
      * Clears the value of the 'TradingDay' field.
      * 交易日
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearTradingDay() {
      TradingDay = null;
      fieldSetFlags()[27] = false;
      return this;
    }

    /**
      * Gets the value of the 'SettlementID' field.
      * 结算编号
      * @return The value.
      */
    public int getSettlementID() {
      return SettlementID;
    }


    /**
      * Sets the value of the 'SettlementID' field.
      * 结算编号
      * @param value The value of 'SettlementID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSettlementID(int value) {
      validate(fields()[28], value);
      this.SettlementID = value;
      fieldSetFlags()[28] = true;
      return this;
    }

    /**
      * Checks whether the 'SettlementID' field has been set.
      * 结算编号
      * @return True if the 'SettlementID' field has been set, false otherwise.
      */
    public boolean hasSettlementID() {
      return fieldSetFlags()[28];
    }


    /**
      * Clears the value of the 'SettlementID' field.
      * 结算编号
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSettlementID() {
      fieldSetFlags()[28] = false;
      return this;
    }

    /**
      * Gets the value of the 'Credit' field.
      * 信用额度
      * @return The value.
      */
    public double getCredit() {
      return Credit;
    }


    /**
      * Sets the value of the 'Credit' field.
      * 信用额度
      * @param value The value of 'Credit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCredit(double value) {
      validate(fields()[29], value);
      this.Credit = value;
      fieldSetFlags()[29] = true;
      return this;
    }

    /**
      * Checks whether the 'Credit' field has been set.
      * 信用额度
      * @return True if the 'Credit' field has been set, false otherwise.
      */
    public boolean hasCredit() {
      return fieldSetFlags()[29];
    }


    /**
      * Clears the value of the 'Credit' field.
      * 信用额度
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCredit() {
      fieldSetFlags()[29] = false;
      return this;
    }

    /**
      * Gets the value of the 'Mortgage' field.
      * 质押金额
      * @return The value.
      */
    public double getMortgage() {
      return Mortgage;
    }


    /**
      * Sets the value of the 'Mortgage' field.
      * 质押金额
      * @param value The value of 'Mortgage'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setMortgage(double value) {
      validate(fields()[30], value);
      this.Mortgage = value;
      fieldSetFlags()[30] = true;
      return this;
    }

    /**
      * Checks whether the 'Mortgage' field has been set.
      * 质押金额
      * @return True if the 'Mortgage' field has been set, false otherwise.
      */
    public boolean hasMortgage() {
      return fieldSetFlags()[30];
    }


    /**
      * Clears the value of the 'Mortgage' field.
      * 质押金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearMortgage() {
      fieldSetFlags()[30] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeMargin' field.
      * 交易所保证金
      * @return The value.
      */
    public double getExchangeMargin() {
      return ExchangeMargin;
    }


    /**
      * Sets the value of the 'ExchangeMargin' field.
      * 交易所保证金
      * @param value The value of 'ExchangeMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setExchangeMargin(double value) {
      validate(fields()[31], value);
      this.ExchangeMargin = value;
      fieldSetFlags()[31] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeMargin' field has been set.
      * 交易所保证金
      * @return True if the 'ExchangeMargin' field has been set, false otherwise.
      */
    public boolean hasExchangeMargin() {
      return fieldSetFlags()[31];
    }


    /**
      * Clears the value of the 'ExchangeMargin' field.
      * 交易所保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearExchangeMargin() {
      fieldSetFlags()[31] = false;
      return this;
    }

    /**
      * Gets the value of the 'DeliveryMargin' field.
      * 投资者交割保证金
      * @return The value.
      */
    public double getDeliveryMargin() {
      return DeliveryMargin;
    }


    /**
      * Sets the value of the 'DeliveryMargin' field.
      * 投资者交割保证金
      * @param value The value of 'DeliveryMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setDeliveryMargin(double value) {
      validate(fields()[32], value);
      this.DeliveryMargin = value;
      fieldSetFlags()[32] = true;
      return this;
    }

    /**
      * Checks whether the 'DeliveryMargin' field has been set.
      * 投资者交割保证金
      * @return True if the 'DeliveryMargin' field has been set, false otherwise.
      */
    public boolean hasDeliveryMargin() {
      return fieldSetFlags()[32];
    }


    /**
      * Clears the value of the 'DeliveryMargin' field.
      * 投资者交割保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearDeliveryMargin() {
      fieldSetFlags()[32] = false;
      return this;
    }

    /**
      * Gets the value of the 'ExchangeDeliveryMargin' field.
      * 交易所交割保证金
      * @return The value.
      */
    public double getExchangeDeliveryMargin() {
      return ExchangeDeliveryMargin;
    }


    /**
      * Sets the value of the 'ExchangeDeliveryMargin' field.
      * 交易所交割保证金
      * @param value The value of 'ExchangeDeliveryMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setExchangeDeliveryMargin(double value) {
      validate(fields()[33], value);
      this.ExchangeDeliveryMargin = value;
      fieldSetFlags()[33] = true;
      return this;
    }

    /**
      * Checks whether the 'ExchangeDeliveryMargin' field has been set.
      * 交易所交割保证金
      * @return True if the 'ExchangeDeliveryMargin' field has been set, false otherwise.
      */
    public boolean hasExchangeDeliveryMargin() {
      return fieldSetFlags()[33];
    }


    /**
      * Clears the value of the 'ExchangeDeliveryMargin' field.
      * 交易所交割保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearExchangeDeliveryMargin() {
      fieldSetFlags()[33] = false;
      return this;
    }

    /**
      * Gets the value of the 'ReserveBalance' field.
      * 保底期货结算准备金
      * @return The value.
      */
    public double getReserveBalance() {
      return ReserveBalance;
    }


    /**
      * Sets the value of the 'ReserveBalance' field.
      * 保底期货结算准备金
      * @param value The value of 'ReserveBalance'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setReserveBalance(double value) {
      validate(fields()[34], value);
      this.ReserveBalance = value;
      fieldSetFlags()[34] = true;
      return this;
    }

    /**
      * Checks whether the 'ReserveBalance' field has been set.
      * 保底期货结算准备金
      * @return True if the 'ReserveBalance' field has been set, false otherwise.
      */
    public boolean hasReserveBalance() {
      return fieldSetFlags()[34];
    }


    /**
      * Clears the value of the 'ReserveBalance' field.
      * 保底期货结算准备金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearReserveBalance() {
      fieldSetFlags()[34] = false;
      return this;
    }

    /**
      * Gets the value of the 'CurrencyID' field.
      * 币种代码
      * @return The value.
      */
    public java.lang.String getCurrencyID() {
      return CurrencyID;
    }


    /**
      * Sets the value of the 'CurrencyID' field.
      * 币种代码
      * @param value The value of 'CurrencyID'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setCurrencyID(java.lang.String value) {
      validate(fields()[35], value);
      this.CurrencyID = value;
      fieldSetFlags()[35] = true;
      return this;
    }

    /**
      * Checks whether the 'CurrencyID' field has been set.
      * 币种代码
      * @return True if the 'CurrencyID' field has been set, false otherwise.
      */
    public boolean hasCurrencyID() {
      return fieldSetFlags()[35];
    }


    /**
      * Clears the value of the 'CurrencyID' field.
      * 币种代码
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearCurrencyID() {
      CurrencyID = null;
      fieldSetFlags()[35] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreFundMortgageIn' field.
      * 上次货币质入金额
      * @return The value.
      */
    public double getPreFundMortgageIn() {
      return PreFundMortgageIn;
    }


    /**
      * Sets the value of the 'PreFundMortgageIn' field.
      * 上次货币质入金额
      * @param value The value of 'PreFundMortgageIn'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreFundMortgageIn(double value) {
      validate(fields()[36], value);
      this.PreFundMortgageIn = value;
      fieldSetFlags()[36] = true;
      return this;
    }

    /**
      * Checks whether the 'PreFundMortgageIn' field has been set.
      * 上次货币质入金额
      * @return True if the 'PreFundMortgageIn' field has been set, false otherwise.
      */
    public boolean hasPreFundMortgageIn() {
      return fieldSetFlags()[36];
    }


    /**
      * Clears the value of the 'PreFundMortgageIn' field.
      * 上次货币质入金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreFundMortgageIn() {
      fieldSetFlags()[36] = false;
      return this;
    }

    /**
      * Gets the value of the 'PreFundMortgageOut' field.
      * 上次货币质出金额
      * @return The value.
      */
    public double getPreFundMortgageOut() {
      return PreFundMortgageOut;
    }


    /**
      * Sets the value of the 'PreFundMortgageOut' field.
      * 上次货币质出金额
      * @param value The value of 'PreFundMortgageOut'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setPreFundMortgageOut(double value) {
      validate(fields()[37], value);
      this.PreFundMortgageOut = value;
      fieldSetFlags()[37] = true;
      return this;
    }

    /**
      * Checks whether the 'PreFundMortgageOut' field has been set.
      * 上次货币质出金额
      * @return True if the 'PreFundMortgageOut' field has been set, false otherwise.
      */
    public boolean hasPreFundMortgageOut() {
      return fieldSetFlags()[37];
    }


    /**
      * Clears the value of the 'PreFundMortgageOut' field.
      * 上次货币质出金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearPreFundMortgageOut() {
      fieldSetFlags()[37] = false;
      return this;
    }

    /**
      * Gets the value of the 'FundMortgageIn' field.
      * 货币质入金额
      * @return The value.
      */
    public double getFundMortgageIn() {
      return FundMortgageIn;
    }


    /**
      * Sets the value of the 'FundMortgageIn' field.
      * 货币质入金额
      * @param value The value of 'FundMortgageIn'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFundMortgageIn(double value) {
      validate(fields()[38], value);
      this.FundMortgageIn = value;
      fieldSetFlags()[38] = true;
      return this;
    }

    /**
      * Checks whether the 'FundMortgageIn' field has been set.
      * 货币质入金额
      * @return True if the 'FundMortgageIn' field has been set, false otherwise.
      */
    public boolean hasFundMortgageIn() {
      return fieldSetFlags()[38];
    }


    /**
      * Clears the value of the 'FundMortgageIn' field.
      * 货币质入金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFundMortgageIn() {
      fieldSetFlags()[38] = false;
      return this;
    }

    /**
      * Gets the value of the 'FundMortgageOut' field.
      * 货币质出金额
      * @return The value.
      */
    public double getFundMortgageOut() {
      return FundMortgageOut;
    }


    /**
      * Sets the value of the 'FundMortgageOut' field.
      * 货币质出金额
      * @param value The value of 'FundMortgageOut'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFundMortgageOut(double value) {
      validate(fields()[39], value);
      this.FundMortgageOut = value;
      fieldSetFlags()[39] = true;
      return this;
    }

    /**
      * Checks whether the 'FundMortgageOut' field has been set.
      * 货币质出金额
      * @return True if the 'FundMortgageOut' field has been set, false otherwise.
      */
    public boolean hasFundMortgageOut() {
      return fieldSetFlags()[39];
    }


    /**
      * Clears the value of the 'FundMortgageOut' field.
      * 货币质出金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFundMortgageOut() {
      fieldSetFlags()[39] = false;
      return this;
    }

    /**
      * Gets the value of the 'FundMortgageAvailable' field.
      * 货币质押余额
      * @return The value.
      */
    public double getFundMortgageAvailable() {
      return FundMortgageAvailable;
    }


    /**
      * Sets the value of the 'FundMortgageAvailable' field.
      * 货币质押余额
      * @param value The value of 'FundMortgageAvailable'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFundMortgageAvailable(double value) {
      validate(fields()[40], value);
      this.FundMortgageAvailable = value;
      fieldSetFlags()[40] = true;
      return this;
    }

    /**
      * Checks whether the 'FundMortgageAvailable' field has been set.
      * 货币质押余额
      * @return True if the 'FundMortgageAvailable' field has been set, false otherwise.
      */
    public boolean hasFundMortgageAvailable() {
      return fieldSetFlags()[40];
    }


    /**
      * Clears the value of the 'FundMortgageAvailable' field.
      * 货币质押余额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFundMortgageAvailable() {
      fieldSetFlags()[40] = false;
      return this;
    }

    /**
      * Gets the value of the 'MortgageableFund' field.
      * 可质押货币金额
      * @return The value.
      */
    public double getMortgageableFund() {
      return MortgageableFund;
    }


    /**
      * Sets the value of the 'MortgageableFund' field.
      * 可质押货币金额
      * @param value The value of 'MortgageableFund'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setMortgageableFund(double value) {
      validate(fields()[41], value);
      this.MortgageableFund = value;
      fieldSetFlags()[41] = true;
      return this;
    }

    /**
      * Checks whether the 'MortgageableFund' field has been set.
      * 可质押货币金额
      * @return True if the 'MortgageableFund' field has been set, false otherwise.
      */
    public boolean hasMortgageableFund() {
      return fieldSetFlags()[41];
    }


    /**
      * Clears the value of the 'MortgageableFund' field.
      * 可质押货币金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearMortgageableFund() {
      fieldSetFlags()[41] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductMargin' field.
      * 特殊产品占用保证金
      * @return The value.
      */
    public double getSpecProductMargin() {
      return SpecProductMargin;
    }


    /**
      * Sets the value of the 'SpecProductMargin' field.
      * 特殊产品占用保证金
      * @param value The value of 'SpecProductMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductMargin(double value) {
      validate(fields()[42], value);
      this.SpecProductMargin = value;
      fieldSetFlags()[42] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductMargin' field has been set.
      * 特殊产品占用保证金
      * @return True if the 'SpecProductMargin' field has been set, false otherwise.
      */
    public boolean hasSpecProductMargin() {
      return fieldSetFlags()[42];
    }


    /**
      * Clears the value of the 'SpecProductMargin' field.
      * 特殊产品占用保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductMargin() {
      fieldSetFlags()[42] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductFrozenMargin' field.
      * 特殊产品冻结保证金
      * @return The value.
      */
    public double getSpecProductFrozenMargin() {
      return SpecProductFrozenMargin;
    }


    /**
      * Sets the value of the 'SpecProductFrozenMargin' field.
      * 特殊产品冻结保证金
      * @param value The value of 'SpecProductFrozenMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductFrozenMargin(double value) {
      validate(fields()[43], value);
      this.SpecProductFrozenMargin = value;
      fieldSetFlags()[43] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductFrozenMargin' field has been set.
      * 特殊产品冻结保证金
      * @return True if the 'SpecProductFrozenMargin' field has been set, false otherwise.
      */
    public boolean hasSpecProductFrozenMargin() {
      return fieldSetFlags()[43];
    }


    /**
      * Clears the value of the 'SpecProductFrozenMargin' field.
      * 特殊产品冻结保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductFrozenMargin() {
      fieldSetFlags()[43] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductCommission' field.
      * 特殊产品手续费
      * @return The value.
      */
    public double getSpecProductCommission() {
      return SpecProductCommission;
    }


    /**
      * Sets the value of the 'SpecProductCommission' field.
      * 特殊产品手续费
      * @param value The value of 'SpecProductCommission'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductCommission(double value) {
      validate(fields()[44], value);
      this.SpecProductCommission = value;
      fieldSetFlags()[44] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductCommission' field has been set.
      * 特殊产品手续费
      * @return True if the 'SpecProductCommission' field has been set, false otherwise.
      */
    public boolean hasSpecProductCommission() {
      return fieldSetFlags()[44];
    }


    /**
      * Clears the value of the 'SpecProductCommission' field.
      * 特殊产品手续费
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductCommission() {
      fieldSetFlags()[44] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductFrozenCommission' field.
      * 特殊产品冻结手续费
      * @return The value.
      */
    public double getSpecProductFrozenCommission() {
      return SpecProductFrozenCommission;
    }


    /**
      * Sets the value of the 'SpecProductFrozenCommission' field.
      * 特殊产品冻结手续费
      * @param value The value of 'SpecProductFrozenCommission'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductFrozenCommission(double value) {
      validate(fields()[45], value);
      this.SpecProductFrozenCommission = value;
      fieldSetFlags()[45] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductFrozenCommission' field has been set.
      * 特殊产品冻结手续费
      * @return True if the 'SpecProductFrozenCommission' field has been set, false otherwise.
      */
    public boolean hasSpecProductFrozenCommission() {
      return fieldSetFlags()[45];
    }


    /**
      * Clears the value of the 'SpecProductFrozenCommission' field.
      * 特殊产品冻结手续费
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductFrozenCommission() {
      fieldSetFlags()[45] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductPositionProfit' field.
      * 特殊产品持仓盈亏
      * @return The value.
      */
    public double getSpecProductPositionProfit() {
      return SpecProductPositionProfit;
    }


    /**
      * Sets the value of the 'SpecProductPositionProfit' field.
      * 特殊产品持仓盈亏
      * @param value The value of 'SpecProductPositionProfit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductPositionProfit(double value) {
      validate(fields()[46], value);
      this.SpecProductPositionProfit = value;
      fieldSetFlags()[46] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductPositionProfit' field has been set.
      * 特殊产品持仓盈亏
      * @return True if the 'SpecProductPositionProfit' field has been set, false otherwise.
      */
    public boolean hasSpecProductPositionProfit() {
      return fieldSetFlags()[46];
    }


    /**
      * Clears the value of the 'SpecProductPositionProfit' field.
      * 特殊产品持仓盈亏
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductPositionProfit() {
      fieldSetFlags()[46] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductCloseProfit' field.
      * 特殊产品平仓盈亏
      * @return The value.
      */
    public double getSpecProductCloseProfit() {
      return SpecProductCloseProfit;
    }


    /**
      * Sets the value of the 'SpecProductCloseProfit' field.
      * 特殊产品平仓盈亏
      * @param value The value of 'SpecProductCloseProfit'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductCloseProfit(double value) {
      validate(fields()[47], value);
      this.SpecProductCloseProfit = value;
      fieldSetFlags()[47] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductCloseProfit' field has been set.
      * 特殊产品平仓盈亏
      * @return True if the 'SpecProductCloseProfit' field has been set, false otherwise.
      */
    public boolean hasSpecProductCloseProfit() {
      return fieldSetFlags()[47];
    }


    /**
      * Clears the value of the 'SpecProductCloseProfit' field.
      * 特殊产品平仓盈亏
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductCloseProfit() {
      fieldSetFlags()[47] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductPositionProfitByAlg' field.
      * 根据持仓盈亏算法计算的特殊产品持仓盈亏
      * @return The value.
      */
    public double getSpecProductPositionProfitByAlg() {
      return SpecProductPositionProfitByAlg;
    }


    /**
      * Sets the value of the 'SpecProductPositionProfitByAlg' field.
      * 根据持仓盈亏算法计算的特殊产品持仓盈亏
      * @param value The value of 'SpecProductPositionProfitByAlg'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductPositionProfitByAlg(double value) {
      validate(fields()[48], value);
      this.SpecProductPositionProfitByAlg = value;
      fieldSetFlags()[48] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductPositionProfitByAlg' field has been set.
      * 根据持仓盈亏算法计算的特殊产品持仓盈亏
      * @return True if the 'SpecProductPositionProfitByAlg' field has been set, false otherwise.
      */
    public boolean hasSpecProductPositionProfitByAlg() {
      return fieldSetFlags()[48];
    }


    /**
      * Clears the value of the 'SpecProductPositionProfitByAlg' field.
      * 根据持仓盈亏算法计算的特殊产品持仓盈亏
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductPositionProfitByAlg() {
      fieldSetFlags()[48] = false;
      return this;
    }

    /**
      * Gets the value of the 'SpecProductExchangeMargin' field.
      * 特殊产品交易所保证金
      * @return The value.
      */
    public double getSpecProductExchangeMargin() {
      return SpecProductExchangeMargin;
    }


    /**
      * Sets the value of the 'SpecProductExchangeMargin' field.
      * 特殊产品交易所保证金
      * @param value The value of 'SpecProductExchangeMargin'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setSpecProductExchangeMargin(double value) {
      validate(fields()[49], value);
      this.SpecProductExchangeMargin = value;
      fieldSetFlags()[49] = true;
      return this;
    }

    /**
      * Checks whether the 'SpecProductExchangeMargin' field has been set.
      * 特殊产品交易所保证金
      * @return True if the 'SpecProductExchangeMargin' field has been set, false otherwise.
      */
    public boolean hasSpecProductExchangeMargin() {
      return fieldSetFlags()[49];
    }


    /**
      * Clears the value of the 'SpecProductExchangeMargin' field.
      * 特殊产品交易所保证金
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearSpecProductExchangeMargin() {
      fieldSetFlags()[49] = false;
      return this;
    }

    /**
      * Gets the value of the 'BizType' field.
      * 业务类型
      * @return The value.
      */
    public int getBizType() {
      return BizType;
    }


    /**
      * Sets the value of the 'BizType' field.
      * 业务类型
      * @param value The value of 'BizType'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setBizType(int value) {
      validate(fields()[50], value);
      this.BizType = value;
      fieldSetFlags()[50] = true;
      return this;
    }

    /**
      * Checks whether the 'BizType' field has been set.
      * 业务类型
      * @return True if the 'BizType' field has been set, false otherwise.
      */
    public boolean hasBizType() {
      return fieldSetFlags()[50];
    }


    /**
      * Clears the value of the 'BizType' field.
      * 业务类型
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearBizType() {
      fieldSetFlags()[50] = false;
      return this;
    }

    /**
      * Gets the value of the 'FrozenSwap' field.
      * 延时换汇冻结金额
      * @return The value.
      */
    public double getFrozenSwap() {
      return FrozenSwap;
    }


    /**
      * Sets the value of the 'FrozenSwap' field.
      * 延时换汇冻结金额
      * @param value The value of 'FrozenSwap'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setFrozenSwap(double value) {
      validate(fields()[51], value);
      this.FrozenSwap = value;
      fieldSetFlags()[51] = true;
      return this;
    }

    /**
      * Checks whether the 'FrozenSwap' field has been set.
      * 延时换汇冻结金额
      * @return True if the 'FrozenSwap' field has been set, false otherwise.
      */
    public boolean hasFrozenSwap() {
      return fieldSetFlags()[51];
    }


    /**
      * Clears the value of the 'FrozenSwap' field.
      * 延时换汇冻结金额
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearFrozenSwap() {
      fieldSetFlags()[51] = false;
      return this;
    }

    /**
      * Gets the value of the 'RemainSwap' field.
      * 剩余换汇额度
      * @return The value.
      */
    public double getRemainSwap() {
      return RemainSwap;
    }


    /**
      * Sets the value of the 'RemainSwap' field.
      * 剩余换汇额度
      * @param value The value of 'RemainSwap'.
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder setRemainSwap(double value) {
      validate(fields()[52], value);
      this.RemainSwap = value;
      fieldSetFlags()[52] = true;
      return this;
    }

    /**
      * Checks whether the 'RemainSwap' field has been set.
      * 剩余换汇额度
      * @return True if the 'RemainSwap' field has been set, false otherwise.
      */
    public boolean hasRemainSwap() {
      return fieldSetFlags()[52];
    }


    /**
      * Clears the value of the 'RemainSwap' field.
      * 剩余换汇额度
      * @return This builder.
      */
    public io.rapid.adaptor.ctp.serializable.avro.trader.FtdcTradingAccount.Builder clearRemainSwap() {
      fieldSetFlags()[52] = false;
      return this;
    }

    @Override
    public FtdcTradingAccount build() {
      try {
        FtdcTradingAccount record = new FtdcTradingAccount();
        record.ErrorID = fieldSetFlags()[0] ? this.ErrorID : (java.lang.Integer) defaultValue(fields()[0]);
        record.ErrorMsg = fieldSetFlags()[1] ? this.ErrorMsg : (java.lang.String) defaultValue(fields()[1]);
        record.RequestID = fieldSetFlags()[2] ? this.RequestID : (java.lang.Integer) defaultValue(fields()[2]);
        record.IsLast = fieldSetFlags()[3] ? this.IsLast : (java.lang.Boolean) defaultValue(fields()[3]);
        record.BrokerID = fieldSetFlags()[4] ? this.BrokerID : (java.lang.String) defaultValue(fields()[4]);
        record.AccountID = fieldSetFlags()[5] ? this.AccountID : (java.lang.String) defaultValue(fields()[5]);
        record.PreMortgage = fieldSetFlags()[6] ? this.PreMortgage : (java.lang.Double) defaultValue(fields()[6]);
        record.PreCredit = fieldSetFlags()[7] ? this.PreCredit : (java.lang.Double) defaultValue(fields()[7]);
        record.PreDeposit = fieldSetFlags()[8] ? this.PreDeposit : (java.lang.Double) defaultValue(fields()[8]);
        record.PreBalance = fieldSetFlags()[9] ? this.PreBalance : (java.lang.Double) defaultValue(fields()[9]);
        record.PreMargin = fieldSetFlags()[10] ? this.PreMargin : (java.lang.Double) defaultValue(fields()[10]);
        record.InterestBase = fieldSetFlags()[11] ? this.InterestBase : (java.lang.Double) defaultValue(fields()[11]);
        record.Interest = fieldSetFlags()[12] ? this.Interest : (java.lang.Double) defaultValue(fields()[12]);
        record.Deposit = fieldSetFlags()[13] ? this.Deposit : (java.lang.Double) defaultValue(fields()[13]);
        record.Withdraw = fieldSetFlags()[14] ? this.Withdraw : (java.lang.Double) defaultValue(fields()[14]);
        record.FrozenMargin = fieldSetFlags()[15] ? this.FrozenMargin : (java.lang.Double) defaultValue(fields()[15]);
        record.FrozenCash = fieldSetFlags()[16] ? this.FrozenCash : (java.lang.Double) defaultValue(fields()[16]);
        record.FrozenCommission = fieldSetFlags()[17] ? this.FrozenCommission : (java.lang.Double) defaultValue(fields()[17]);
        record.CurrMargin = fieldSetFlags()[18] ? this.CurrMargin : (java.lang.Double) defaultValue(fields()[18]);
        record.CashIn = fieldSetFlags()[19] ? this.CashIn : (java.lang.Double) defaultValue(fields()[19]);
        record.Commission = fieldSetFlags()[20] ? this.Commission : (java.lang.Double) defaultValue(fields()[20]);
        record.CloseProfit = fieldSetFlags()[21] ? this.CloseProfit : (java.lang.Double) defaultValue(fields()[21]);
        record.PositionProfit = fieldSetFlags()[22] ? this.PositionProfit : (java.lang.Double) defaultValue(fields()[22]);
        record.Balance = fieldSetFlags()[23] ? this.Balance : (java.lang.Double) defaultValue(fields()[23]);
        record.Available = fieldSetFlags()[24] ? this.Available : (java.lang.Double) defaultValue(fields()[24]);
        record.WithdrawQuota = fieldSetFlags()[25] ? this.WithdrawQuota : (java.lang.Double) defaultValue(fields()[25]);
        record.Reserve = fieldSetFlags()[26] ? this.Reserve : (java.lang.Double) defaultValue(fields()[26]);
        record.TradingDay = fieldSetFlags()[27] ? this.TradingDay : (java.lang.String) defaultValue(fields()[27]);
        record.SettlementID = fieldSetFlags()[28] ? this.SettlementID : (java.lang.Integer) defaultValue(fields()[28]);
        record.Credit = fieldSetFlags()[29] ? this.Credit : (java.lang.Double) defaultValue(fields()[29]);
        record.Mortgage = fieldSetFlags()[30] ? this.Mortgage : (java.lang.Double) defaultValue(fields()[30]);
        record.ExchangeMargin = fieldSetFlags()[31] ? this.ExchangeMargin : (java.lang.Double) defaultValue(fields()[31]);
        record.DeliveryMargin = fieldSetFlags()[32] ? this.DeliveryMargin : (java.lang.Double) defaultValue(fields()[32]);
        record.ExchangeDeliveryMargin = fieldSetFlags()[33] ? this.ExchangeDeliveryMargin : (java.lang.Double) defaultValue(fields()[33]);
        record.ReserveBalance = fieldSetFlags()[34] ? this.ReserveBalance : (java.lang.Double) defaultValue(fields()[34]);
        record.CurrencyID = fieldSetFlags()[35] ? this.CurrencyID : (java.lang.String) defaultValue(fields()[35]);
        record.PreFundMortgageIn = fieldSetFlags()[36] ? this.PreFundMortgageIn : (java.lang.Double) defaultValue(fields()[36]);
        record.PreFundMortgageOut = fieldSetFlags()[37] ? this.PreFundMortgageOut : (java.lang.Double) defaultValue(fields()[37]);
        record.FundMortgageIn = fieldSetFlags()[38] ? this.FundMortgageIn : (java.lang.Double) defaultValue(fields()[38]);
        record.FundMortgageOut = fieldSetFlags()[39] ? this.FundMortgageOut : (java.lang.Double) defaultValue(fields()[39]);
        record.FundMortgageAvailable = fieldSetFlags()[40] ? this.FundMortgageAvailable : (java.lang.Double) defaultValue(fields()[40]);
        record.MortgageableFund = fieldSetFlags()[41] ? this.MortgageableFund : (java.lang.Double) defaultValue(fields()[41]);
        record.SpecProductMargin = fieldSetFlags()[42] ? this.SpecProductMargin : (java.lang.Double) defaultValue(fields()[42]);
        record.SpecProductFrozenMargin = fieldSetFlags()[43] ? this.SpecProductFrozenMargin : (java.lang.Double) defaultValue(fields()[43]);
        record.SpecProductCommission = fieldSetFlags()[44] ? this.SpecProductCommission : (java.lang.Double) defaultValue(fields()[44]);
        record.SpecProductFrozenCommission = fieldSetFlags()[45] ? this.SpecProductFrozenCommission : (java.lang.Double) defaultValue(fields()[45]);
        record.SpecProductPositionProfit = fieldSetFlags()[46] ? this.SpecProductPositionProfit : (java.lang.Double) defaultValue(fields()[46]);
        record.SpecProductCloseProfit = fieldSetFlags()[47] ? this.SpecProductCloseProfit : (java.lang.Double) defaultValue(fields()[47]);
        record.SpecProductPositionProfitByAlg = fieldSetFlags()[48] ? this.SpecProductPositionProfitByAlg : (java.lang.Double) defaultValue(fields()[48]);
        record.SpecProductExchangeMargin = fieldSetFlags()[49] ? this.SpecProductExchangeMargin : (java.lang.Double) defaultValue(fields()[49]);
        record.BizType = fieldSetFlags()[50] ? this.BizType : (java.lang.Integer) defaultValue(fields()[50]);
        record.FrozenSwap = fieldSetFlags()[51] ? this.FrozenSwap : (java.lang.Double) defaultValue(fields()[51]);
        record.RemainSwap = fieldSetFlags()[52] ? this.RemainSwap : (java.lang.Double) defaultValue(fields()[52]);
        return record;
      } catch (org.apache.avro.AvroMissingFieldException e) {
        throw e;
      } catch (java.lang.Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumWriter<FtdcTradingAccount>
    WRITER$ = (org.apache.avro.io.DatumWriter<FtdcTradingAccount>)MODEL$.createDatumWriter(SCHEMA$);

  @Override public void writeExternal(java.io.ObjectOutput out)
    throws java.io.IOException {
    WRITER$.write(this, SpecificData.getEncoder(out));
  }

  @SuppressWarnings("unchecked")
  private static final org.apache.avro.io.DatumReader<FtdcTradingAccount>
    READER$ = (org.apache.avro.io.DatumReader<FtdcTradingAccount>)MODEL$.createDatumReader(SCHEMA$);

  @Override public void readExternal(java.io.ObjectInput in)
    throws java.io.IOException {
    READER$.read(this, SpecificData.getDecoder(in));
  }

  @Override protected boolean hasCustomCoders() { return true; }

  @Override public void customEncode(org.apache.avro.io.Encoder out)
    throws java.io.IOException
  {
    out.writeInt(this.ErrorID);

    out.writeString(this.ErrorMsg);

    out.writeInt(this.RequestID);

    out.writeBoolean(this.IsLast);

    out.writeString(this.BrokerID);

    out.writeString(this.AccountID);

    out.writeDouble(this.PreMortgage);

    out.writeDouble(this.PreCredit);

    out.writeDouble(this.PreDeposit);

    out.writeDouble(this.PreBalance);

    out.writeDouble(this.PreMargin);

    out.writeDouble(this.InterestBase);

    out.writeDouble(this.Interest);

    out.writeDouble(this.Deposit);

    out.writeDouble(this.Withdraw);

    out.writeDouble(this.FrozenMargin);

    out.writeDouble(this.FrozenCash);

    out.writeDouble(this.FrozenCommission);

    out.writeDouble(this.CurrMargin);

    out.writeDouble(this.CashIn);

    out.writeDouble(this.Commission);

    out.writeDouble(this.CloseProfit);

    out.writeDouble(this.PositionProfit);

    out.writeDouble(this.Balance);

    out.writeDouble(this.Available);

    out.writeDouble(this.WithdrawQuota);

    out.writeDouble(this.Reserve);

    out.writeString(this.TradingDay);

    out.writeInt(this.SettlementID);

    out.writeDouble(this.Credit);

    out.writeDouble(this.Mortgage);

    out.writeDouble(this.ExchangeMargin);

    out.writeDouble(this.DeliveryMargin);

    out.writeDouble(this.ExchangeDeliveryMargin);

    out.writeDouble(this.ReserveBalance);

    out.writeString(this.CurrencyID);

    out.writeDouble(this.PreFundMortgageIn);

    out.writeDouble(this.PreFundMortgageOut);

    out.writeDouble(this.FundMortgageIn);

    out.writeDouble(this.FundMortgageOut);

    out.writeDouble(this.FundMortgageAvailable);

    out.writeDouble(this.MortgageableFund);

    out.writeDouble(this.SpecProductMargin);

    out.writeDouble(this.SpecProductFrozenMargin);

    out.writeDouble(this.SpecProductCommission);

    out.writeDouble(this.SpecProductFrozenCommission);

    out.writeDouble(this.SpecProductPositionProfit);

    out.writeDouble(this.SpecProductCloseProfit);

    out.writeDouble(this.SpecProductPositionProfitByAlg);

    out.writeDouble(this.SpecProductExchangeMargin);

    out.writeInt(this.BizType);

    out.writeDouble(this.FrozenSwap);

    out.writeDouble(this.RemainSwap);

  }

  @Override public void customDecode(org.apache.avro.io.ResolvingDecoder in)
    throws java.io.IOException
  {
    org.apache.avro.Schema.Field[] fieldOrder = in.readFieldOrderIfDiff();
    if (fieldOrder == null) {
      this.ErrorID = in.readInt();

      this.ErrorMsg = in.readString();

      this.RequestID = in.readInt();

      this.IsLast = in.readBoolean();

      this.BrokerID = in.readString();

      this.AccountID = in.readString();

      this.PreMortgage = in.readDouble();

      this.PreCredit = in.readDouble();

      this.PreDeposit = in.readDouble();

      this.PreBalance = in.readDouble();

      this.PreMargin = in.readDouble();

      this.InterestBase = in.readDouble();

      this.Interest = in.readDouble();

      this.Deposit = in.readDouble();

      this.Withdraw = in.readDouble();

      this.FrozenMargin = in.readDouble();

      this.FrozenCash = in.readDouble();

      this.FrozenCommission = in.readDouble();

      this.CurrMargin = in.readDouble();

      this.CashIn = in.readDouble();

      this.Commission = in.readDouble();

      this.CloseProfit = in.readDouble();

      this.PositionProfit = in.readDouble();

      this.Balance = in.readDouble();

      this.Available = in.readDouble();

      this.WithdrawQuota = in.readDouble();

      this.Reserve = in.readDouble();

      this.TradingDay = in.readString();

      this.SettlementID = in.readInt();

      this.Credit = in.readDouble();

      this.Mortgage = in.readDouble();

      this.ExchangeMargin = in.readDouble();

      this.DeliveryMargin = in.readDouble();

      this.ExchangeDeliveryMargin = in.readDouble();

      this.ReserveBalance = in.readDouble();

      this.CurrencyID = in.readString();

      this.PreFundMortgageIn = in.readDouble();

      this.PreFundMortgageOut = in.readDouble();

      this.FundMortgageIn = in.readDouble();

      this.FundMortgageOut = in.readDouble();

      this.FundMortgageAvailable = in.readDouble();

      this.MortgageableFund = in.readDouble();

      this.SpecProductMargin = in.readDouble();

      this.SpecProductFrozenMargin = in.readDouble();

      this.SpecProductCommission = in.readDouble();

      this.SpecProductFrozenCommission = in.readDouble();

      this.SpecProductPositionProfit = in.readDouble();

      this.SpecProductCloseProfit = in.readDouble();

      this.SpecProductPositionProfitByAlg = in.readDouble();

      this.SpecProductExchangeMargin = in.readDouble();

      this.BizType = in.readInt();

      this.FrozenSwap = in.readDouble();

      this.RemainSwap = in.readDouble();

    } else {
      for (int i = 0; i < 53; i++) {
        switch (fieldOrder[i].pos()) {
        case 0:
          this.ErrorID = in.readInt();
          break;

        case 1:
          this.ErrorMsg = in.readString();
          break;

        case 2:
          this.RequestID = in.readInt();
          break;

        case 3:
          this.IsLast = in.readBoolean();
          break;

        case 4:
          this.BrokerID = in.readString();
          break;

        case 5:
          this.AccountID = in.readString();
          break;

        case 6:
          this.PreMortgage = in.readDouble();
          break;

        case 7:
          this.PreCredit = in.readDouble();
          break;

        case 8:
          this.PreDeposit = in.readDouble();
          break;

        case 9:
          this.PreBalance = in.readDouble();
          break;

        case 10:
          this.PreMargin = in.readDouble();
          break;

        case 11:
          this.InterestBase = in.readDouble();
          break;

        case 12:
          this.Interest = in.readDouble();
          break;

        case 13:
          this.Deposit = in.readDouble();
          break;

        case 14:
          this.Withdraw = in.readDouble();
          break;

        case 15:
          this.FrozenMargin = in.readDouble();
          break;

        case 16:
          this.FrozenCash = in.readDouble();
          break;

        case 17:
          this.FrozenCommission = in.readDouble();
          break;

        case 18:
          this.CurrMargin = in.readDouble();
          break;

        case 19:
          this.CashIn = in.readDouble();
          break;

        case 20:
          this.Commission = in.readDouble();
          break;

        case 21:
          this.CloseProfit = in.readDouble();
          break;

        case 22:
          this.PositionProfit = in.readDouble();
          break;

        case 23:
          this.Balance = in.readDouble();
          break;

        case 24:
          this.Available = in.readDouble();
          break;

        case 25:
          this.WithdrawQuota = in.readDouble();
          break;

        case 26:
          this.Reserve = in.readDouble();
          break;

        case 27:
          this.TradingDay = in.readString();
          break;

        case 28:
          this.SettlementID = in.readInt();
          break;

        case 29:
          this.Credit = in.readDouble();
          break;

        case 30:
          this.Mortgage = in.readDouble();
          break;

        case 31:
          this.ExchangeMargin = in.readDouble();
          break;

        case 32:
          this.DeliveryMargin = in.readDouble();
          break;

        case 33:
          this.ExchangeDeliveryMargin = in.readDouble();
          break;

        case 34:
          this.ReserveBalance = in.readDouble();
          break;

        case 35:
          this.CurrencyID = in.readString();
          break;

        case 36:
          this.PreFundMortgageIn = in.readDouble();
          break;

        case 37:
          this.PreFundMortgageOut = in.readDouble();
          break;

        case 38:
          this.FundMortgageIn = in.readDouble();
          break;

        case 39:
          this.FundMortgageOut = in.readDouble();
          break;

        case 40:
          this.FundMortgageAvailable = in.readDouble();
          break;

        case 41:
          this.MortgageableFund = in.readDouble();
          break;

        case 42:
          this.SpecProductMargin = in.readDouble();
          break;

        case 43:
          this.SpecProductFrozenMargin = in.readDouble();
          break;

        case 44:
          this.SpecProductCommission = in.readDouble();
          break;

        case 45:
          this.SpecProductFrozenCommission = in.readDouble();
          break;

        case 46:
          this.SpecProductPositionProfit = in.readDouble();
          break;

        case 47:
          this.SpecProductCloseProfit = in.readDouble();
          break;

        case 48:
          this.SpecProductPositionProfitByAlg = in.readDouble();
          break;

        case 49:
          this.SpecProductExchangeMargin = in.readDouble();
          break;

        case 50:
          this.BizType = in.readInt();
          break;

        case 51:
          this.FrozenSwap = in.readDouble();
          break;

        case 52:
          this.RemainSwap = in.readDouble();
          break;

        default:
          throw new java.io.IOException("Corrupt ResolvingDecoder.");
        }
      }
    }
  }
}










